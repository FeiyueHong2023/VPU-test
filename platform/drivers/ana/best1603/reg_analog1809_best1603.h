/***************************************************************************
 *
 * Copyright 2015-2023 BES.
 * All rights reserved. All unpublished rights reserved.
 *
 * No part of this work may be used or reproduced in any form or by any
 * means, or stored in a database or retrieval system, without prior written
 * permission of BES.
 *
 * Use of this work is governed by a license granted by BES.
 * This work contains confidential and proprietary information of
 * BES. which is protected by copyright, trade secret,
 * trademark and other intellectual property rights.
 *
 ****************************************************************************/
#ifndef __REG_ANALOG1809_BEST1603_H__
#define __REG_ANALOG1809_BEST1603_H__

#include "plat_types.h"

enum ANA_REG_T {
    ANA_REG_01 = 0x01,
    ANA_REG_02,
    ANA_REG_03,
    ANA_REG_04,
    ANA_REG_05,
    ANA_REG_06,
    ANA_REG_07,
    ANA_REG_08,
    ANA_REG_09,
    ANA_REG_0A,
    ANA_REG_0B,
    ANA_REG_0C,
    ANA_REG_0D,
    ANA_REG_0E,
    ANA_REG_0F,
    ANA_REG_10,
    ANA_REG_11,
    ANA_REG_12,
    ANA_REG_13,
    ANA_REG_14,
    ANA_REG_15,
    ANA_REG_16,
    ANA_REG_17,
    ANA_REG_18,
    ANA_REG_19,
    ANA_REG_1A,
    ANA_REG_1B,
    ANA_REG_1C,
    ANA_REG_1D,
    ANA_REG_1E,
    ANA_REG_1F,
    ANA_REG_20,
    ANA_REG_21,
    ANA_REG_22,
    ANA_REG_23,
    ANA_REG_24,
    ANA_REG_25,
    ANA_REG_26,
    ANA_REG_27,
    ANA_REG_28,
    ANA_REG_29,
    ANA_REG_2A,
    ANA_REG_2B,
    ANA_REG_2C,
    ANA_REG_2D,
    ANA_REG_2E,
    ANA_REG_2F,
    ANA_REG_30,
    ANA_REG_31,
    ANA_REG_32,
    ANA_REG_33,
    ANA_REG_34,
    ANA_REG_35,
    ANA_REG_36,
    ANA_REG_37,
    ANA_REG_38,
    ANA_REG_39,
    ANA_REG_3A,
    ANA_REG_3B,
    ANA_REG_3C,
    ANA_REG_3D,
    ANA_REG_3E,
    ANA_REG_3F,
    ANA_REG_40,
    ANA_REG_41,
    ANA_REG_42,
    ANA_REG_43,
    ANA_REG_44,
    ANA_REG_45,
    ANA_REG_46,
    ANA_REG_47,
    ANA_REG_48,
    ANA_REG_49,
    ANA_REG_4A,
    ANA_REG_4B,
    ANA_REG_4C,
    ANA_REG_4D,
    ANA_REG_4E,
    ANA_REG_4F,
    ANA_REG_50,
    ANA_REG_51,
    ANA_REG_52,
    ANA_REG_53,
    ANA_REG_54,
    ANA_REG_55,
    ANA_REG_56,
    ANA_REG_57,
    ANA_REG_58,
    ANA_REG_59,
    ANA_REG_5A,
    ANA_REG_5B,
    ANA_REG_5C,
    ANA_REG_5D,
    ANA_REG_5E,
    ANA_REG_5F,
    ANA_REG_60,
    ANA_REG_61,
    ANA_REG_62,
    ANA_REG_63,
    ANA_REG_64,
    ANA_REG_65,
    ANA_REG_66,
    ANA_REG_67,
    ANA_REG_68,
    ANA_REG_69,
    ANA_REG_6A,
    ANA_REG_6B,
    ANA_REG_6C,
    ANA_REG_6D,
    ANA_REG_6E,
    ANA_REG_6F,

    ANA_REG_100 = 0x100,
    ANA_REG_101,
    ANA_REG_102,
    ANA_REG_103,
    ANA_REG_104,
    ANA_REG_105,
    ANA_REG_106,
    ANA_REG_107,
    ANA_REG_108,
    ANA_REG_109,
    ANA_REG_10A,
    ANA_REG_10B,
    ANA_REG_10C,
    ANA_REG_10D,
    ANA_REG_10E,
    ANA_REG_10F,
    ANA_REG_110,
    ANA_REG_111,
    ANA_REG_112,
    ANA_REG_113,
    ANA_REG_114,
    ANA_REG_115,
    ANA_REG_116,
    ANA_REG_117,
    ANA_REG_118,
    ANA_REG_119,
    ANA_REG_11A,
    ANA_REG_11B,
    ANA_REG_11C,
    ANA_REG_11D,
    ANA_REG_11E,
    ANA_REG_11F,
    ANA_REG_120,
    ANA_REG_121,
    ANA_REG_122,
    ANA_REG_123,
    ANA_REG_124,
    ANA_REG_125,
    ANA_REG_126,
    ANA_REG_127,
    ANA_REG_128,
    ANA_REG_129,
    ANA_REG_12A,
    ANA_REG_12B,
    ANA_REG_12C,
    ANA_REG_12D,
    ANA_REG_12E,
    ANA_REG_12F,

    ANA_REG_14F = 0x14F,
    ANA_REG_150,
    ANA_REG_151,
    ANA_REG_152,
    ANA_REG_153,
    ANA_REG_154,
    ANA_REG_155,
    ANA_REG_156,
    ANA_REG_157,
    ANA_REG_158,
    ANA_REG_159,
    ANA_REG_15A,
    ANA_REG_15B,
    ANA_REG_15C,
    ANA_REG_15D,
    ANA_REG_15E,
    ANA_REG_15F,

    ANA_REG_200 = 0x200,
    ANA_REG_201,
    ANA_REG_202,
    ANA_REG_203,
    ANA_REG_204,
    ANA_REG_205,
    ANA_REG_206,
    ANA_REG_207,
    ANA_REG_208,
    ANA_REG_209,
    ANA_REG_20A,
    ANA_REG_20B,
    ANA_REG_20C,
    ANA_REG_20D,
    ANA_REG_20E,
    ANA_REG_20F,
    ANA_REG_210,
    ANA_REG_211,
    ANA_REG_212,
    ANA_REG_213,
    ANA_REG_214,
    ANA_REG_215,
    ANA_REG_216,
    ANA_REG_217,
    ANA_REG_218,
    ANA_REG_219,
    ANA_REG_21A,
    ANA_REG_21B,
    ANA_REG_21C,
    ANA_REG_21D,
    ANA_REG_21E,
    ANA_REG_21F,
    ANA_REG_220,
    ANA_REG_221,
    ANA_REG_222,
    ANA_REG_223,
    ANA_REG_224,
    ANA_REG_225,
    ANA_REG_226,
    ANA_REG_227,
    ANA_REG_228,
    ANA_REG_229,
    ANA_REG_22A,
    ANA_REG_22B,
    ANA_REG_22C,
    ANA_REG_22D,
    ANA_REG_22E,
    ANA_REG_22F,
    ANA_REG_230,
    ANA_REG_231,
    ANA_REG_232,
    ANA_REG_233,
    ANA_REG_234,
    ANA_REG_235,
    ANA_REG_236,
    ANA_REG_237,
    ANA_REG_238,
    ANA_REG_239,
    ANA_REG_23A,
    ANA_REG_23B,
    ANA_REG_23C,
    ANA_REG_23D,
    ANA_REG_23E,
    ANA_REG_23F,
    ANA_REG_240,
    ANA_REG_241,
    ANA_REG_242,
    ANA_REG_243,
    ANA_REG_244,
    ANA_REG_245,
    ANA_REG_246,
    ANA_REG_247,
    ANA_REG_248,
    ANA_REG_249,
    ANA_REG_24A,
    ANA_REG_24B,
    ANA_REG_24C,
    ANA_REG_24D,
    ANA_REG_24E,
    ANA_REG_24F,
    ANA_REG_250,
    ANA_REG_251,
    ANA_REG_252,
    ANA_REG_253,
    ANA_REG_254,
    ANA_REG_255,
    ANA_REG_256,
    ANA_REG_257,
    ANA_REG_258,
    ANA_REG_259,
    ANA_REG_25A,
    ANA_REG_25B,
    ANA_REG_25C,
    ANA_REG_25D,
    ANA_REG_25E,
    ANA_REG_25F,
    ANA_REG_260,
    ANA_REG_261,
    ANA_REG_262,
    ANA_REG_263,
    ANA_REG_264,
    ANA_REG_265,
    ANA_REG_266,
    ANA_REG_267,
    ANA_REG_268,
    ANA_REG_269,
    ANA_REG_26A,
    ANA_REG_26B,
    ANA_REG_26C,
    ANA_REG_26D,
    ANA_REG_26E,
    ANA_REG_26F,
    ANA_REG_270,
    ANA_REG_271,
    ANA_REG_272,
    ANA_REG_273,
    ANA_REG_274,
    ANA_REG_275,
    ANA_REG_276,
    ANA_REG_277,
    ANA_REG_278,
    ANA_REG_279,
    ANA_REG_27A,
    ANA_REG_27B,
    ANA_REG_27C,
    ANA_REG_27D,
    ANA_REG_27E,
    ANA_REG_27F,
    ANA_REG_280,
    ANA_REG_281,
    ANA_REG_282,
    ANA_REG_283,
    ANA_REG_284,
    ANA_REG_285,
    ANA_REG_286,
    ANA_REG_287,
    ANA_REG_288,
    ANA_REG_289,
    ANA_REG_28A,
    ANA_REG_28B,
    ANA_REG_28C,
    ANA_REG_28D,
    ANA_REG_28E,
    ANA_REG_28F,
    ANA_REG_290,
    ANA_REG_291,
    ANA_REG_292,
    ANA_REG_293,
    ANA_REG_294,
    ANA_REG_295,
    ANA_REG_296,
    ANA_REG_297,
    ANA_REG_298,
    ANA_REG_299,
    ANA_REG_29A,
    ANA_REG_29B,
    ANA_REG_29C,
    ANA_REG_29D,
    ANA_REG_29E,
    ANA_REG_29F,
    ANA_REG_2A0,
    ANA_REG_2A1,
    ANA_REG_2A2,
    ANA_REG_2A3,
    ANA_REG_2A4,
    ANA_REG_2A5,
    ANA_REG_2A6,
    ANA_REG_2A7,
    ANA_REG_2A8,
    ANA_REG_2A9,
    ANA_REG_2AA,
    ANA_REG_2AB,
    ANA_REG_2AC,
    ANA_REG_2AD,
    ANA_REG_2AE,
    ANA_REG_2AF,
    ANA_REG_2B0,
    ANA_REG_2B1,
    ANA_REG_2B2,
    ANA_REG_2B3,
    ANA_REG_2B4,
    ANA_REG_2B5,
    ANA_REG_2B6,
    ANA_REG_2B7,
    ANA_REG_2B8,
    ANA_REG_2B9,
    ANA_REG_2BA,
    ANA_REG_2BB,
    ANA_REG_2BC,
    ANA_REG_2BD,
    ANA_REG_2BE,
    ANA_REG_2BF,
    ANA_REG_2C0,
    ANA_REG_2C1,
    ANA_REG_2C2,
    ANA_REG_2C3,
    ANA_REG_2C4,
    ANA_REG_2C5,
    ANA_REG_2C6,
    ANA_REG_2C7,
    ANA_REG_2C8,
    ANA_REG_2C9,
    ANA_REG_2CA,
    ANA_REG_2CB,
    ANA_REG_2CC,
    ANA_REG_2CD,
    ANA_REG_2CE,
    ANA_REG_2CF,
    ANA_REG_2D0,
    ANA_REG_2D1,
    ANA_REG_2D2,
    ANA_REG_2D3,
    ANA_REG_2D4,
    ANA_REG_2D5,
    ANA_REG_2D6,
    ANA_REG_2D7,
    ANA_REG_2D8,
    ANA_REG_2D9,
    ANA_REG_2DA,
    ANA_REG_2DB,
    ANA_REG_2DC,
    ANA_REG_2DD,
    ANA_REG_2DE,
    ANA_REG_2DF,
    ANA_REG_2E0,
    ANA_REG_2E1,
    ANA_REG_2E2,
    ANA_REG_2E3,
    ANA_REG_2E4,
    ANA_REG_2E5,
    ANA_REG_2E6,
    ANA_REG_2E7,
    ANA_REG_2E8,
    ANA_REG_2E9,
    ANA_REG_2EA,
    ANA_REG_2EB,
    ANA_REG_2EC,
    ANA_REG_2ED,
    ANA_REG_2EE,
    ANA_REG_2EF,
    ANA_REG_2F0,
    ANA_REG_2F1,
    ANA_REG_2F2,
    ANA_REG_2F3,
    ANA_REG_2F4,
    ANA_REG_2F5,
    ANA_REG_2F6,
    ANA_REG_2F7,
    ANA_REG_2F8,
    ANA_REG_2F9,
    ANA_REG_2FA,
    ANA_REG_2FB,
    ANA_REG_2FC,
    ANA_REG_2FD,
    ANA_REG_2FE,
    ANA_REG_2FF,
    ANA_REG_300,
    ANA_REG_301,
    ANA_REG_302,
    ANA_REG_303,
    ANA_REG_304,
    ANA_REG_305,
    ANA_REG_306,
    ANA_REG_307,
    ANA_REG_308,
    ANA_REG_309,
    ANA_REG_30A,
    ANA_REG_30B,
    ANA_REG_30C,
    ANA_REG_30D,
    ANA_REG_30E,
    ANA_REG_30F,
    ANA_REG_310,
    ANA_REG_311,
    ANA_REG_312,
    ANA_REG_313,
    ANA_REG_314,
    ANA_REG_315,
    ANA_REG_316,
    ANA_REG_317,
    ANA_REG_318,
    ANA_REG_319,
    ANA_REG_31A,
    ANA_REG_31B,
    ANA_REG_31C,
    ANA_REG_31D,
    ANA_REG_31E,
    ANA_REG_31F,
    ANA_REG_320,
    ANA_REG_321,
    ANA_REG_322,
    ANA_REG_323,
    ANA_REG_324,
    ANA_REG_325,
    ANA_REG_326,
    ANA_REG_327,
    ANA_REG_328,
    ANA_REG_329,
    ANA_REG_32A,
    ANA_REG_32B,
    ANA_REG_32C,
    ANA_REG_32D,
    ANA_REG_32E,
    ANA_REG_32F,
    ANA_REG_330,
    ANA_REG_331,
    ANA_REG_332,
    ANA_REG_333,
    ANA_REG_334,
    ANA_REG_335,
    ANA_REG_336,
    ANA_REG_337,
    ANA_REG_338,
    ANA_REG_339,
    ANA_REG_33A,
    ANA_REG_33B,
    ANA_REG_33C,
    ANA_REG_33D,
    ANA_REG_33E,
    ANA_REG_33F,
    ANA_REG_340,
    ANA_REG_341,
    ANA_REG_342,
    ANA_REG_343,
    ANA_REG_344,
    ANA_REG_345,
    ANA_REG_346,
    ANA_REG_347,
    ANA_REG_348,
    ANA_REG_349,
    ANA_REG_34A,
    ANA_REG_34B,
    ANA_REG_34C,
    ANA_REG_34D,
    ANA_REG_34E,
    ANA_REG_34F,
    ANA_REG_350,
    ANA_REG_351,
    ANA_REG_352,
    ANA_REG_353,
    ANA_REG_354,
    ANA_REG_355,
    ANA_REG_356,
    ANA_REG_357,
    ANA_REG_358,
    ANA_REG_359,
    ANA_REG_35A,
    ANA_REG_35B,
    ANA_REG_35C,
    ANA_REG_35D,
    ANA_REG_35E,
    ANA_REG_35F,
    ANA_REG_360,
    ANA_REG_361,
    ANA_REG_362,
    ANA_REG_363,
    ANA_REG_364,
    ANA_REG_365,
    ANA_REG_366,
    ANA_REG_367,
    ANA_REG_368,
    ANA_REG_369,
    ANA_REG_36A,
    ANA_REG_36B,
    ANA_REG_36C,
    ANA_REG_36D,
    ANA_REG_36E,
    ANA_REG_36F,
    ANA_REG_370,
    ANA_REG_371,
    ANA_REG_372,
    ANA_REG_373,
    ANA_REG_374,
    ANA_REG_375,
    ANA_REG_376,
    ANA_REG_377,
    ANA_REG_378,
    ANA_REG_379,
    ANA_REG_37A,
    ANA_REG_37B,
    ANA_REG_37C,
    ANA_REG_37D,
    ANA_REG_37E,
    ANA_REG_37F,
    ANA_REG_380,
    ANA_REG_381,
    ANA_REG_382,
    ANA_REG_383,
    ANA_REG_384,
    ANA_REG_385,

};

// REG_00
#define REVID_SHIFT                         0
#define REVID_MASK                          (0xF << REVID_SHIFT)
#define REVID(n)                            BITFIELD_VAL(REVID, n)
#define CHIPID_SHIFT                        4
#define CHIPID_MASK                         (0xFFF << CHIPID_SHIFT)
#define CHIPID(n)                           BITFIELD_VAL(CHIPID, n)

// REG_01
#define REG_CODEC_EN_ADCA                   (1 << 0)
#define REG_CODEC_RESET_ADCA                (1 << 1)
#define CFG_RESET_ADCA_DR                   (1 << 2)
#define REG_CODEC_IDETA_EN                  (1 << 3)
#define REG_CODEC_ADCA_CLK_SEL              (1 << 4)
#define REG_CODEC_ADCA_CH_SEL_INT_SHIFT     5
#define REG_CODEC_ADCA_CH_SEL_INT_MASK      (0x3 << REG_CODEC_ADCA_CH_SEL_INT_SHIFT)
#define REG_CODEC_ADCA_CH_SEL_INT(n)        BITFIELD_VAL(REG_CODEC_ADCA_CH_SEL_INT, n)
#define REG_CODEC_ADCA_GAIN_UPDATE          (1 << 9)
#define REG_CODEC_ADCA_GAIN_BIT_SHIFT       10
#define REG_CODEC_ADCA_GAIN_BIT_MASK        (0x7 << REG_CODEC_ADCA_GAIN_BIT_SHIFT)
#define REG_CODEC_ADCA_GAIN_BIT(n)          BITFIELD_VAL(REG_CODEC_ADCA_GAIN_BIT, n)
#define REG_CODEC_ADCA_PRE_CHARGE           (1 << 13)
#define CFG_PRE_CHARGE_ADCA_DR              (1 << 14)

// REG_02
#define REG_CODEC_ADCA_RES_2P5K_DR          (1 << 0)
#define REG_CODEC_ADCA_RES_2P5K_UPDATE      (1 << 1)
#define REG_CODEC_ADCA_RES_2P5K             (1 << 2)
#define REG_CODEC_ADCA_CAP_BIT1_SHIFT       3
#define REG_CODEC_ADCA_CAP_BIT1_MASK        (0xF << REG_CODEC_ADCA_CAP_BIT1_SHIFT)
#define REG_CODEC_ADCA_CAP_BIT1(n)          BITFIELD_VAL(REG_CODEC_ADCA_CAP_BIT1, n)
#define REG_CODEC_ADCA_CAP_BIT2_SHIFT       10
#define REG_CODEC_ADCA_CAP_BIT2_MASK        (0xF << REG_CODEC_ADCA_CAP_BIT2_SHIFT)
#define REG_CODEC_ADCA_CAP_BIT2(n)          BITFIELD_VAL(REG_CODEC_ADCA_CAP_BIT2, n)

// REG_03
#define REG_CODEC_ADCA_CAP_BIT3_SHIFT       0
#define REG_CODEC_ADCA_CAP_BIT3_MASK        (0xF << REG_CODEC_ADCA_CAP_BIT3_SHIFT)
#define REG_CODEC_ADCA_CAP_BIT3(n)          BITFIELD_VAL(REG_CODEC_ADCA_CAP_BIT3, n)
#define REG_CODEC_ADCA_OP1_IBIT_SHIFT       5
#define REG_CODEC_ADCA_OP1_IBIT_MASK        (0x3 << REG_CODEC_ADCA_OP1_IBIT_SHIFT)
#define REG_CODEC_ADCA_OP1_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCA_OP1_IBIT, n)
#define REG_CODEC_ADCA_OP2_IBIT_SHIFT       7
#define REG_CODEC_ADCA_OP2_IBIT_MASK        (0x3 << REG_CODEC_ADCA_OP2_IBIT_SHIFT)
#define REG_CODEC_ADCA_OP2_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCA_OP2_IBIT, n)
#define REG_CODEC_ADCA_OP3_IBIT_SHIFT       9
#define REG_CODEC_ADCA_OP3_IBIT_MASK        (0x3 << REG_CODEC_ADCA_OP3_IBIT_SHIFT)
#define REG_CODEC_ADCA_OP3_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCA_OP3_IBIT, n)
#define REG_CODEC_ADCA_OP4_IBIT_SHIFT       11
#define REG_CODEC_ADCA_OP4_IBIT_MASK        (0x3 << REG_CODEC_ADCA_OP4_IBIT_SHIFT)
#define REG_CODEC_ADCA_OP4_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCA_OP4_IBIT, n)

// REG_04
#define REG_CODEC_ADCA_IBSEL_OFFSET_SHIFT   0
#define REG_CODEC_ADCA_IBSEL_OFFSET_MASK    (0xF << REG_CODEC_ADCA_IBSEL_OFFSET_SHIFT)
#define REG_CODEC_ADCA_IBSEL_OFFSET(n)      BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_OFFSET, n)
#define REG_CODEC_ADCA_IBSEL_OP1_SHIFT      4
#define REG_CODEC_ADCA_IBSEL_OP1_MASK       (0xF << REG_CODEC_ADCA_IBSEL_OP1_SHIFT)
#define REG_CODEC_ADCA_IBSEL_OP1(n)         BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_OP1, n)
#define REG_CODEC_ADCA_IBSEL_OP2_SHIFT      8
#define REG_CODEC_ADCA_IBSEL_OP2_MASK       (0xF << REG_CODEC_ADCA_IBSEL_OP2_SHIFT)
#define REG_CODEC_ADCA_IBSEL_OP2(n)         BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_OP2, n)
#define REG_CODEC_ADCA_IBSEL_OP3_SHIFT      12
#define REG_CODEC_ADCA_IBSEL_OP3_MASK       (0xF << REG_CODEC_ADCA_IBSEL_OP3_SHIFT)
#define REG_CODEC_ADCA_IBSEL_OP3(n)         BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_OP3, n)

// REG_05
#define REG_CODEC_ADCA_IBSEL_OP4_SHIFT      0
#define REG_CODEC_ADCA_IBSEL_OP4_MASK       (0xF << REG_CODEC_ADCA_IBSEL_OP4_SHIFT)
#define REG_CODEC_ADCA_IBSEL_OP4(n)         BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_OP4, n)
#define REG_CODEC_ADCA_IBSEL_REG_SHIFT      4
#define REG_CODEC_ADCA_IBSEL_REG_MASK       (0xF << REG_CODEC_ADCA_IBSEL_REG_SHIFT)
#define REG_CODEC_ADCA_IBSEL_REG(n)         BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_REG, n)
#define REG_CODEC_ADCA_IBSEL_VCOMP_SHIFT    8
#define REG_CODEC_ADCA_IBSEL_VCOMP_MASK     (0xF << REG_CODEC_ADCA_IBSEL_VCOMP_SHIFT)
#define REG_CODEC_ADCA_IBSEL_VCOMP(n)       BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_VCOMP, n)
#define REG_CODEC_ADCA_IBSEL_VREF_SHIFT     12
#define REG_CODEC_ADCA_IBSEL_VREF_MASK      (0xF << REG_CODEC_ADCA_IBSEL_VREF_SHIFT)
#define REG_CODEC_ADCA_IBSEL_VREF(n)        BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_VREF, n)

// REG_06
#define REG_CODEC_ADCA_IBSEL_DAC2_SHIFT     4
#define REG_CODEC_ADCA_IBSEL_DAC2_MASK      (0xF << REG_CODEC_ADCA_IBSEL_DAC2_SHIFT)
#define REG_CODEC_ADCA_IBSEL_DAC2(n)        BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_DAC2, n)
#define REG_ADCA_OFFSET_CAL_SHIFT           8
#define REG_ADCA_OFFSET_CAL_MASK            (0x1F << REG_ADCA_OFFSET_CAL_SHIFT)
#define REG_ADCA_OFFSET_CAL(n)              BITFIELD_VAL(REG_ADCA_OFFSET_CAL, n)

// REG_07
#define REG_CODEC_ADCA_OFFSET_BIT_SHIFT     0
#define REG_CODEC_ADCA_OFFSET_BIT_MASK      (0x3FFF << REG_CODEC_ADCA_OFFSET_BIT_SHIFT)
#define REG_CODEC_ADCA_OFFSET_BIT(n)        BITFIELD_VAL(REG_CODEC_ADCA_OFFSET_BIT, n)
#define REG_ADCA_DVDD_SEL                   (1 << 14)

// REG_08
#define REG_CODEC_ADCA_VREF_SEL_SHIFT       0
#define REG_CODEC_ADCA_VREF_SEL_MASK        (0xF << REG_CODEC_ADCA_VREF_SEL_SHIFT)
#define REG_CODEC_ADCA_VREF_SEL(n)          BITFIELD_VAL(REG_CODEC_ADCA_VREF_SEL, n)
#define ADCA_TIMER_RSTN_DLY_SHIFT           8
#define ADCA_TIMER_RSTN_DLY_MASK            (0x3F << ADCA_TIMER_RSTN_DLY_SHIFT)
#define ADCA_TIMER_RSTN_DLY(n)              BITFIELD_VAL(ADCA_TIMER_RSTN_DLY, n)

// REG_09
#define ADCA_PRE_CHARGE_TIMER_DLY_SHIFT     4
#define ADCA_PRE_CHARGE_TIMER_DLY_MASK      (0xFF << ADCA_PRE_CHARGE_TIMER_DLY_SHIFT)
#define ADCA_PRE_CHARGE_TIMER_DLY(n)        BITFIELD_VAL(ADCA_PRE_CHARGE_TIMER_DLY, n)

// REG_0D
#define REG_CODEC_ADCA_BUFFERN_C_SEL        (1 << 0)
#define REG_CODEC_ADCA_BUFFERN_IBIT_SHIFT   1
#define REG_CODEC_ADCA_BUFFERN_IBIT_MASK    (0x3 << REG_CODEC_ADCA_BUFFERN_IBIT_SHIFT)
#define REG_CODEC_ADCA_BUFFERN_IBIT(n)      BITFIELD_VAL(REG_CODEC_ADCA_BUFFERN_IBIT, n)
#define REG_CODEC_ADCA_BUFFERP_C_SEL        (1 << 3)
#define REG_CODEC_ADCA_BUFFERP_IBIT_SHIFT   4
#define REG_CODEC_ADCA_BUFFERP_IBIT_MASK    (0x3 << REG_CODEC_ADCA_BUFFERP_IBIT_SHIFT)
#define REG_CODEC_ADCA_BUFFERP_IBIT(n)      BITFIELD_VAL(REG_CODEC_ADCA_BUFFERP_IBIT, n)
#define REG_CODEC_ADCA_IBSEL_BIAS_BUFFER_SHIFT 6
#define REG_CODEC_ADCA_IBSEL_BIAS_BUFFER_MASK (0xF << REG_CODEC_ADCA_IBSEL_BIAS_BUFFER_SHIFT)
#define REG_CODEC_ADCA_IBSEL_BIAS_BUFFER(n) BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_BIAS_BUFFER, n)
#define REG_CODEC_ADCA_IBSEL_RES_VOLT_SHIFT 10
#define REG_CODEC_ADCA_IBSEL_RES_VOLT_MASK  (0xF << REG_CODEC_ADCA_IBSEL_RES_VOLT_SHIFT)
#define REG_CODEC_ADCA_IBSEL_RES_VOLT(n)    BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_RES_VOLT, n)

// REG_0E
#define REG_CODEC_ADCA_IBSEL_VCM_DAC_SHIFT  0
#define REG_CODEC_ADCA_IBSEL_VCM_DAC_MASK   (0xF << REG_CODEC_ADCA_IBSEL_VCM_DAC_SHIFT)
#define REG_CODEC_ADCA_IBSEL_VCM_DAC(n)     BITFIELD_VAL(REG_CODEC_ADCA_IBSEL_VCM_DAC, n)
#define REG_CODEC_ADCA_JUMP_BIT_SHIFT       4
#define REG_CODEC_ADCA_JUMP_BIT_MASK        (0x7 << REG_CODEC_ADCA_JUMP_BIT_SHIFT)
#define REG_CODEC_ADCA_JUMP_BIT(n)          BITFIELD_VAL(REG_CODEC_ADCA_JUMP_BIT, n)
#define REG_CODEC_ADCA_JUMP_EN              (1 << 7)
#define REG_CODEC_ADCA_VCM_DAC_C_SEL        (1 << 8)
#define REG_CODEC_ADCA_VCM_DAC_IBIT_SHIFT   9
#define REG_CODEC_ADCA_VCM_DAC_IBIT_MASK    (0x3 << REG_CODEC_ADCA_VCM_DAC_IBIT_SHIFT)
#define REG_CODEC_ADCA_VCM_DAC_IBIT(n)      BITFIELD_VAL(REG_CODEC_ADCA_VCM_DAC_IBIT, n)
#define REG_CODEC_ADCA_OP1_C_SEL            (1 << 11)
#define REG_CODEC_ADCA_OP2_C_SEL            (1 << 12)
#define REG_CODEC_ADCA_OP3_C_SEL            (1 << 13)
#define REG_CODEC_ADCA_OP4_C_SEL            (1 << 14)

// REG_0F
#define REG_ADCA_INPUT_CM_MODE_SHIFT        0
#define REG_ADCA_INPUT_CM_MODE_MASK         (0x7 << REG_ADCA_INPUT_CM_MODE_SHIFT)
#define REG_ADCA_INPUT_CM_MODE(n)           BITFIELD_VAL(REG_ADCA_INPUT_CM_MODE, n)
#define REG_CODEC_CLK_SW_IN_ADCA_INT        (1 << 3)
#define REG_CODEC_EN_OFF_ADCA               (1 << 4)
#define REG_CODEC_ADCA_REG_VSEL_SHIFT       5
#define REG_CODEC_ADCA_REG_VSEL_MASK        (0xF << REG_CODEC_ADCA_REG_VSEL_SHIFT)
#define REG_CODEC_ADCA_REG_VSEL(n)          BITFIELD_VAL(REG_CODEC_ADCA_REG_VSEL, n)
#define REG_CODEC_CLK_SW_IN_ADCA_DR         (1 << 9)

// REG_10
#define CHIP_ADDR_I2C_SHIFT                 0
#define CHIP_ADDR_I2C_MASK                  (0x7F << CHIP_ADDR_I2C_SHIFT)
#define CHIP_ADDR_I2C(n)                    BITFIELD_VAL(CHIP_ADDR_I2C, n)

// REG_11
#define REG_CODEC_EN_ADCB                   (1 << 0)
#define REG_CODEC_RESET_ADCB                (1 << 1)
#define CFG_RESET_ADCB_DR                   (1 << 2)
#define REG_CODEC_IDETB_EN                  (1 << 3)
#define REG_CODEC_ADCB_CLK_SEL              (1 << 4)
#define REG_CODEC_ADCB_CHANNEL_SEL_SHIFT    5
#define REG_CODEC_ADCB_CHANNEL_SEL_MASK     (0x3 << REG_CODEC_ADCB_CHANNEL_SEL_SHIFT)
#define REG_CODEC_ADCB_CHANNEL_SEL(n)       BITFIELD_VAL(REG_CODEC_ADCB_CHANNEL_SEL, n)
#define REG_CODEC_ADCB_GAIN_UPDATE          (1 << 9)
#define REG_CODEC_ADCB_GAIN_BIT_SHIFT       10
#define REG_CODEC_ADCB_GAIN_BIT_MASK        (0x7 << REG_CODEC_ADCB_GAIN_BIT_SHIFT)
#define REG_CODEC_ADCB_GAIN_BIT(n)          BITFIELD_VAL(REG_CODEC_ADCB_GAIN_BIT, n)
#define REG_CODEC_ADCB_PRE_CHARGE           (1 << 13)
#define CFG_PRE_CHARGE_ADCB_DR              (1 << 14)

// REG_12
#define REG_CODEC_ADCB_RES_2P5K_DR          (1 << 0)
#define REG_CODEC_ADCB_RES_2P5K_UPDATE      (1 << 1)
#define REG_CODEC_ADCB_RES_2P5K             (1 << 2)
#define REG_CODEC_ADCB_CAP_BIT1_SHIFT       3
#define REG_CODEC_ADCB_CAP_BIT1_MASK        (0xF << REG_CODEC_ADCB_CAP_BIT1_SHIFT)
#define REG_CODEC_ADCB_CAP_BIT1(n)          BITFIELD_VAL(REG_CODEC_ADCB_CAP_BIT1, n)
#define REG_CODEC_ADCB_CAP_BIT2_SHIFT       10
#define REG_CODEC_ADCB_CAP_BIT2_MASK        (0xF << REG_CODEC_ADCB_CAP_BIT2_SHIFT)
#define REG_CODEC_ADCB_CAP_BIT2(n)          BITFIELD_VAL(REG_CODEC_ADCB_CAP_BIT2, n)

// REG_13
#define REG_CODEC_ADCB_CAP_BIT3_SHIFT       0
#define REG_CODEC_ADCB_CAP_BIT3_MASK        (0xF << REG_CODEC_ADCB_CAP_BIT3_SHIFT)
#define REG_CODEC_ADCB_CAP_BIT3(n)          BITFIELD_VAL(REG_CODEC_ADCB_CAP_BIT3, n)
#define REG_CODEC_ADCB_OP1_IBIT_SHIFT       5
#define REG_CODEC_ADCB_OP1_IBIT_MASK        (0x3 << REG_CODEC_ADCB_OP1_IBIT_SHIFT)
#define REG_CODEC_ADCB_OP1_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCB_OP1_IBIT, n)
#define REG_CODEC_ADCB_OP2_IBIT_SHIFT       7
#define REG_CODEC_ADCB_OP2_IBIT_MASK        (0x3 << REG_CODEC_ADCB_OP2_IBIT_SHIFT)
#define REG_CODEC_ADCB_OP2_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCB_OP2_IBIT, n)
#define REG_CODEC_ADCB_OP3_IBIT_SHIFT       9
#define REG_CODEC_ADCB_OP3_IBIT_MASK        (0x3 << REG_CODEC_ADCB_OP3_IBIT_SHIFT)
#define REG_CODEC_ADCB_OP3_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCB_OP3_IBIT, n)
#define REG_CODEC_ADCB_OP4_IBIT_SHIFT       11
#define REG_CODEC_ADCB_OP4_IBIT_MASK        (0x3 << REG_CODEC_ADCB_OP4_IBIT_SHIFT)
#define REG_CODEC_ADCB_OP4_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCB_OP4_IBIT, n)

// REG_14
#define REG_CODEC_ADCB_IBSEL_OFFSET_SHIFT   0
#define REG_CODEC_ADCB_IBSEL_OFFSET_MASK    (0xF << REG_CODEC_ADCB_IBSEL_OFFSET_SHIFT)
#define REG_CODEC_ADCB_IBSEL_OFFSET(n)      BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_OFFSET, n)
#define REG_CODEC_ADCB_IBSEL_OP1_SHIFT      4
#define REG_CODEC_ADCB_IBSEL_OP1_MASK       (0xF << REG_CODEC_ADCB_IBSEL_OP1_SHIFT)
#define REG_CODEC_ADCB_IBSEL_OP1(n)         BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_OP1, n)
#define REG_CODEC_ADCB_IBSEL_OP2_SHIFT      8
#define REG_CODEC_ADCB_IBSEL_OP2_MASK       (0xF << REG_CODEC_ADCB_IBSEL_OP2_SHIFT)
#define REG_CODEC_ADCB_IBSEL_OP2(n)         BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_OP2, n)
#define REG_CODEC_ADCB_IBSEL_OP3_SHIFT      12
#define REG_CODEC_ADCB_IBSEL_OP3_MASK       (0xF << REG_CODEC_ADCB_IBSEL_OP3_SHIFT)
#define REG_CODEC_ADCB_IBSEL_OP3(n)         BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_OP3, n)

// REG_15
#define REG_CODEC_ADCB_IBSEL_OP4_SHIFT      0
#define REG_CODEC_ADCB_IBSEL_OP4_MASK       (0xF << REG_CODEC_ADCB_IBSEL_OP4_SHIFT)
#define REG_CODEC_ADCB_IBSEL_OP4(n)         BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_OP4, n)
#define REG_CODEC_ADCB_IBSEL_REG_SHIFT      4
#define REG_CODEC_ADCB_IBSEL_REG_MASK       (0xF << REG_CODEC_ADCB_IBSEL_REG_SHIFT)
#define REG_CODEC_ADCB_IBSEL_REG(n)         BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_REG, n)
#define REG_CODEC_ADCB_IBSEL_VCOMP_SHIFT    8
#define REG_CODEC_ADCB_IBSEL_VCOMP_MASK     (0xF << REG_CODEC_ADCB_IBSEL_VCOMP_SHIFT)
#define REG_CODEC_ADCB_IBSEL_VCOMP(n)       BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_VCOMP, n)
#define REG_CODEC_ADCB_IBSEL_VREF_SHIFT     12
#define REG_CODEC_ADCB_IBSEL_VREF_MASK      (0xF << REG_CODEC_ADCB_IBSEL_VREF_SHIFT)
#define REG_CODEC_ADCB_IBSEL_VREF(n)        BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_VREF, n)

// REG_16
#define REG_CODEC_ADCB_IBSEL_DAC2_SHIFT     4
#define REG_CODEC_ADCB_IBSEL_DAC2_MASK      (0xF << REG_CODEC_ADCB_IBSEL_DAC2_SHIFT)
#define REG_CODEC_ADCB_IBSEL_DAC2(n)        BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_DAC2, n)
#define REG_ADCB_OFFSET_CAL_SHIFT           8
#define REG_ADCB_OFFSET_CAL_MASK            (0x1F << REG_ADCB_OFFSET_CAL_SHIFT)
#define REG_ADCB_OFFSET_CAL(n)              BITFIELD_VAL(REG_ADCB_OFFSET_CAL, n)

// REG_17
#define REG_CODEC_ADCB_OFFSET_BIT_SHIFT     0
#define REG_CODEC_ADCB_OFFSET_BIT_MASK      (0x3FFF << REG_CODEC_ADCB_OFFSET_BIT_SHIFT)
#define REG_CODEC_ADCB_OFFSET_BIT(n)        BITFIELD_VAL(REG_CODEC_ADCB_OFFSET_BIT, n)
#define REG_ADCB_DVDD_SEL                   (1 << 14)

// REG_18
#define REG_CODEC_ADCB_VREF_SEL_SHIFT       0
#define REG_CODEC_ADCB_VREF_SEL_MASK        (0xF << REG_CODEC_ADCB_VREF_SEL_SHIFT)
#define REG_CODEC_ADCB_VREF_SEL(n)          BITFIELD_VAL(REG_CODEC_ADCB_VREF_SEL, n)
#define ADCB_TIMER_RSTN_DLY_SHIFT           8
#define ADCB_TIMER_RSTN_DLY_MASK            (0x3F << ADCB_TIMER_RSTN_DLY_SHIFT)
#define ADCB_TIMER_RSTN_DLY(n)              BITFIELD_VAL(ADCB_TIMER_RSTN_DLY, n)

// REG_19
#define ADCB_PRE_CHARGE_TIMER_DLY_SHIFT     4
#define ADCB_PRE_CHARGE_TIMER_DLY_MASK      (0xFF << ADCB_PRE_CHARGE_TIMER_DLY_SHIFT)
#define ADCB_PRE_CHARGE_TIMER_DLY(n)        BITFIELD_VAL(ADCB_PRE_CHARGE_TIMER_DLY, n)

// REG_1D
#define REG_CODEC_ADCB_BUFFERN_C_SEL        (1 << 0)
#define REG_CODEC_ADCB_BUFFERN_IBIT_SHIFT   1
#define REG_CODEC_ADCB_BUFFERN_IBIT_MASK    (0x3 << REG_CODEC_ADCB_BUFFERN_IBIT_SHIFT)
#define REG_CODEC_ADCB_BUFFERN_IBIT(n)      BITFIELD_VAL(REG_CODEC_ADCB_BUFFERN_IBIT, n)
#define REG_CODEC_ADCB_BUFFERP_C_SEL        (1 << 3)
#define REG_CODEC_ADCB_BUFFERP_IBIT_SHIFT   4
#define REG_CODEC_ADCB_BUFFERP_IBIT_MASK    (0x3 << REG_CODEC_ADCB_BUFFERP_IBIT_SHIFT)
#define REG_CODEC_ADCB_BUFFERP_IBIT(n)      BITFIELD_VAL(REG_CODEC_ADCB_BUFFERP_IBIT, n)
#define REG_CODEC_ADCB_IBSEL_BIAS_BUFFER_SHIFT 6
#define REG_CODEC_ADCB_IBSEL_BIAS_BUFFER_MASK (0xF << REG_CODEC_ADCB_IBSEL_BIAS_BUFFER_SHIFT)
#define REG_CODEC_ADCB_IBSEL_BIAS_BUFFER(n) BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_BIAS_BUFFER, n)
#define REG_CODEC_ADCB_IBSEL_RES_VOLT_SHIFT 10
#define REG_CODEC_ADCB_IBSEL_RES_VOLT_MASK  (0xF << REG_CODEC_ADCB_IBSEL_RES_VOLT_SHIFT)
#define REG_CODEC_ADCB_IBSEL_RES_VOLT(n)    BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_RES_VOLT, n)

// REG_1E
#define REG_CODEC_ADCB_IBSEL_VCM_DAC_SHIFT  0
#define REG_CODEC_ADCB_IBSEL_VCM_DAC_MASK   (0xF << REG_CODEC_ADCB_IBSEL_VCM_DAC_SHIFT)
#define REG_CODEC_ADCB_IBSEL_VCM_DAC(n)     BITFIELD_VAL(REG_CODEC_ADCB_IBSEL_VCM_DAC, n)
#define REG_CODEC_ADCB_JUMP_BIT_SHIFT       4
#define REG_CODEC_ADCB_JUMP_BIT_MASK        (0x7 << REG_CODEC_ADCB_JUMP_BIT_SHIFT)
#define REG_CODEC_ADCB_JUMP_BIT(n)          BITFIELD_VAL(REG_CODEC_ADCB_JUMP_BIT, n)
#define REG_CODEC_ADCB_JUMP_EN              (1 << 7)
#define REG_CODEC_ADCB_VCM_DAC_C_SEL        (1 << 8)
#define REG_CODEC_ADCB_VCM_DAC_IBIT_SHIFT   9
#define REG_CODEC_ADCB_VCM_DAC_IBIT_MASK    (0x3 << REG_CODEC_ADCB_VCM_DAC_IBIT_SHIFT)
#define REG_CODEC_ADCB_VCM_DAC_IBIT(n)      BITFIELD_VAL(REG_CODEC_ADCB_VCM_DAC_IBIT, n)
#define REG_CODEC_ADCB_OP1_C_SEL            (1 << 11)
#define REG_CODEC_ADCB_OP2_C_SEL            (1 << 12)
#define REG_CODEC_ADCB_OP3_C_SEL            (1 << 13)
#define REG_CODEC_ADCB_OP4_C_SEL            (1 << 14)

// REG_1F
#define REG_ADCB_INPUT_CM_MODE_SHIFT        0
#define REG_ADCB_INPUT_CM_MODE_MASK         (0x7 << REG_ADCB_INPUT_CM_MODE_SHIFT)
#define REG_ADCB_INPUT_CM_MODE(n)           BITFIELD_VAL(REG_ADCB_INPUT_CM_MODE, n)
#define REG_CODEC_CLK_SW_IN_ADCB_INT        (1 << 3)
#define REG_CODEC_EN_OFF_ADCB               (1 << 4)
#define REG_CODEC_ADCB_REG_VSEL_SHIFT       5
#define REG_CODEC_ADCB_REG_VSEL_MASK        (0xF << REG_CODEC_ADCB_REG_VSEL_SHIFT)
#define REG_CODEC_ADCB_REG_VSEL(n)          BITFIELD_VAL(REG_CODEC_ADCB_REG_VSEL, n)
#define REG_CODEC_CLK_SW_IN_ADCB_DR         (1 << 9)

// REG_21
#define REG_CODEC_EN_ADCC                   (1 << 0)
#define REG_CODEC_RESET_ADCC                (1 << 1)
#define CFG_RESET_ADCC_DR                   (1 << 2)
#define REG_CODEC_IDETC_EN                  (1 << 3)
#define REG_CODEC_ADCC_CLK_SEL              (1 << 4)
#define REG_CODEC_ADCC_CHANNEL_SEL_SHIFT    5
#define REG_CODEC_ADCC_CHANNEL_SEL_MASK     (0x3 << REG_CODEC_ADCC_CHANNEL_SEL_SHIFT)
#define REG_CODEC_ADCC_CHANNEL_SEL(n)       BITFIELD_VAL(REG_CODEC_ADCC_CHANNEL_SEL, n)
#define REG_CODEC_ADCC_GAIN_UPDATE          (1 << 9)
#define REG_CODEC_ADCC_GAIN_BIT_SHIFT       10
#define REG_CODEC_ADCC_GAIN_BIT_MASK        (0x7 << REG_CODEC_ADCC_GAIN_BIT_SHIFT)
#define REG_CODEC_ADCC_GAIN_BIT(n)          BITFIELD_VAL(REG_CODEC_ADCC_GAIN_BIT, n)
#define REG_CODEC_ADCC_PRE_CHARGE           (1 << 13)
#define CFG_PRE_CHARGE_ADCC_DR              (1 << 14)

// REG_22
#define REG_CODEC_ADCC_RES_2P5K_DR          (1 << 0)
#define REG_CODEC_ADCC_RES_2P5K_UPDATE      (1 << 1)
#define REG_CODEC_ADCC_RES_2P5K             (1 << 2)
#define REG_CODEC_ADCC_CAP_BIT1_SHIFT       3
#define REG_CODEC_ADCC_CAP_BIT1_MASK        (0xF << REG_CODEC_ADCC_CAP_BIT1_SHIFT)
#define REG_CODEC_ADCC_CAP_BIT1(n)          BITFIELD_VAL(REG_CODEC_ADCC_CAP_BIT1, n)
#define REG_CODEC_ADCC_CAP_BIT2_SHIFT       10
#define REG_CODEC_ADCC_CAP_BIT2_MASK        (0xF << REG_CODEC_ADCC_CAP_BIT2_SHIFT)
#define REG_CODEC_ADCC_CAP_BIT2(n)          BITFIELD_VAL(REG_CODEC_ADCC_CAP_BIT2, n)

// REG_23
#define REG_CODEC_ADCC_CAP_BIT3_SHIFT       0
#define REG_CODEC_ADCC_CAP_BIT3_MASK        (0xF << REG_CODEC_ADCC_CAP_BIT3_SHIFT)
#define REG_CODEC_ADCC_CAP_BIT3(n)          BITFIELD_VAL(REG_CODEC_ADCC_CAP_BIT3, n)
#define REG_CODEC_ADCC_OP1_IBIT_SHIFT       5
#define REG_CODEC_ADCC_OP1_IBIT_MASK        (0x3 << REG_CODEC_ADCC_OP1_IBIT_SHIFT)
#define REG_CODEC_ADCC_OP1_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCC_OP1_IBIT, n)
#define REG_CODEC_ADCC_OP2_IBIT_SHIFT       7
#define REG_CODEC_ADCC_OP2_IBIT_MASK        (0x3 << REG_CODEC_ADCC_OP2_IBIT_SHIFT)
#define REG_CODEC_ADCC_OP2_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCC_OP2_IBIT, n)
#define REG_CODEC_ADCC_OP3_IBIT_SHIFT       9
#define REG_CODEC_ADCC_OP3_IBIT_MASK        (0x3 << REG_CODEC_ADCC_OP3_IBIT_SHIFT)
#define REG_CODEC_ADCC_OP3_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCC_OP3_IBIT, n)
#define REG_CODEC_ADCC_OP4_IBIT_SHIFT       11
#define REG_CODEC_ADCC_OP4_IBIT_MASK        (0x3 << REG_CODEC_ADCC_OP4_IBIT_SHIFT)
#define REG_CODEC_ADCC_OP4_IBIT(n)          BITFIELD_VAL(REG_CODEC_ADCC_OP4_IBIT, n)

// REG_24
#define REG_CODEC_ADCC_IBSEL_OFFSET_SHIFT   0
#define REG_CODEC_ADCC_IBSEL_OFFSET_MASK    (0xF << REG_CODEC_ADCC_IBSEL_OFFSET_SHIFT)
#define REG_CODEC_ADCC_IBSEL_OFFSET(n)      BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_OFFSET, n)
#define REG_CODEC_ADCC_IBSEL_OP1_SHIFT      4
#define REG_CODEC_ADCC_IBSEL_OP1_MASK       (0xF << REG_CODEC_ADCC_IBSEL_OP1_SHIFT)
#define REG_CODEC_ADCC_IBSEL_OP1(n)         BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_OP1, n)
#define REG_CODEC_ADCC_IBSEL_OP2_SHIFT      8
#define REG_CODEC_ADCC_IBSEL_OP2_MASK       (0xF << REG_CODEC_ADCC_IBSEL_OP2_SHIFT)
#define REG_CODEC_ADCC_IBSEL_OP2(n)         BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_OP2, n)
#define REG_CODEC_ADCC_IBSEL_OP3_SHIFT      12
#define REG_CODEC_ADCC_IBSEL_OP3_MASK       (0xF << REG_CODEC_ADCC_IBSEL_OP3_SHIFT)
#define REG_CODEC_ADCC_IBSEL_OP3(n)         BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_OP3, n)

// REG_25
#define REG_CODEC_ADCC_IBSEL_OP4_SHIFT      0
#define REG_CODEC_ADCC_IBSEL_OP4_MASK       (0xF << REG_CODEC_ADCC_IBSEL_OP4_SHIFT)
#define REG_CODEC_ADCC_IBSEL_OP4(n)         BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_OP4, n)
#define REG_CODEC_ADCC_IBSEL_REG_SHIFT      4
#define REG_CODEC_ADCC_IBSEL_REG_MASK       (0xF << REG_CODEC_ADCC_IBSEL_REG_SHIFT)
#define REG_CODEC_ADCC_IBSEL_REG(n)         BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_REG, n)
#define REG_CODEC_ADCC_IBSEL_VCOMP_SHIFT    8
#define REG_CODEC_ADCC_IBSEL_VCOMP_MASK     (0xF << REG_CODEC_ADCC_IBSEL_VCOMP_SHIFT)
#define REG_CODEC_ADCC_IBSEL_VCOMP(n)       BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_VCOMP, n)
#define REG_CODEC_ADCC_IBSEL_VREF_SHIFT     12
#define REG_CODEC_ADCC_IBSEL_VREF_MASK      (0xF << REG_CODEC_ADCC_IBSEL_VREF_SHIFT)
#define REG_CODEC_ADCC_IBSEL_VREF(n)        BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_VREF, n)

// REG_26
#define REG_CODEC_ADCC_IBSEL_DAC2_SHIFT     4
#define REG_CODEC_ADCC_IBSEL_DAC2_MASK      (0xF << REG_CODEC_ADCC_IBSEL_DAC2_SHIFT)
#define REG_CODEC_ADCC_IBSEL_DAC2(n)        BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_DAC2, n)
#define REG_ADCC_OFFSET_CAL_SHIFT           8
#define REG_ADCC_OFFSET_CAL_MASK            (0x1F << REG_ADCC_OFFSET_CAL_SHIFT)
#define REG_ADCC_OFFSET_CAL(n)              BITFIELD_VAL(REG_ADCC_OFFSET_CAL, n)

// REG_27
#define REG_CODEC_ADCC_OFFSET_BIT_SHIFT     0
#define REG_CODEC_ADCC_OFFSET_BIT_MASK      (0x3FFF << REG_CODEC_ADCC_OFFSET_BIT_SHIFT)
#define REG_CODEC_ADCC_OFFSET_BIT(n)        BITFIELD_VAL(REG_CODEC_ADCC_OFFSET_BIT, n)
#define REG_ADCC_DVDD_SEL                   (1 << 14)

// REG_28
#define REG_CODEC_ADCC_VREF_SEL_SHIFT       0
#define REG_CODEC_ADCC_VREF_SEL_MASK        (0xF << REG_CODEC_ADCC_VREF_SEL_SHIFT)
#define REG_CODEC_ADCC_VREF_SEL(n)          BITFIELD_VAL(REG_CODEC_ADCC_VREF_SEL, n)
#define ADCC_TIMER_RSTN_DLY_SHIFT           8
#define ADCC_TIMER_RSTN_DLY_MASK            (0x3F << ADCC_TIMER_RSTN_DLY_SHIFT)
#define ADCC_TIMER_RSTN_DLY(n)              BITFIELD_VAL(ADCC_TIMER_RSTN_DLY, n)

// REG_29
#define ADCC_PRE_CHARGE_TIMER_DLY_SHIFT     4
#define ADCC_PRE_CHARGE_TIMER_DLY_MASK      (0xFF << ADCC_PRE_CHARGE_TIMER_DLY_SHIFT)
#define ADCC_PRE_CHARGE_TIMER_DLY(n)        BITFIELD_VAL(ADCC_PRE_CHARGE_TIMER_DLY, n)

// REG_2D
#define REG_CODEC_ADCC_BUFFERN_C_SEL        (1 << 0)
#define REG_CODEC_ADCC_BUFFERN_IBIT_SHIFT   1
#define REG_CODEC_ADCC_BUFFERN_IBIT_MASK    (0x3 << REG_CODEC_ADCC_BUFFERN_IBIT_SHIFT)
#define REG_CODEC_ADCC_BUFFERN_IBIT(n)      BITFIELD_VAL(REG_CODEC_ADCC_BUFFERN_IBIT, n)
#define REG_CODEC_ADCC_BUFFERP_C_SEL        (1 << 3)
#define REG_CODEC_ADCC_BUFFERP_IBIT_SHIFT   4
#define REG_CODEC_ADCC_BUFFERP_IBIT_MASK    (0x3 << REG_CODEC_ADCC_BUFFERP_IBIT_SHIFT)
#define REG_CODEC_ADCC_BUFFERP_IBIT(n)      BITFIELD_VAL(REG_CODEC_ADCC_BUFFERP_IBIT, n)
#define REG_CODEC_ADCC_IBSEL_BIAS_BUFFER_SHIFT 6
#define REG_CODEC_ADCC_IBSEL_BIAS_BUFFER_MASK (0xF << REG_CODEC_ADCC_IBSEL_BIAS_BUFFER_SHIFT)
#define REG_CODEC_ADCC_IBSEL_BIAS_BUFFER(n) BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_BIAS_BUFFER, n)
#define REG_CODEC_ADCC_IBSEL_RES_VOLT_SHIFT 10
#define REG_CODEC_ADCC_IBSEL_RES_VOLT_MASK  (0xF << REG_CODEC_ADCC_IBSEL_RES_VOLT_SHIFT)
#define REG_CODEC_ADCC_IBSEL_RES_VOLT(n)    BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_RES_VOLT, n)

// REG_2E
#define REG_CODEC_ADCC_IBSEL_VCM_DAC_SHIFT  0
#define REG_CODEC_ADCC_IBSEL_VCM_DAC_MASK   (0xF << REG_CODEC_ADCC_IBSEL_VCM_DAC_SHIFT)
#define REG_CODEC_ADCC_IBSEL_VCM_DAC(n)     BITFIELD_VAL(REG_CODEC_ADCC_IBSEL_VCM_DAC, n)
#define REG_CODEC_ADCC_JUMP_BIT_SHIFT       4
#define REG_CODEC_ADCC_JUMP_BIT_MASK        (0x7 << REG_CODEC_ADCC_JUMP_BIT_SHIFT)
#define REG_CODEC_ADCC_JUMP_BIT(n)          BITFIELD_VAL(REG_CODEC_ADCC_JUMP_BIT, n)
#define REG_CODEC_ADCC_JUMP_EN              (1 << 7)
#define REG_CODEC_ADCC_VCM_DAC_C_SEL        (1 << 8)
#define REG_CODEC_ADCC_VCM_DAC_IBIT_SHIFT   9
#define REG_CODEC_ADCC_VCM_DAC_IBIT_MASK    (0x3 << REG_CODEC_ADCC_VCM_DAC_IBIT_SHIFT)
#define REG_CODEC_ADCC_VCM_DAC_IBIT(n)      BITFIELD_VAL(REG_CODEC_ADCC_VCM_DAC_IBIT, n)
#define REG_CODEC_ADCC_OP1_C_SEL            (1 << 11)
#define REG_CODEC_ADCC_OP2_C_SEL            (1 << 12)
#define REG_CODEC_ADCC_OP3_C_SEL            (1 << 13)
#define REG_CODEC_ADCC_OP4_C_SEL            (1 << 14)

// REG_2F
#define REG_ADCC_INPUT_CM_MODE_SHIFT        0
#define REG_ADCC_INPUT_CM_MODE_MASK         (0x7 << REG_ADCC_INPUT_CM_MODE_SHIFT)
#define REG_ADCC_INPUT_CM_MODE(n)           BITFIELD_VAL(REG_ADCC_INPUT_CM_MODE, n)
#define REG_CODEC_CLK_SW_IN_ADCC_INT        (1 << 3)
#define REG_CODEC_EN_OFF_ADCC               (1 << 4)
#define REG_CODEC_ADCC_REG_VSEL_SHIFT       5
#define REG_CODEC_ADCC_REG_VSEL_MASK        (0xF << REG_CODEC_ADCC_REG_VSEL_SHIFT)
#define REG_CODEC_ADCC_REG_VSEL(n)          BITFIELD_VAL(REG_CODEC_ADCC_REG_VSEL, n)
#define REG_CODEC_CLK_SW_IN_ADCC_DR         (1 << 9)

// REG_30
#define REG_UPDATE_RELEASE_STATE_CNT_SHIFT  8
#define REG_UPDATE_RELEASE_STATE_CNT_MASK   (0x7 << REG_UPDATE_RELEASE_STATE_CNT_SHIFT)
#define REG_UPDATE_RELEASE_STATE_CNT(n)     BITFIELD_VAL(REG_UPDATE_RELEASE_STATE_CNT, n)
#define REG_UPDATE_RELEASE_STATE_EN         (1 << 7)
#define REG_PRESS_DIRECTION_SHIFT           5
#define REG_PRESS_DIRECTION_MASK            (0x3 << REG_PRESS_DIRECTION_SHIFT)
#define REG_PRESS_DIRECTION(n)              BITFIELD_VAL(REG_PRESS_DIRECTION, n)
#define REG_SW_RELEASE_TIME_SHIFT           0
#define REG_SW_RELEASE_TIME_MASK            (0x1F << REG_SW_RELEASE_TIME_SHIFT)
#define REG_SW_RELEASE_TIME(n)              BITFIELD_VAL(REG_SW_RELEASE_TIME, n)

// REG_31
#define REG_SAR_RELEASE_DELTA_THRE_SHIFT    0
#define REG_SAR_RELEASE_DELTA_THRE_MASK     (0xFFFF << REG_SAR_RELEASE_DELTA_THRE_SHIFT)
#define REG_SAR_RELEASE_DELTA_THRE(n)       BITFIELD_VAL(REG_SAR_RELEASE_DELTA_THRE, n)

// REG_32
#define REG_SAR_PRESS_DELTA_THRE_SHIFT      0
#define REG_SAR_PRESS_DELTA_THRE_MASK       (0xFFFF << REG_SAR_PRESS_DELTA_THRE_SHIFT)
#define REG_SAR_PRESS_DELTA_THRE(n)         BITFIELD_VAL(REG_SAR_PRESS_DELTA_THRE, n)

// REG_33
#define REG_PSENSOR_ADC_NUM_SEL_SHIFT       13
#define REG_PSENSOR_ADC_NUM_SEL_MASK        (0x7 << REG_PSENSOR_ADC_NUM_SEL_SHIFT)
#define REG_PSENSOR_ADC_NUM_SEL(n)          BITFIELD_VAL(REG_PSENSOR_ADC_NUM_SEL, n)
#define REG_SAR_DET_EN                      (1 << 8)
#define REG_SAR_CLR_SENSOR_INTR             (1 << 7)
#define REG_SAR_PRESS_INTR_MASK             (1 << 6)
#define REG_SAR_PRESS_INTR_EN               (1 << 5)
#define REG_SAR_SW_MODE                     (1 << 4)
#define REG_SAR_2CH_EN                      (1 << 3)
#define REG_SAR_PRESS_MODE                  (1 << 0)

// REG_34
#define REG_SAR_LPRESS_TIME_MIN_SHIFT       10
#define REG_SAR_LPRESS_TIME_MIN_MASK        (0x1F << REG_SAR_LPRESS_TIME_MIN_SHIFT)
#define REG_SAR_LPRESS_TIME_MIN(n)          BITFIELD_VAL(REG_SAR_LPRESS_TIME_MIN, n)
#define REG_SAR_SPRESS_TIME_MAX_SHIFT       5
#define REG_SAR_SPRESS_TIME_MAX_MASK        (0x1F << REG_SAR_SPRESS_TIME_MAX_SHIFT)
#define REG_SAR_SPRESS_TIME_MAX(n)          BITFIELD_VAL(REG_SAR_SPRESS_TIME_MAX, n)
#define REG_SAR_SPRESS_TIME_MIN_SHIFT       0
#define REG_SAR_SPRESS_TIME_MIN_MASK        (0x1F << REG_SAR_SPRESS_TIME_MIN_SHIFT)
#define REG_SAR_SPRESS_TIME_MIN(n)          BITFIELD_VAL(REG_SAR_SPRESS_TIME_MIN, n)

// REG_35
#define REG_PRESS_HIT_INTR_MASK             (1 << 15)
#define REG_LAST_DOUT_SEL                   (1 << 14)
#define REG_LAST_DOUT_AVG_SEL_SHIFT         12
#define REG_LAST_DOUT_AVG_SEL_MASK          (0x3 << REG_LAST_DOUT_AVG_SEL_SHIFT)
#define REG_LAST_DOUT_AVG_SEL(n)            BITFIELD_VAL(REG_LAST_DOUT_AVG_SEL, n)
#define REG_LAST_DOUT_DLY_SEL_SHIFT         9
#define REG_LAST_DOUT_DLY_SEL_MASK          (0x7 << REG_LAST_DOUT_DLY_SEL_SHIFT)
#define REG_LAST_DOUT_DLY_SEL(n)            BITFIELD_VAL(REG_LAST_DOUT_DLY_SEL, n)
#define REG_SAR_RELEASE_TIME_SHIFT          5
#define REG_SAR_RELEASE_TIME_MASK           (0xF << REG_SAR_RELEASE_TIME_SHIFT)
#define REG_SAR_RELEASE_TIME(n)             BITFIELD_VAL(REG_SAR_RELEASE_TIME, n)
#define REG_SAR_MAX_PRESS_NUM_SHIFT         0
#define REG_SAR_MAX_PRESS_NUM_MASK          (0x1F << REG_SAR_MAX_PRESS_NUM_SHIFT)
#define REG_SAR_MAX_PRESS_NUM(n)            BITFIELD_VAL(REG_SAR_MAX_PRESS_NUM, n)

// REG_36
#define CAP_SENSOR_INTR                     (1 << 9)
#define PSEN_INTR                           (1 << 8)
#define SENSOR1_STATUS3                     (1 << 7)
#define SENSOR1_STATUS2                     (1 << 6)
#define SENSOR1_STATUS1                     (1 << 5)
#define SENSOR1_STATUS0                     (1 << 4)
#define SENSOR_STATUS3                      (1 << 3)
#define SENSOR_STATUS2                      (1 << 2)
#define SENSOR_STATUS1                      (1 << 1)
#define SENSOR_STATUS0                      (1 << 0)

// REG_37
#define REG_CODEC_VOICE_CALIB_START         (1 << 0)
#define REG_CODEC_VOICE_EN_OFFSET_CALIB_A   (1 << 1)
#define REG_CODEC_VOICE_OFFSET_CALIB_MODE_A (1 << 2)
#define REG_CODEC_VOICE_EN_CALIB_A_DR       (1 << 3)
#define REG_CODEC_VOICE_CLR_MODE_A_DONE     (1 << 4)
#define REG_CODEC_VOICE_CALIB_A_CNT_SHIFT   5
#define REG_CODEC_VOICE_CALIB_A_CNT_MASK    (0x3FF << REG_CODEC_VOICE_CALIB_A_CNT_SHIFT)
#define REG_CODEC_VOICE_CALIB_A_CNT(n)      BITFIELD_VAL(REG_CODEC_VOICE_CALIB_A_CNT, n)

// REG_38
#define REG_SAR_PRESS_THRE_SHIFT            0
#define REG_SAR_PRESS_THRE_MASK             (0xFFFF << REG_SAR_PRESS_THRE_SHIFT)
#define REG_SAR_PRESS_THRE(n)               BITFIELD_VAL(REG_SAR_PRESS_THRE, n)

// REG_39
#define REG_CALI_THR_MAX_SHIFT              0
#define REG_CALI_THR_MAX_MASK               (0xFFFF << REG_CALI_THR_MAX_SHIFT)
#define REG_CALI_THR_MAX(n)                 BITFIELD_VAL(REG_CALI_THR_MAX, n)

// REG_3A
#define REG_CALI_THR_MIN_SHIFT              0
#define REG_CALI_THR_MIN_MASK               (0xFFFF << REG_CALI_THR_MIN_SHIFT)
#define REG_CALI_THR_MIN(n)                 BITFIELD_VAL(REG_CALI_THR_MIN, n)

// REG_3B
#define R_SENSOR_CURRENT_DOUT_SHIFT         0
#define R_SENSOR_CURRENT_DOUT_MASK          (0xFFFF << R_SENSOR_CURRENT_DOUT_SHIFT)
#define R_SENSOR_CURRENT_DOUT(n)            BITFIELD_VAL(R_SENSOR_CURRENT_DOUT, n)

// REG_3C
#define R_SENSOR_CURRENT_DOUT1_SHIFT        0
#define R_SENSOR_CURRENT_DOUT1_MASK         (0xFFFF << R_SENSOR_CURRENT_DOUT1_SHIFT)
#define R_SENSOR_CURRENT_DOUT1(n)           BITFIELD_VAL(R_SENSOR_CURRENT_DOUT1, n)

// REG_4E
#define RESERVED_DIG_15_0_SHIFT             0
#define RESERVED_DIG_15_0_MASK              (0xFFFF << RESERVED_DIG_15_0_SHIFT)
#define RESERVED_DIG_15_0(n)                BITFIELD_VAL(RESERVED_DIG_15_0, n)

// REG_4F
#define RESERVED_DIG_31_16_SHIFT            0
#define RESERVED_DIG_31_16_MASK             (0xFFFF << RESERVED_DIG_31_16_SHIFT)
#define RESERVED_DIG_31_16(n)               BITFIELD_VAL(RESERVED_DIG_31_16, n)

// REG_50
#define REG_CODEC_EN_BIAS                   (1 << 13)
#define REG_CODEC_EN_BIAS_LP                (1 << 14)
#define REG_CODEC_EN_RX_EXT                 (1 << 15)

// REG_51
#define REG_CODEC_BIAS_IBSEL_SHIFT          0
#define REG_CODEC_BIAS_IBSEL_MASK           (0xF << REG_CODEC_BIAS_IBSEL_SHIFT)
#define REG_CODEC_BIAS_IBSEL(n)             BITFIELD_VAL(REG_CODEC_BIAS_IBSEL, n)
#define REG_CODEC_BIAS_IBSEL_TX_SHIFT       4
#define REG_CODEC_BIAS_IBSEL_TX_MASK        (0xF << REG_CODEC_BIAS_IBSEL_TX_SHIFT)
#define REG_CODEC_BIAS_IBSEL_TX(n)          BITFIELD_VAL(REG_CODEC_BIAS_IBSEL_TX, n)
#define REG_CODEC_BIAS_IBSEL_VOICE_SHIFT    8
#define REG_CODEC_BIAS_IBSEL_VOICE_MASK     (0xF << REG_CODEC_BIAS_IBSEL_VOICE_SHIFT)
#define REG_CODEC_BIAS_IBSEL_VOICE(n)       BITFIELD_VAL(REG_CODEC_BIAS_IBSEL_VOICE, n)
#define CFG_ADC_START                       (1 << 12)
#define CFG_REG_CLKMUX_DVDD_SEL             (1 << 13)

// REG_52
#define REG_CODEC_EN_VCM                    (1 << 0)
#define REG_CODEC_EN_VCMBUFFER              (1 << 1)
#define REG_CODEC_LP_VCM                    (1 << 2)
#define REG_CODEC_LP_VCM_DR                 (1 << 3)
#define REG_CODEC_VCM_LOW_VCM_SHIFT         4
#define REG_CODEC_VCM_LOW_VCM_MASK          (0xF << REG_CODEC_VCM_LOW_VCM_SHIFT)
#define REG_CODEC_VCM_LOW_VCM(n)            BITFIELD_VAL(REG_CODEC_VCM_LOW_VCM, n)
#define REG_CODEC_VCM_LOW_VCM_LP_SHIFT      8
#define REG_CODEC_VCM_LOW_VCM_LP_MASK       (0xF << REG_CODEC_VCM_LOW_VCM_LP_SHIFT)
#define REG_CODEC_VCM_LOW_VCM_LP(n)         BITFIELD_VAL(REG_CODEC_VCM_LOW_VCM_LP, n)
#define REG_CODEC_VCM_LOW_VCM_LPF_SHIFT     12
#define REG_CODEC_VCM_LOW_VCM_LPF_MASK      (0xF << REG_CODEC_VCM_LOW_VCM_LPF_SHIFT)
#define REG_CODEC_VCM_LOW_VCM_LPF(n)        BITFIELD_VAL(REG_CODEC_VCM_LOW_VCM_LPF, n)

// REG_53
#define REG_CODEC_VCM_EN_LPF                (1 << 0)
#define REG_CODEC_BIAS_LOWV                 (1 << 1)
#define REG_CODEC_BIAS_LOWV_LP              (1 << 2)
#define REG_CODEC_BUF_LOWPOWER              (1 << 3)
#define REG_CODEC_BUF_LOWPOWER2             (1 << 4)
#define REG_CODEC_BUF_LOWVCM_SHIFT          5
#define REG_CODEC_BUF_LOWVCM_MASK           (0x7 << REG_CODEC_BUF_LOWVCM_SHIFT)
#define REG_CODEC_BUF_LOWVCM(n)             BITFIELD_VAL(REG_CODEC_BUF_LOWVCM, n)
#define REG_CODEC_VCM_BIAS_HIGHV            (1 << 8)
#define REG_VCM_PULLDOWN                    (1 << 9)
#define REG_EN_VCMBUFFER_ADC                (1 << 10)
#define REG_BUF_LOWPOWER_ADC                (1 << 11)
#define RESERVED_DIG_32                     (1 << 12)

// REG_54
#define REG_RCOSC_48M_EN_AGPIO_TEST         (1 << 1)
#define REG_RCOSC_48M_VOUT_SEL_SHIFT        2
#define REG_RCOSC_48M_VOUT_SEL_MASK         (0x7 << REG_RCOSC_48M_VOUT_SEL_SHIFT)
#define REG_RCOSC_48M_VOUT_SEL(n)           BITFIELD_VAL(REG_RCOSC_48M_VOUT_SEL, n)
#define REG_RCOSC_48M_OSC_FR_SHIFT          5
#define REG_RCOSC_48M_OSC_FR_MASK           (0x7 << REG_RCOSC_48M_OSC_FR_SHIFT)
#define REG_RCOSC_48M_OSC_FR(n)             BITFIELD_VAL(REG_RCOSC_48M_OSC_FR, n)
#define REG_RCOSC_48M_PWR_BIT_SHIFT         8
#define REG_RCOSC_48M_PWR_BIT_MASK          (0x3 << REG_RCOSC_48M_PWR_BIT_SHIFT)
#define REG_RCOSC_48M_PWR_BIT(n)            BITFIELD_VAL(REG_RCOSC_48M_PWR_BIT, n)
#define REG_RCOSC_48M_PWR_VBG_SHIFT         10
#define REG_RCOSC_48M_PWR_VBG_MASK          (0x3 << REG_RCOSC_48M_PWR_VBG_SHIFT)
#define REG_RCOSC_48M_PWR_VBG(n)            BITFIELD_VAL(REG_RCOSC_48M_PWR_VBG, n)

// REG_55
#define CFG_VOICE2OSC                       (1 << 1)
#define CFG_VOICE2ADCE                      (1 << 2)
#define REG_PU_RC                           (1 << 3)
#define REG_PU_RC_DR                        (1 << 4)
#define REG_CODEC_RC_OSC_PU_LDO             (1 << 5)
#define REG_CODEC_RC_OSC_PU_OSC             (1 << 6)
#define REG_RCOSC_BYPASS_COUNTER            (1 << 7)
#define REG_RCOSC_COUNTER_SEL_SHIFT         8
#define REG_RCOSC_COUNTER_SEL_MASK          (0x7 << REG_RCOSC_COUNTER_SEL_SHIFT)
#define REG_RCOSC_COUNTER_SEL(n)            BITFIELD_VAL(REG_RCOSC_COUNTER_SEL, n)
#define REG_RCOSC_EN_COUNTER_DLATCH         (1 << 11)

// REG_6C
#define REG_LPO_SEL                         (1 << 0)
#define REG_CODEC_EN_VTOI_INT               (1 << 1)
#define REG_CODEC_VTOI_I_DAC2_SHIFT         2
#define REG_CODEC_VTOI_I_DAC2_MASK          (0x7 << REG_CODEC_VTOI_I_DAC2_SHIFT)
#define REG_CODEC_VTOI_I_DAC2(n)            BITFIELD_VAL(REG_CODEC_VTOI_I_DAC2, n)
#define REG_CODEC_VTOI_IDAC_SEL_SHIFT       5
#define REG_CODEC_VTOI_IDAC_SEL_MASK        (0xF << REG_CODEC_VTOI_IDAC_SEL_SHIFT)
#define REG_CODEC_VTOI_IDAC_SEL(n)          BITFIELD_VAL(REG_CODEC_VTOI_IDAC_SEL, n)
#define REG_CODEC_VTOI_VCS_SEL_SHIFT        9
#define REG_CODEC_VTOI_VCS_SEL_MASK         (0x1F << REG_CODEC_VTOI_VCS_SEL_SHIFT)
#define REG_CODEC_VTOI_VCS_SEL(n)           BITFIELD_VAL(REG_CODEC_VTOI_VCS_SEL, n)
#define REG_PMIC_SEL12M26M                  (1 << 14)
#define REG_PMIC_SEL26M                     (1 << 15)

// REG_6D
#define REG_SEL_CAPSENOR_OSC                (1 << 0)
#define REG_CFG_CAPSENSOR_DIV_SHIFT         1
#define REG_CFG_CAPSENSOR_DIV_MASK          (0x7FF << REG_CFG_CAPSENSOR_DIV_SHIFT)
#define REG_CFG_CAPSENSOR_DIV(n)            BITFIELD_VAL(REG_CFG_CAPSENSOR_DIV, n)
#define REG_CLK_CAPSENSOR_GATE_EN           (1 << 12)
#define REG_CLK_32K_CAPSENSOR_GATE_EN       (1 << 13)
#define SOFT_RESETN_CAPSENSOR               (1 << 14)
#define SOFT_RESETN_CAPSENSOR_REG           (1 << 15)

// REG_6E
#define SOFT_RESETN_CODEC_ADC               (1 << 0)
#define SOFT_RESETN_CODEC_DAC               (1 << 1)
#define SOFT_RESETN_PSENSOR_DET             (1 << 2)
#define SOFT_RESETN_PSENSOR_CALIB           (1 << 3)
#define SOFT_RESETN_SAR                     (1 << 4)

// REG_100
#define REVID_SHIFT                         0
#define REVID_MASK                          (0xF << REVID_SHIFT)
#define REVID(n)                            BITFIELD_VAL(REVID, n)

// REG_10C
#define CFG_TX_PEAK_OFF_ADC_EN              (1 << 0)
#define CFG_TX_PEAK_OFF_DAC_EN              (1 << 1)
#define CFG_PEAK_DET_DR                     (1 << 2)
#define CFG_TX_PEAK_OFF_ADC                 (1 << 3)
#define CFG_TX_PEAK_OFF_DAC                 (1 << 4)
#define CFG_PEAK_DET_DB_DELAY_SHIFT         5
#define CFG_PEAK_DET_DB_DELAY_MASK          (0x7 << CFG_PEAK_DET_DB_DELAY_SHIFT)
#define CFG_PEAK_DET_DB_DELAY(n)            BITFIELD_VAL(CFG_PEAK_DET_DB_DELAY, n)
#define REG_DAC_LDO0P9_VSEL_SHIFT           8
#define REG_DAC_LDO0P9_VSEL_MASK            (0x1F << REG_DAC_LDO0P9_VSEL_SHIFT)
#define REG_DAC_LDO0P9_VSEL(n)              BITFIELD_VAL(REG_DAC_LDO0P9_VSEL, n)
#define REG_OCP_SEL_R_SHIFT                 13
#define REG_OCP_SEL_R_MASK                  (0x3 << REG_OCP_SEL_R_SHIFT)
#define REG_OCP_SEL_R(n)                    BITFIELD_VAL(REG_OCP_SEL_R, n)
#define REG_CLK12M_IF_EDGE                  (1 << 15)

// REG_10D
#define REG_CODEC_TX_PEAK_NL_EN             (1 << 0)
#define REG_CODEC_TX_PEAK_NR_EN             (1 << 1)
#define REG_CODEC_TX_PEAK_PL_EN             (1 << 2)
#define REG_CODEC_TX_PEAK_PR_EN             (1 << 3)
#define REG_CODEC_TX_PEAK_DET_BIT           (1 << 4)
#define REG_PU_CLKMUX_LDO0P9                (1 << 5)
#define REG_PU_OSC                          (1 << 6)
#define REG_CLKMUX_DVDD_SEL                 (1 << 7)
#define REG_CRYSTAL_SEL                     (1 << 8)
#define REG_IDETLEAR_EN                     (1 << 9)
#define REG_IDETREAR_EN                     (1 << 10)
#define REG_EXTPLL_SEL                      (1 << 11)
#define REG_CODEC_TX_REGULATOR_BIT_SHIFT    12
#define REG_CODEC_TX_REGULATOR_BIT_MASK     (0xF << REG_CODEC_TX_REGULATOR_BIT_SHIFT)
#define REG_CODEC_TX_REGULATOR_BIT(n)       BITFIELD_VAL(REG_CODEC_TX_REGULATOR_BIT, n)

// REG_10E
#define REG_CODEC_TX_EAR_DR_EN_L            (1 << 0)
#define REG_CODEC_TX_EAR_DRE_GAIN_L_UPDATE  (1 << 1)
#define REG_CODEC_TX_EAR_DRE_GAIN_R_UPDATE  (1 << 2)
#define REG_CODEC_TX_EAR_DRE_GAIN_L_TMP_SHIFT 3
#define REG_CODEC_TX_EAR_DRE_GAIN_L_TMP_MASK (0x1F << REG_CODEC_TX_EAR_DRE_GAIN_L_TMP_SHIFT)
#define REG_CODEC_TX_EAR_DRE_GAIN_L_TMP(n)  BITFIELD_VAL(REG_CODEC_TX_EAR_DRE_GAIN_L_TMP, n)
#define REG_CODEC_TX_EAR_DRE_GAIN_R_TMP_SHIFT 8
#define REG_CODEC_TX_EAR_DRE_GAIN_R_TMP_MASK (0x1F << REG_CODEC_TX_EAR_DRE_GAIN_R_TMP_SHIFT)
#define REG_CODEC_TX_EAR_DRE_GAIN_R_TMP(n)  BITFIELD_VAL(REG_CODEC_TX_EAR_DRE_GAIN_R_TMP, n)
#define REG_CODEC_TX_EAR_ENBIAS             (1 << 13)
#define REG_CODEC_TX_EAR_LPBIAS             (1 << 14)
#define REG_CODEC_TX_EAR_OCEN_L             (1 << 15)

// REG_10F
#define REG_CODEC_TEST_SEL_SHIFT            0
#define REG_CODEC_TEST_SEL_MASK             (0xF << REG_CODEC_TEST_SEL_SHIFT)
#define REG_CODEC_TEST_SEL(n)               BITFIELD_VAL(REG_CODEC_TEST_SEL, n)
#define REG_OCP_SEL_L_SHIFT                 4
#define REG_OCP_SEL_L_MASK                  (0x3 << REG_OCP_SEL_L_SHIFT)
#define REG_OCP_SEL_L(n)                    BITFIELD_VAL(REG_OCP_SEL_L, n)
#define REG_CODEC_TX_DAC_VREF_L_SHIFT       8
#define REG_CODEC_TX_DAC_VREF_L_MASK        (0xF << REG_CODEC_TX_DAC_VREF_L_SHIFT)
#define REG_CODEC_TX_DAC_VREF_L(n)          BITFIELD_VAL(REG_CODEC_TX_DAC_VREF_L, n)
#define REG_CODEC_TX_DAC_VREF_R_SHIFT       12
#define REG_CODEC_TX_DAC_VREF_R_MASK        (0xF << REG_CODEC_TX_DAC_VREF_R_SHIFT)
#define REG_CODEC_TX_DAC_VREF_R(n)          BITFIELD_VAL(REG_CODEC_TX_DAC_VREF_R, n)

// REG_110
#define REG_CODEC_TX_EAR_COMP_L_SHIFT       0
#define REG_CODEC_TX_EAR_COMP_L_MASK        (0x7F << REG_CODEC_TX_EAR_COMP_L_SHIFT)
#define REG_CODEC_TX_EAR_COMP_L(n)          BITFIELD_VAL(REG_CODEC_TX_EAR_COMP_L, n)
#define REG_CODEC_TX_EAR_COMP_R_SHIFT       7
#define REG_CODEC_TX_EAR_COMP_R_MASK        (0x7F << REG_CODEC_TX_EAR_COMP_R_SHIFT)
#define REG_CODEC_TX_EAR_COMP_R(n)          BITFIELD_VAL(REG_CODEC_TX_EAR_COMP_R, n)
#define REG_TX_REG_CAP_BIT                  (1 << 15)

// REG_111
#define REG_CODEC_TX_EAR_LOWGAINL_SHIFT     0
#define REG_CODEC_TX_EAR_LOWGAINL_MASK      (0x3 << REG_CODEC_TX_EAR_LOWGAINL_SHIFT)
#define REG_CODEC_TX_EAR_LOWGAINL(n)        BITFIELD_VAL(REG_CODEC_TX_EAR_LOWGAINL, n)
#define REG_CODEC_TX_EAR_LOWGAINR_SHIFT     2
#define REG_CODEC_TX_EAR_LOWGAINR_MASK      (0x3 << REG_CODEC_TX_EAR_LOWGAINR_SHIFT)
#define REG_CODEC_TX_EAR_LOWGAINR(n)        BITFIELD_VAL(REG_CODEC_TX_EAR_LOWGAINR, n)
#define REG_CODEC_TX_EAR_IBSEL_L_SHIFT      12
#define REG_CODEC_TX_EAR_IBSEL_L_MASK       (0x3 << REG_CODEC_TX_EAR_IBSEL_L_SHIFT)
#define REG_CODEC_TX_EAR_IBSEL_L(n)         BITFIELD_VAL(REG_CODEC_TX_EAR_IBSEL_L, n)
#define REG_CODEC_TX_EAR_IBSEL_R_SHIFT      14
#define REG_CODEC_TX_EAR_IBSEL_R_MASK       (0x3 << REG_CODEC_TX_EAR_IBSEL_R_SHIFT)
#define REG_CODEC_TX_EAR_IBSEL_R(n)         BITFIELD_VAL(REG_CODEC_TX_EAR_IBSEL_R, n)

// REG_112
#define REG_CODEC_TX_EAR_OFF_BITL_TMP_SHIFT 0
#define REG_CODEC_TX_EAR_OFF_BITL_TMP_MASK  (0x3FFF << REG_CODEC_TX_EAR_OFF_BITL_TMP_SHIFT)
#define REG_CODEC_TX_EAR_OFF_BITL_TMP(n)    BITFIELD_VAL(REG_CODEC_TX_EAR_OFF_BITL_TMP, n)
#define REG_CODEC_TX_EAR_OFFEN_L            (1 << 14)
#define REG_CODEC_TX_EN_DACLDO              (1 << 15)

// REG_113
#define REG_CODEC_TX_EAR_OFF_BITR_TMP_SHIFT 0
#define REG_CODEC_TX_EAR_OFF_BITR_TMP_MASK  (0x3FFF << REG_CODEC_TX_EAR_OFF_BITR_TMP_SHIFT)
#define REG_CODEC_TX_EAR_OFF_BITR_TMP(n)    BITFIELD_VAL(REG_CODEC_TX_EAR_OFF_BITR_TMP, n)
#define REG_CODEC_TX_EAR_DIS_SHIFT          14
#define REG_CODEC_TX_EAR_DIS_MASK           (0x3 << REG_CODEC_TX_EAR_DIS_SHIFT)
#define REG_CODEC_TX_EAR_DIS(n)             BITFIELD_VAL(REG_CODEC_TX_EAR_DIS, n)

// REG_114
#define REG_CODEC_TX_EAR_SOFTSTART_SHIFT    0
#define REG_CODEC_TX_EAR_SOFTSTART_MASK     (0x3F << REG_CODEC_TX_EAR_SOFTSTART_SHIFT)
#define REG_CODEC_TX_EAR_SOFTSTART(n)       BITFIELD_VAL(REG_CODEC_TX_EAR_SOFTSTART, n)
#define REG_CODEC_TX_EAR_OUTPUTSEL_L_SHIFT  6
#define REG_CODEC_TX_EAR_OUTPUTSEL_L_MASK   (0xF << REG_CODEC_TX_EAR_OUTPUTSEL_L_SHIFT)
#define REG_CODEC_TX_EAR_OUTPUTSEL_L(n)     BITFIELD_VAL(REG_CODEC_TX_EAR_OUTPUTSEL_L, n)
#define REG_CODEC_TX_EAR_DR_ST_L_SHIFT      10
#define REG_CODEC_TX_EAR_DR_ST_L_MASK       (0x7 << REG_CODEC_TX_EAR_DR_ST_L_SHIFT)
#define REG_CODEC_TX_EAR_DR_ST_L(n)         BITFIELD_VAL(REG_CODEC_TX_EAR_DR_ST_L, n)
#define REG_CODEC_TX_EAR_DR_ST_R_SHIFT      13
#define REG_CODEC_TX_EAR_DR_ST_R_MASK       (0x7 << REG_CODEC_TX_EAR_DR_ST_R_SHIFT)
#define REG_CODEC_TX_EAR_DR_ST_R(n)         BITFIELD_VAL(REG_CODEC_TX_EAR_DR_ST_R, n)

// REG_115
#define REG_CODEC_TX_EN_EARPA_L             (1 << 0)
#define REG_CODEC_TX_EN_RCLK                (1 << 1)
#define REG_CODEC_TX_EN_LCLK                (1 << 2)
#define REG_CODEC_TX_EN_LDAC_ANA            (1 << 3)
#define REG_CODEC_TX_EN_RDAC_ANA            (1 << 4)
#define REG_CODEC_TX_EN_S1PA_L              (1 << 6)
#define REG_CODEC_TX_EN_S2PA_L              (1 << 7)
#define REG_CODEC_TX_EN_S3PA_L              (1 << 8)
#define REG_CODEC_TX_EN_S4PA_L              (1 << 9)
#define REG_CODEC_TX_EN_S5PA_L              (1 << 10)
#define REG_PU_CODEC_TX_REGULATOR           (1 << 11)
#define REG_BYPASS_CODEC_TX_REGULATOR       (1 << 12)
#define REG_CODEC_DAC_CLK_EDGE_SEL          (1 << 13)
#define REG_CODEC_TX_EAR_GAIN_L             (1 << 14)
#define REG_CODEC_TX_EAR_GAIN_R             (1 << 15)

// REG_116
#define REG_CODEC_TX_EN_LPPA                (1 << 0)
#define REG_CODEC_TX_SW_MODE                (1 << 1)
#define DRE_GAIN_SEL_L                      (1 << 2)
#define CFG_TX_TREE_EN                      (1 << 4)
#define CFG_TX_CH0_MUTE                     (1 << 5)
#define CFG_TX_CH1_MUTE                     (1 << 6)
#define CFG_TX_CLK_INV                      (1 << 7)
#define CFG_CODEC_DIN_L_RST                 (1 << 8)
#define REG_CODEC_TX_EAR_VCM_L_SHIFT        9
#define REG_CODEC_TX_EAR_VCM_L_MASK         (0x3 << REG_CODEC_TX_EAR_VCM_L_SHIFT)
#define REG_CODEC_TX_EAR_VCM_L(n)           BITFIELD_VAL(REG_CODEC_TX_EAR_VCM_L, n)
#define DRE_GAIN_SEL_R                      (1 << 12)
#define CFG_CODEC_DIN_R_RST                 (1 << 13)
#define REG_CODEC_TX_EAR_VCM_R_SHIFT        14
#define REG_CODEC_TX_EAR_VCM_R_MASK         (0x3 << REG_CODEC_TX_EAR_VCM_R_SHIFT)
#define REG_CODEC_TX_EAR_VCM_R(n)           BITFIELD_VAL(REG_CODEC_TX_EAR_VCM_R, n)

// REG_117
#define CODEC_DIN_L_HI_RSTVAL_SHIFT         0
#define CODEC_DIN_L_HI_RSTVAL_MASK          (0xFFFF << CODEC_DIN_L_HI_RSTVAL_SHIFT)
#define CODEC_DIN_L_HI_RSTVAL(n)            BITFIELD_VAL(CODEC_DIN_L_HI_RSTVAL, n)

// REG_118
#define CODEC_DIN_L_LO_RSTVAL_SHIFT         0
#define CODEC_DIN_L_LO_RSTVAL_MASK          (0xFFFF << CODEC_DIN_L_LO_RSTVAL_SHIFT)
#define CODEC_DIN_L_LO_RSTVAL(n)            BITFIELD_VAL(CODEC_DIN_L_LO_RSTVAL, n)

// REG_119
#define CODEC_DIN_R_HI_RSTVAL_SHIFT         0
#define CODEC_DIN_R_HI_RSTVAL_MASK          (0xFFFF << CODEC_DIN_R_HI_RSTVAL_SHIFT)
#define CODEC_DIN_R_HI_RSTVAL(n)            BITFIELD_VAL(CODEC_DIN_R_HI_RSTVAL, n)

// REG_11A
#define CODEC_DIN_R_LO_RSTVAL_SHIFT         0
#define CODEC_DIN_R_LO_RSTVAL_MASK          (0xFFFF << CODEC_DIN_R_LO_RSTVAL_SHIFT)
#define CODEC_DIN_R_LO_RSTVAL(n)            BITFIELD_VAL(CODEC_DIN_R_LO_RSTVAL, n)

// REG_11B
#define REG_CODEC_TX_CASN_L_SHIFT           0
#define REG_CODEC_TX_CASN_L_MASK            (0x7 << REG_CODEC_TX_CASN_L_SHIFT)
#define REG_CODEC_TX_CASN_L(n)              BITFIELD_VAL(REG_CODEC_TX_CASN_L, n)
#define REG_CODEC_TX_CASN_R_SHIFT           3
#define REG_CODEC_TX_CASN_R_MASK            (0x7 << REG_CODEC_TX_CASN_R_SHIFT)
#define REG_CODEC_TX_CASN_R(n)              BITFIELD_VAL(REG_CODEC_TX_CASN_R, n)
#define REG_CODEC_TX_CASP_L_SHIFT           6
#define REG_CODEC_TX_CASP_L_MASK            (0x7 << REG_CODEC_TX_CASP_L_SHIFT)
#define REG_CODEC_TX_CASP_L(n)              BITFIELD_VAL(REG_CODEC_TX_CASP_L, n)
#define REG_CODEC_TX_CASP_R_SHIFT           9
#define REG_CODEC_TX_CASP_R_MASK            (0x7 << REG_CODEC_TX_CASP_R_SHIFT)
#define REG_CODEC_TX_CASP_R(n)              BITFIELD_VAL(REG_CODEC_TX_CASP_R, n)
#define REG_CODEC_TX_IB_SEL_ST2_L_SHIFT     12
#define REG_CODEC_TX_IB_SEL_ST2_L_MASK      (0x3 << REG_CODEC_TX_IB_SEL_ST2_L_SHIFT)
#define REG_CODEC_TX_IB_SEL_ST2_L(n)        BITFIELD_VAL(REG_CODEC_TX_IB_SEL_ST2_L, n)
#define REG_PU_LPO48MADC_INT                (1 << 14)

// REG_11D
#define REG_ZERO_DETECT_CHANGE              (1 << 2)
#define REG_CODEC_TX_EAR_VCM_SEL_L          (1 << 4)
#define REG_PU_ZERO_DET_L                   (1 << 5)
#define REG_PU_ZERO_DET_R                   (1 << 6)
#define REG_ZERO_DETECT_POWER_DOWN          (1 << 8)
#define REG_CODEC_TX_EAR_VCM_SEL_R          (1 << 14)

// REG_11E
#define REG_CLKMUX_LOWF_IN                  (1 << 5)
#define REG_CODEC_TX_EN_EARPA_R             (1 << 8)
#define REG_CODEC_TX_EN                     (1 << 9)
#define REG_CLK_PSENSOR_EN                  (1 << 11)
#define REG_CODEC_IO_DRV_SEL_SHIFT          12
#define REG_CODEC_IO_DRV_SEL_MASK           (0xF << REG_CODEC_IO_DRV_SEL_SHIFT)
#define REG_CODEC_IO_DRV_SEL(n)             BITFIELD_VAL(REG_CODEC_IO_DRV_SEL, n)

// REG_11F
#define DIG_CODEC_TX_PEAK_DET_STATUS        (1 << 0)
#define TX_PEAK_DET_NL_STATUS               (1 << 1)
#define TX_PEAK_DET_NR_STATUS               (1 << 2)
#define TX_PEAK_DET_PL_STATUS               (1 << 3)
#define TX_PEAK_DET_PR_STATUS               (1 << 4)

// REG_120
#define REG_CODEC_TX_VREFBUF_L_LP_SHIFT     2
#define REG_CODEC_TX_VREFBUF_L_LP_MASK      (0x7 << REG_CODEC_TX_VREFBUF_L_LP_SHIFT)
#define REG_CODEC_TX_VREFBUF_L_LP(n)        BITFIELD_VAL(REG_CODEC_TX_VREFBUF_L_LP, n)
#define REG_CODEC_TX_VREFBUF_R_LP_SHIFT     5
#define REG_CODEC_TX_VREFBUF_R_LP_MASK      (0x7 << REG_CODEC_TX_VREFBUF_R_LP_SHIFT)
#define REG_CODEC_TX_VREFBUF_R_LP(n)        BITFIELD_VAL(REG_CODEC_TX_VREFBUF_R_LP, n)
#define REG_VSEL_CLKMUX_SHIFT               8
#define REG_VSEL_CLKMUX_MASK                (0x1F << REG_VSEL_CLKMUX_SHIFT)
#define REG_VSEL_CLKMUX(n)                  BITFIELD_VAL(REG_VSEL_CLKMUX, n)

// REG_121
#define REG_RC_CALIB_EN                     (1 << 0)
#define REG_RC_CALIB_POLAR_SEL              (1 << 1)
#define REG_RC_CALIB_MODE_SHIFT             2
#define REG_RC_CALIB_MODE_MASK              (0x3 << REG_RC_CALIB_MODE_SHIFT)
#define REG_RC_CALIB_MODE(n)                BITFIELD_VAL(REG_RC_CALIB_MODE, n)
#define REG_RC_CALIB_CLK_REF_DIV_SHIFT      4
#define REG_RC_CALIB_CLK_REF_DIV_MASK       (0x3F << REG_RC_CALIB_CLK_REF_DIV_SHIFT)
#define REG_RC_CALIB_CLK_REF_DIV(n)         BITFIELD_VAL(REG_RC_CALIB_CLK_REF_DIV, n)
#define REG_RC_CALIB_SLOW_CNT_SHIFT         10
#define REG_RC_CALIB_SLOW_CNT_MASK          (0x3F << REG_RC_CALIB_SLOW_CNT_SHIFT)
#define REG_RC_CALIB_SLOW_CNT(n)            BITFIELD_VAL(REG_RC_CALIB_SLOW_CNT, n)

// REG_122
#define REG_RC_CALIB_GOAL_CNT_15_0_SHIFT    0
#define REG_RC_CALIB_GOAL_CNT_15_0_MASK     (0xFFFF << REG_RC_CALIB_GOAL_CNT_15_0_SHIFT)
#define REG_RC_CALIB_GOAL_CNT_15_0(n)       BITFIELD_VAL(REG_RC_CALIB_GOAL_CNT_15_0, n)

// REG_123
#define REG_RC_CALIB_GOAL_CNT_16            (1 << 0)
#define REG_RC_CALIB_REF_CNT_SHIFT          1
#define REG_RC_CALIB_REF_CNT_MASK           (0x3FF << REG_RC_CALIB_REF_CNT_SHIFT)
#define REG_RC_CALIB_REF_CNT(n)             BITFIELD_VAL(REG_RC_CALIB_REF_CNT, n)
#define REG_RC_CALIB_SLOW_FINE_MASK         (1 << 11)
#define REG_RC_CALIB_THRE_DONE_EN           (1 << 12)
#define REG_RC_CALIB_INIT_SEL               (1 << 13)

// REG_124
#define REG_RC_CALIB_FTRIM_DR               (1 << 0)
#define REG_RC_CALIB_FTRIM_SHIFT            1
#define REG_RC_CALIB_FTRIM_MASK             (0x3F << REG_RC_CALIB_FTRIM_SHIFT)
#define REG_RC_CALIB_FTRIM(n)               BITFIELD_VAL(REG_RC_CALIB_FTRIM, n)
#define REG_RC_CALIB_FTRIM_FINE_DR          (1 << 7)
#define REG_RC_CALIB_FTRIM_FINE_SHIFT       8
#define REG_RC_CALIB_FTRIM_FINE_MASK        (0x1F << REG_RC_CALIB_FTRIM_FINE_SHIFT)
#define REG_RC_CALIB_FTRIM_FINE(n)          BITFIELD_VAL(REG_RC_CALIB_FTRIM_FINE, n)
#define REG_RC_CALIB_DONE_INTR_EN           (1 << 13)
#define REG_RC_CALIB_DONE_INTR_MASK         (1 << 14)
#define REG_RC_CALIB_DONE_INTR_CLR          (1 << 15)

// REG_126
#define RC_CALIB_GOAL_CNT_15_0_SHIFT        0
#define RC_CALIB_GOAL_CNT_15_0_MASK         (0xFFFF << RC_CALIB_GOAL_CNT_15_0_SHIFT)
#define RC_CALIB_GOAL_CNT_15_0(n)           BITFIELD_VAL(RC_CALIB_GOAL_CNT_15_0, n)

// REG_127
#define RC_CALIB_FTRIM_FINE_SHIFT           0
#define RC_CALIB_FTRIM_FINE_MASK            (0x1F << RC_CALIB_FTRIM_FINE_SHIFT)
#define RC_CALIB_FTRIM_FINE(n)              BITFIELD_VAL(RC_CALIB_FTRIM_FINE, n)
#define RC_CALIB_FTRIM_SHIFT                5
#define RC_CALIB_FTRIM_MASK                 (0x3F << RC_CALIB_FTRIM_SHIFT)
#define RC_CALIB_FTRIM(n)                   BITFIELD_VAL(RC_CALIB_FTRIM, n)
#define RC_CALIB_STATE_SHIFT                11
#define RC_CALIB_STATE_MASK                 (0x3 << RC_CALIB_STATE_SHIFT)
#define RC_CALIB_STATE(n)                   BITFIELD_VAL(RC_CALIB_STATE, n)
#define RC_CALIB_DONE_RAW_INTR              (1 << 13)
#define RC_CALIB_DONE_INTR                  (1 << 14)
#define RC_CALIB_GOAL_CNT_16                (1 << 15)

// REG_125
#define REG_RC_CALIB_THRE_DONE_SHIFT        0
#define REG_RC_CALIB_THRE_DONE_MASK         (0xFF << REG_RC_CALIB_THRE_DONE_SHIFT)
#define REG_RC_CALIB_THRE_DONE(n)           BITFIELD_VAL(REG_RC_CALIB_THRE_DONE, n)

// REG_128
#define REG_RCOSC_48M_EN_CLK_CODEC_DIG      (1 << 8)

// REG_129
#define REG_RCOSC_48M_EN_CLK_PMU_DIG        (1 << 9)

// REG_130
#define REG_RCOSC_48M_REF_VBG               (1 << 10)

// REG_131
#define REG_RCOSC_48M_EN_DLATCH             (1 << 11)

// REG_12A
#define RESERVED_ANA_15_0_SHIFT             0
#define RESERVED_ANA_15_0_MASK              (0xFFFF << RESERVED_ANA_15_0_SHIFT)
#define RESERVED_ANA_15_0(n)                BITFIELD_VAL(RESERVED_ANA_15_0, n)

// REG_12B
#define RESERVED_ANA_31_16_SHIFT            0
#define RESERVED_ANA_31_16_MASK             (0xFFFF << RESERVED_ANA_31_16_SHIFT)
#define RESERVED_ANA_31_16(n)               BITFIELD_VAL(RESERVED_ANA_31_16, n)

// REG_12C
#define RESERVED_ANA_47_32_SHIFT            0
#define RESERVED_ANA_47_32_MASK             (0xFFFF << RESERVED_ANA_47_32_SHIFT)
#define RESERVED_ANA_47_32(n)               BITFIELD_VAL(RESERVED_ANA_47_32, n)

// REG_12D
#define RESERVED_ANA_55_48_SHIFT            0
#define RESERVED_ANA_55_48_MASK             (0xFF << RESERVED_ANA_55_48_SHIFT)
#define RESERVED_ANA_55_48(n)               BITFIELD_VAL(RESERVED_ANA_55_48, n)

// REG_12E
#define REG_CODEC_TX_EAR_GAIN_CHANGE_L      (1 << 0)
#define REG_CODEC_TX_EAR_GAIN_CHANGE_R      (1 << 1)

// REG_14F
#define REG_CODEC_TX_DAC_MUTEL              (1 << 0)
#define REG_CODEC_TX_DAC_MUTER              (1 << 1)
#define REG_CODEC_TX_EN_S1PA_R              (1 << 2)
#define REG_CODEC_TX_EN_S2PA_R              (1 << 3)
#define REG_CODEC_TX_EN_S3PA_R              (1 << 4)
#define REG_CODEC_TX_EN_S4PA_R              (1 << 5)
#define REG_CODEC_TX_EN_S5PA_R              (1 << 6)
#define REG_CODEC_TX_IB_SEL_ST2_R_SHIFT     7
#define REG_CODEC_TX_IB_SEL_ST2_R_MASK      (0x3 << REG_CODEC_TX_IB_SEL_ST2_R_SHIFT)
#define REG_CODEC_TX_IB_SEL_ST2_R(n)        BITFIELD_VAL(REG_CODEC_TX_IB_SEL_ST2_R, n)
#define REG_CODEC_TX_EAR_OUTPUTSEL_R_SHIFT  9
#define REG_CODEC_TX_EAR_OUTPUTSEL_R_MASK   (0xF << REG_CODEC_TX_EAR_OUTPUTSEL_R_SHIFT)
#define REG_CODEC_TX_EAR_OUTPUTSEL_R(n)     BITFIELD_VAL(REG_CODEC_TX_EAR_OUTPUTSEL_R, n)
#define REG_CODEC_TX_EAR_DR_EN_R            (1 << 13)
#define REG_CODEC_TX_EAR_OCEN_R             (1 << 14)

// REG_150
#define REG_CODEC_TX_EAR_LCAL               (1 << 0)
#define REG_CODEC_TX_EAR_RCAL               (1 << 1)
#define REG_CODEC_TX_EAR_OFFEN_R            (1 << 2)
#define REG_PU_RX_REGULATOR                 (1 << 3)
#define REG_RX_REG_CAP_BIT                  (1 << 4)
#define REG_RX_REGULAOTR_BIT_SHIFT          5
#define REG_RX_REGULAOTR_BIT_MASK           (0xF << REG_RX_REGULAOTR_BIT_SHIFT)
#define REG_RX_REGULAOTR_BIT(n)             BITFIELD_VAL(REG_RX_REGULAOTR_BIT, n)

// REG_151
#define REG_TSENSOR_SDM_RSTB                (1 << 0)
#define REG_EN_TEMP_SENSOR                  (1 << 1)
#define REG_TSENSOR_LOWGAIN_VREF_SHIFT      2
#define REG_TSENSOR_LOWGAIN_VREF_MASK       (0x3 << REG_TSENSOR_LOWGAIN_VREF_SHIFT)
#define REG_TSENSOR_LOWGAIN_VREF(n)         BITFIELD_VAL(REG_TSENSOR_LOWGAIN_VREF, n)
#define REG_TSENSOR_LP_VREFBUF_SHIFT        4
#define REG_TSENSOR_LP_VREFBUF_MASK         (0x7 << REG_TSENSOR_LP_VREFBUF_SHIFT)
#define REG_TSENSOR_LP_VREFBUF(n)           BITFIELD_VAL(REG_TSENSOR_LP_VREFBUF, n)
#define REG_TSENSOR_OP2_IBIT_SHIFT          8
#define REG_TSENSOR_OP2_IBIT_MASK           (0x3 << REG_TSENSOR_OP2_IBIT_SHIFT)
#define REG_TSENSOR_OP2_IBIT(n)             BITFIELD_VAL(REG_TSENSOR_OP2_IBIT, n)
#define REG_TSENSOR_BYPASS_PREAMP           (1 << 10)
#define REG_TSENSOR_SENS_RES_IN_SHIFT       11
#define REG_TSENSOR_SENS_RES_IN_MASK        (0x1F << REG_TSENSOR_SENS_RES_IN_SHIFT)
#define REG_TSENSOR_SENS_RES_IN(n)          BITFIELD_VAL(REG_TSENSOR_SENS_RES_IN, n)

// REG_152
#define REG_TSENSOR_CAP1_SHIFT              0
#define REG_TSENSOR_CAP1_MASK               (0xF << REG_TSENSOR_CAP1_SHIFT)
#define REG_TSENSOR_CAP1(n)                 BITFIELD_VAL(REG_TSENSOR_CAP1, n)
#define REG_TSENSOR_CAP2_SHIFT              4
#define REG_TSENSOR_CAP2_MASK               (0xF << REG_TSENSOR_CAP2_SHIFT)
#define REG_TSENSOR_CAP2(n)                 BITFIELD_VAL(REG_TSENSOR_CAP2, n)
#define REG_TSENSOR_VREF_BIT_IN_SHIFT       8
#define REG_TSENSOR_VREF_BIT_IN_MASK        (0xF << REG_TSENSOR_VREF_BIT_IN_SHIFT)
#define REG_TSENSOR_VREF_BIT_IN(n)          BITFIELD_VAL(REG_TSENSOR_VREF_BIT_IN, n)
#define REG_TSENSOR_PU_CHOP                 (1 << 12)
#define REG_TSENSOR_CHOP_EDGE               (1 << 13)
#define REG_EDGE_CLK_TSENSOR                (1 << 14)

// REG_153
#define REG_TSENSOR_OP1_IBIT_SHIFT          0
#define REG_TSENSOR_OP1_IBIT_MASK           (0x3 << REG_TSENSOR_OP1_IBIT_SHIFT)
#define REG_TSENSOR_OP1_IBIT(n)             BITFIELD_VAL(REG_TSENSOR_OP1_IBIT, n)
#define REG_TSENSOR_OP1_IBIT2_SHIFT         2
#define REG_TSENSOR_OP1_IBIT2_MASK          (0x3 << REG_TSENSOR_OP1_IBIT2_SHIFT)
#define REG_TSENSOR_OP1_IBIT2(n)            BITFIELD_VAL(REG_TSENSOR_OP1_IBIT2, n)

// REG_154
#define REG_CODEC_TX_EAR_OFF_BITL_1_SHIFT   0
#define REG_CODEC_TX_EAR_OFF_BITL_1_MASK    (0x3FFF << REG_CODEC_TX_EAR_OFF_BITL_1_SHIFT)
#define REG_CODEC_TX_EAR_OFF_BITL_1(n)      BITFIELD_VAL(REG_CODEC_TX_EAR_OFF_BITL_1, n)

// REG_155
#define REG_CODEC_TX_EAR_OFF_BITL_2_SHIFT   0
#define REG_CODEC_TX_EAR_OFF_BITL_2_MASK    (0x3FFF << REG_CODEC_TX_EAR_OFF_BITL_2_SHIFT)
#define REG_CODEC_TX_EAR_OFF_BITL_2(n)      BITFIELD_VAL(REG_CODEC_TX_EAR_OFF_BITL_2, n)

// REG_156
#define REG_CODEC_TX_EAR_OFF_BITR_1_SHIFT   0
#define REG_CODEC_TX_EAR_OFF_BITR_1_MASK    (0x3FFF << REG_CODEC_TX_EAR_OFF_BITR_1_SHIFT)
#define REG_CODEC_TX_EAR_OFF_BITR_1(n)      BITFIELD_VAL(REG_CODEC_TX_EAR_OFF_BITR_1, n)

// REG_157
#define REG_CODEC_TX_EAR_OFF_BITR_2_SHIFT   0
#define REG_CODEC_TX_EAR_OFF_BITR_2_MASK    (0x3FFF << REG_CODEC_TX_EAR_OFF_BITR_2_SHIFT)
#define REG_CODEC_TX_EAR_OFF_BITR_2(n)      BITFIELD_VAL(REG_CODEC_TX_EAR_OFF_BITR_2, n)

// REG_158
#define REG_CODEC_TX_EAR_DRE_GAIN_L_1_SHIFT 0
#define REG_CODEC_TX_EAR_DRE_GAIN_L_1_MASK  (0x1F << REG_CODEC_TX_EAR_DRE_GAIN_L_1_SHIFT)
#define REG_CODEC_TX_EAR_DRE_GAIN_L_1(n)    BITFIELD_VAL(REG_CODEC_TX_EAR_DRE_GAIN_L_1, n)
#define REG_CODEC_TX_EAR_DRE_GAIN_R_1_SHIFT 8
#define REG_CODEC_TX_EAR_DRE_GAIN_R_1_MASK  (0x1F << REG_CODEC_TX_EAR_DRE_GAIN_R_1_SHIFT)
#define REG_CODEC_TX_EAR_DRE_GAIN_R_1(n)    BITFIELD_VAL(REG_CODEC_TX_EAR_DRE_GAIN_R_1, n)

// REG_159
#define REG_CODEC_TX_EAR_DRE_GAIN_L_2_SHIFT 0
#define REG_CODEC_TX_EAR_DRE_GAIN_L_2_MASK  (0x1F << REG_CODEC_TX_EAR_DRE_GAIN_L_2_SHIFT)
#define REG_CODEC_TX_EAR_DRE_GAIN_L_2(n)    BITFIELD_VAL(REG_CODEC_TX_EAR_DRE_GAIN_L_2, n)
#define REG_CODEC_TX_EAR_DRE_GAIN_R_2_SHIFT 8
#define REG_CODEC_TX_EAR_DRE_GAIN_R_2_MASK  (0x1F << REG_CODEC_TX_EAR_DRE_GAIN_R_2_SHIFT)
#define REG_CODEC_TX_EAR_DRE_GAIN_R_2(n)    BITFIELD_VAL(REG_CODEC_TX_EAR_DRE_GAIN_R_2, n)

// REG_15A
#define ANADRE_GAIN_SEL                     (1 << 0)
#define ANADRE_DC_SEL                       (1 << 1)

// REG_200
#define REVID_SHIFT                         0
#define REVID_MASK                          (0xF << REVID_SHIFT)
#define REVID(n)                            BITFIELD_VAL(REVID, n)

// REG_201
#define REG_SAR_INIT_CALI_BIT_SHIFT         0
#define REG_SAR_INIT_CALI_BIT_MASK          (0x1F << REG_SAR_INIT_CALI_BIT_SHIFT)
#define REG_SAR_INIT_CALI_BIT(n)            BITFIELD_VAL(REG_SAR_INIT_CALI_BIT, n)
#define REG_SAR_CALI                        (1 << 5)
#define REG_SAR_CALI_CNT_SHIFT              6
#define REG_SAR_CALI_CNT_MASK               (0xF << REG_SAR_CALI_CNT_SHIFT)
#define REG_SAR_CALI_CNT(n)                 BITFIELD_VAL(REG_SAR_CALI_CNT, n)
#define REG_SAR_CALI_LSB_SCRN               (1 << 10)
#define REG_SAR_WEIGHT_DR                   (1 << 11)
#define REG_SAR_OFFSET_DR                   (1 << 12)
#define REG_SAR_ADC_OFFSET_DR               (1 << 13)
#define CLK_SARADC_CODEC_INV                (1 << 14)
#define REG_CLK_SAR_MUX                     (1 << 15)

// REG_202
#define REG_SAR_OFFSET_P_SHIFT              0
#define REG_SAR_OFFSET_P_MASK               (0x1F << REG_SAR_OFFSET_P_SHIFT)
#define REG_SAR_OFFSET_P(n)                 BITFIELD_VAL(REG_SAR_OFFSET_P, n)
#define REG_SAR_OFFSET_N_SHIFT              5
#define REG_SAR_OFFSET_N_MASK               (0x1F << REG_SAR_OFFSET_N_SHIFT)
#define REG_SAR_OFFSET_N(n)                 BITFIELD_VAL(REG_SAR_OFFSET_N, n)
#define REG_CODEC_SAR_DELAY_CMP             (1 << 10)
#define REG_CODEC_SAR_HIGH_DVDD_EN          (1 << 11)
#define REG_CODEC_SAR_HIGH_PW_CMP           (1 << 12)
#define REG_CODEC_SAR_PGA_EN_IN             (1 << 13)
#define REG_SAR_DIFF_EN_IN_DR               (1 << 14)
#define REG_SAR_DIFF_EN_IN_REG              (1 << 15)

// REG_203
#define REG_SAR_ADC_OFFSET_SHIFT            0
#define REG_SAR_ADC_OFFSET_MASK             (0xFFFF << REG_SAR_ADC_OFFSET_SHIFT)
#define REG_SAR_ADC_OFFSET(n)               BITFIELD_VAL(REG_SAR_ADC_OFFSET, n)

// REG_204
#define REG_SAR_ADC_OFFSET_IN_SHIFT         0
#define REG_SAR_ADC_OFFSET_IN_MASK          (0xFFFF << REG_SAR_ADC_OFFSET_IN_SHIFT)
#define REG_SAR_ADC_OFFSET_IN(n)            BITFIELD_VAL(REG_SAR_ADC_OFFSET_IN, n)

// REG_205
#define REG_SAR_OFFSET_CALI                 (1 << 0)
#define REG_SAR_OFFSET_CALI_CNT_SHIFT       1
#define REG_SAR_OFFSET_CALI_CNT_MASK        (0x7 << REG_SAR_OFFSET_CALI_CNT_SHIFT)
#define REG_SAR_OFFSET_CALI_CNT(n)          BITFIELD_VAL(REG_SAR_OFFSET_CALI_CNT, n)
#define REG_SAR_CLK_INT_DIV_SHIFT           5
#define REG_SAR_CLK_INT_DIV_MASK            (0x7F << REG_SAR_CLK_INT_DIV_SHIFT)
#define REG_SAR_CLK_INT_DIV(n)              BITFIELD_VAL(REG_SAR_CLK_INT_DIV, n)
#define SAR_VOUT_CALIB_INV                  (1 << 12)
#define SAR_CONV_DONE_INV                   (1 << 13)
#define REG_SAR_RESULT_SEL                  (1 << 14)
#define REG_SAR_ADC_ON                      (1 << 15)

// REG_206
#define REG_SAR_CH_SEL_IN_SHIFT             0
#define REG_SAR_CH_SEL_IN_MASK              (0xFF << REG_SAR_CH_SEL_IN_SHIFT)
#define REG_SAR_CH_SEL_IN(n)                BITFIELD_VAL(REG_SAR_CH_SEL_IN, n)
#define REG_CODEC_SAR_CLK_TRIM_SHIFT        8
#define REG_CODEC_SAR_CLK_TRIM_MASK         (0x3 << REG_CODEC_SAR_CLK_TRIM_SHIFT)
#define REG_CODEC_SAR_CLK_TRIM(n)           BITFIELD_VAL(REG_CODEC_SAR_CLK_TRIM, n)
#define REG_CODEC_SAR_CLK_MODE              (1 << 10)
#define REG_CODEC_SAR_DELAY_BIT_SHIFT       11
#define REG_CODEC_SAR_DELAY_BIT_MASK        (0x3 << REG_CODEC_SAR_DELAY_BIT_SHIFT)
#define REG_CODEC_SAR_DELAY_BIT(n)          BITFIELD_VAL(REG_CODEC_SAR_DELAY_BIT, n)
#define REG_CODEC_SAR_EN_PREAMP             (1 << 13)
#define REG_SAR_CLK_EN                      (1 << 14)
#define REG_CODEC_SAR_PGA_EN                (1 << 15)

// REG_207
#define REG_SAR_PU_PIN_BIAS                 (1 << 0)
#define REG_SAR_PU_NIN_BIAS                 (1 << 1)
#define REG_CODEC_SAR_SE_MODE               (1 << 2)
#define REG_CODEC_SAR_THERM_GAIN_IN_SHIFT   3
#define REG_CODEC_SAR_THERM_GAIN_IN_MASK    (0x3 << REG_CODEC_SAR_THERM_GAIN_IN_SHIFT)
#define REG_CODEC_SAR_THERM_GAIN_IN(n)      BITFIELD_VAL(REG_CODEC_SAR_THERM_GAIN_IN, n)
#define REG_CODEC_SAR_VREG_IBIT_SHIFT       5
#define REG_CODEC_SAR_VREG_IBIT_MASK        (0x3 << REG_CODEC_SAR_VREG_IBIT_SHIFT)
#define REG_CODEC_SAR_VREG_IBIT(n)          BITFIELD_VAL(REG_CODEC_SAR_VREG_IBIT, n)
#define REG_CODEC_SAR_VREG_OUTCAP_MODE_SHIFT 7
#define REG_CODEC_SAR_VREG_OUTCAP_MODE_MASK (0x3 << REG_CODEC_SAR_VREG_OUTCAP_MODE_SHIFT)
#define REG_CODEC_SAR_VREG_OUTCAP_MODE(n)   BITFIELD_VAL(REG_CODEC_SAR_VREG_OUTCAP_MODE, n)
#define REG_CODEC_SAR_VREG_SEL_SHIFT        9
#define REG_CODEC_SAR_VREG_SEL_MASK         (0xF << REG_CODEC_SAR_VREG_SEL_SHIFT)
#define REG_CODEC_SAR_VREG_SEL(n)           BITFIELD_VAL(REG_CODEC_SAR_VREG_SEL, n)
#define REG_CODEC_SAR_PGA_IBIT_SHIFT        13
#define REG_CODEC_SAR_PGA_IBIT_MASK         (0x3 << REG_CODEC_SAR_PGA_IBIT_SHIFT)
#define REG_CODEC_SAR_PGA_IBIT(n)           BITFIELD_VAL(REG_CODEC_SAR_PGA_IBIT, n)

// REG_208
#define REG_SAR_CLK_OUT_DIV_SHIFT           0
#define REG_SAR_CLK_OUT_DIV_MASK            (0x1FFF << REG_SAR_CLK_OUT_DIV_SHIFT)
#define REG_SAR_CLK_OUT_DIV(n)              BITFIELD_VAL(REG_SAR_CLK_OUT_DIV, n)
#define REG_SAR_PU_PIN_BIAS_DR              (1 << 13)
#define REG_SAR_PU_NIN_BIAS_DR              (1 << 14)

// REG_209
#define REG_SAR_PU_VREF_DR                  (1 << 0)
#define REG_SAR_PU_VREF_REG                 (1 << 1)
#define REG_SAR_PU_VREF_IN                  (1 << 2)
#define REG_SAR_PU_DR                       (1 << 3)
#define REG_SAR_PU_REG                      (1 << 4)
#define REG_SAR_PU_PRECHARGE_DR             (1 << 5)
#define REG_SAR_PU_PRECHARGE_REG            (1 << 6)
#define REG_SAR_PU_RST_DR                   (1 << 7)
#define REG_SAR_PU_RST_REG                  (1 << 8)
#define REG_SAR_PU_START_DLY_CNT_SHIFT      9
#define REG_SAR_PU_START_DLY_CNT_MASK       (0x7F << REG_SAR_PU_START_DLY_CNT_SHIFT)
#define REG_SAR_PU_START_DLY_CNT(n)         BITFIELD_VAL(REG_SAR_PU_START_DLY_CNT, n)

// REG_20A
#define REG_SAR_PU_PRECHARGE_START_DLY_CNT_SHIFT 0
#define REG_SAR_PU_PRECHARGE_START_DLY_CNT_MASK (0x7F << REG_SAR_PU_PRECHARGE_START_DLY_CNT_SHIFT)
#define REG_SAR_PU_PRECHARGE_START_DLY_CNT(n) BITFIELD_VAL(REG_SAR_PU_PRECHARGE_START_DLY_CNT, n)
#define REG_SAR_PU_RST_START_DLY_CNT_SHIFT  7
#define REG_SAR_PU_RST_START_DLY_CNT_MASK   (0x7F << REG_SAR_PU_RST_START_DLY_CNT_SHIFT)
#define REG_SAR_PU_RST_START_DLY_CNT(n)     BITFIELD_VAL(REG_SAR_PU_RST_START_DLY_CNT, n)

// REG_20B
#define REG_SAR_PU_RST_LAST_CNT_SHIFT       0
#define REG_SAR_PU_RST_LAST_CNT_MASK        (0x7F << REG_SAR_PU_RST_LAST_CNT_SHIFT)
#define REG_SAR_PU_RST_LAST_CNT(n)          BITFIELD_VAL(REG_SAR_PU_RST_LAST_CNT, n)
#define REG_SAR_PU_PRECHARGE_LAST_CNT_SHIFT 7
#define REG_SAR_PU_PRECHARGE_LAST_CNT_MASK  (0x1FF << REG_SAR_PU_PRECHARGE_LAST_CNT_SHIFT)
#define REG_SAR_PU_PRECHARGE_LAST_CNT(n)    BITFIELD_VAL(REG_SAR_PU_PRECHARGE_LAST_CNT, n)

// REG_20C
#define REG_SAR_OFFSET_P_OUT_SHIFT          0
#define REG_SAR_OFFSET_P_OUT_MASK           (0x1F << REG_SAR_OFFSET_P_OUT_SHIFT)
#define REG_SAR_OFFSET_P_OUT(n)             BITFIELD_VAL(REG_SAR_OFFSET_P_OUT, n)
#define REG_SAR_OFFSET_N_OUT_SHIFT          5
#define REG_SAR_OFFSET_N_OUT_MASK           (0x1F << REG_SAR_OFFSET_N_OUT_SHIFT)
#define REG_SAR_OFFSET_N_OUT(n)             BITFIELD_VAL(REG_SAR_OFFSET_N_OUT, n)

// REG_211
#define SAR_BIT00_WEIGHT_SHIFT              0
#define SAR_BIT00_WEIGHT_MASK               (0x3FFF << SAR_BIT00_WEIGHT_SHIFT)
#define SAR_BIT00_WEIGHT(n)                 BITFIELD_VAL(SAR_BIT00_WEIGHT, n)

// REG_212
#define SAR_BIT01_WEIGHT_SHIFT              0
#define SAR_BIT01_WEIGHT_MASK               (0x3FFF << SAR_BIT01_WEIGHT_SHIFT)
#define SAR_BIT01_WEIGHT(n)                 BITFIELD_VAL(SAR_BIT01_WEIGHT, n)

// REG_213
#define SAR_BIT02_WEIGHT_SHIFT              0
#define SAR_BIT02_WEIGHT_MASK               (0x3FFF << SAR_BIT02_WEIGHT_SHIFT)
#define SAR_BIT02_WEIGHT(n)                 BITFIELD_VAL(SAR_BIT02_WEIGHT, n)

// REG_214
#define SAR_BIT03_WEIGHT_SHIFT              0
#define SAR_BIT03_WEIGHT_MASK               (0x3FFF << SAR_BIT03_WEIGHT_SHIFT)
#define SAR_BIT03_WEIGHT(n)                 BITFIELD_VAL(SAR_BIT03_WEIGHT, n)

// REG_215
#define SAR_BIT04_WEIGHT_SHIFT              0
#define SAR_BIT04_WEIGHT_MASK               (0x3FFF << SAR_BIT04_WEIGHT_SHIFT)
#define SAR_BIT04_WEIGHT(n)                 BITFIELD_VAL(SAR_BIT04_WEIGHT, n)

// REG_216
#define SAR_P_BIT05_WEIGHT_SHIFT            0
#define SAR_P_BIT05_WEIGHT_MASK             (0x3FFF << SAR_P_BIT05_WEIGHT_SHIFT)
#define SAR_P_BIT05_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT05_WEIGHT, n)

// REG_217
#define SAR_P_BIT06_WEIGHT_SHIFT            0
#define SAR_P_BIT06_WEIGHT_MASK             (0x3FFF << SAR_P_BIT06_WEIGHT_SHIFT)
#define SAR_P_BIT06_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT06_WEIGHT, n)

// REG_218
#define SAR_P_BIT07_WEIGHT_SHIFT            0
#define SAR_P_BIT07_WEIGHT_MASK             (0x3FFF << SAR_P_BIT07_WEIGHT_SHIFT)
#define SAR_P_BIT07_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT07_WEIGHT, n)

// REG_219
#define SAR_P_BIT08_WEIGHT_SHIFT            0
#define SAR_P_BIT08_WEIGHT_MASK             (0x3FFF << SAR_P_BIT08_WEIGHT_SHIFT)
#define SAR_P_BIT08_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT08_WEIGHT, n)

// REG_21A
#define SAR_P_BIT09_WEIGHT_SHIFT            0
#define SAR_P_BIT09_WEIGHT_MASK             (0x3FFF << SAR_P_BIT09_WEIGHT_SHIFT)
#define SAR_P_BIT09_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT09_WEIGHT, n)

// REG_21B
#define SAR_P_BIT10_WEIGHT_SHIFT            0
#define SAR_P_BIT10_WEIGHT_MASK             (0x3FFF << SAR_P_BIT10_WEIGHT_SHIFT)
#define SAR_P_BIT10_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT10_WEIGHT, n)

// REG_21C
#define SAR_P_BIT11_WEIGHT_SHIFT            0
#define SAR_P_BIT11_WEIGHT_MASK             (0x3FFF << SAR_P_BIT11_WEIGHT_SHIFT)
#define SAR_P_BIT11_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT11_WEIGHT, n)

// REG_21D
#define SAR_P_BIT12_WEIGHT_SHIFT            0
#define SAR_P_BIT12_WEIGHT_MASK             (0x3FFF << SAR_P_BIT12_WEIGHT_SHIFT)
#define SAR_P_BIT12_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT12_WEIGHT, n)

// REG_21E
#define SAR_P_BIT13_WEIGHT_SHIFT            0
#define SAR_P_BIT13_WEIGHT_MASK             (0x3FFF << SAR_P_BIT13_WEIGHT_SHIFT)
#define SAR_P_BIT13_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT13_WEIGHT, n)

// REG_21F
#define SAR_P_BIT14_WEIGHT_SHIFT            0
#define SAR_P_BIT14_WEIGHT_MASK             (0x3FFF << SAR_P_BIT14_WEIGHT_SHIFT)
#define SAR_P_BIT14_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT14_WEIGHT, n)

// REG_220
#define SAR_P_BIT15_WEIGHT_SHIFT            0
#define SAR_P_BIT15_WEIGHT_MASK             (0x3FFF << SAR_P_BIT15_WEIGHT_SHIFT)
#define SAR_P_BIT15_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT15_WEIGHT, n)

// REG_221
#define SAR_P_BIT16_WEIGHT_SHIFT            0
#define SAR_P_BIT16_WEIGHT_MASK             (0x3FFF << SAR_P_BIT16_WEIGHT_SHIFT)
#define SAR_P_BIT16_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT16_WEIGHT, n)

// REG_222
#define SAR_P_BIT17_WEIGHT_SHIFT            0
#define SAR_P_BIT17_WEIGHT_MASK             (0x3FFF << SAR_P_BIT17_WEIGHT_SHIFT)
#define SAR_P_BIT17_WEIGHT(n)               BITFIELD_VAL(SAR_P_BIT17_WEIGHT, n)

// REG_223
#define SAR_N_BIT05_WEIGHT_SHIFT            0
#define SAR_N_BIT05_WEIGHT_MASK             (0x3FFF << SAR_N_BIT05_WEIGHT_SHIFT)
#define SAR_N_BIT05_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT05_WEIGHT, n)

// REG_224
#define SAR_N_BIT06_WEIGHT_SHIFT            0
#define SAR_N_BIT06_WEIGHT_MASK             (0x3FFF << SAR_N_BIT06_WEIGHT_SHIFT)
#define SAR_N_BIT06_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT06_WEIGHT, n)

// REG_225
#define SAR_N_BIT07_WEIGHT_SHIFT            0
#define SAR_N_BIT07_WEIGHT_MASK             (0x3FFF << SAR_N_BIT07_WEIGHT_SHIFT)
#define SAR_N_BIT07_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT07_WEIGHT, n)

// REG_226
#define SAR_N_BIT08_WEIGHT_SHIFT            0
#define SAR_N_BIT08_WEIGHT_MASK             (0x3FFF << SAR_N_BIT08_WEIGHT_SHIFT)
#define SAR_N_BIT08_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT08_WEIGHT, n)

// REG_227
#define SAR_N_BIT09_WEIGHT_SHIFT            0
#define SAR_N_BIT09_WEIGHT_MASK             (0x3FFF << SAR_N_BIT09_WEIGHT_SHIFT)
#define SAR_N_BIT09_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT09_WEIGHT, n)

// REG_228
#define SAR_N_BIT10_WEIGHT_SHIFT            0
#define SAR_N_BIT10_WEIGHT_MASK             (0x3FFF << SAR_N_BIT10_WEIGHT_SHIFT)
#define SAR_N_BIT10_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT10_WEIGHT, n)

// REG_229
#define SAR_N_BIT11_WEIGHT_SHIFT            0
#define SAR_N_BIT11_WEIGHT_MASK             (0x3FFF << SAR_N_BIT11_WEIGHT_SHIFT)
#define SAR_N_BIT11_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT11_WEIGHT, n)

// REG_22A
#define SAR_N_BIT12_WEIGHT_SHIFT            0
#define SAR_N_BIT12_WEIGHT_MASK             (0x3FFF << SAR_N_BIT12_WEIGHT_SHIFT)
#define SAR_N_BIT12_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT12_WEIGHT, n)

// REG_22B
#define SAR_N_BIT13_WEIGHT_SHIFT            0
#define SAR_N_BIT13_WEIGHT_MASK             (0x3FFF << SAR_N_BIT13_WEIGHT_SHIFT)
#define SAR_N_BIT13_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT13_WEIGHT, n)

// REG_22C
#define SAR_N_BIT14_WEIGHT_SHIFT            0
#define SAR_N_BIT14_WEIGHT_MASK             (0x3FFF << SAR_N_BIT14_WEIGHT_SHIFT)
#define SAR_N_BIT14_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT14_WEIGHT, n)

// REG_22D
#define SAR_N_BIT15_WEIGHT_SHIFT            0
#define SAR_N_BIT15_WEIGHT_MASK             (0x3FFF << SAR_N_BIT15_WEIGHT_SHIFT)
#define SAR_N_BIT15_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT15_WEIGHT, n)

// REG_22E
#define SAR_N_BIT16_WEIGHT_SHIFT            0
#define SAR_N_BIT16_WEIGHT_MASK             (0x3FFF << SAR_N_BIT16_WEIGHT_SHIFT)
#define SAR_N_BIT16_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT16_WEIGHT, n)

// REG_22F
#define SAR_N_BIT17_WEIGHT_SHIFT            0
#define SAR_N_BIT17_WEIGHT_MASK             (0x3FFF << SAR_N_BIT17_WEIGHT_SHIFT)
#define SAR_N_BIT17_WEIGHT(n)               BITFIELD_VAL(SAR_N_BIT17_WEIGHT, n)

// REG_231
#define SAR_P_BIT05_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT05_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT05_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT05_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT05_WEIGHT_OUT, n)

// REG_232
#define SAR_P_BIT06_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT06_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT06_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT06_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT06_WEIGHT_OUT, n)

// REG_233
#define SAR_P_BIT07_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT07_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT07_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT07_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT07_WEIGHT_OUT, n)

// REG_234
#define SAR_P_BIT08_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT08_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT08_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT08_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT08_WEIGHT_OUT, n)

// REG_235
#define SAR_P_BIT09_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT09_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT09_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT09_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT09_WEIGHT_OUT, n)

// REG_236
#define SAR_P_BIT10_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT10_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT10_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT10_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT10_WEIGHT_OUT, n)

// REG_237
#define SAR_P_BIT11_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT11_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT11_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT11_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT11_WEIGHT_OUT, n)

// REG_238
#define SAR_P_BIT12_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT12_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT12_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT12_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT12_WEIGHT_OUT, n)

// REG_239
#define SAR_P_BIT13_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT13_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT13_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT13_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT13_WEIGHT_OUT, n)

// REG_23A
#define SAR_P_BIT14_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT14_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT14_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT14_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT14_WEIGHT_OUT, n)

// REG_23B
#define SAR_P_BIT15_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT15_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT15_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT15_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT15_WEIGHT_OUT, n)

// REG_23C
#define SAR_P_BIT16_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT16_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT16_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT16_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT16_WEIGHT_OUT, n)

// REG_23D
#define SAR_P_BIT17_WEIGHT_OUT_SHIFT        0
#define SAR_P_BIT17_WEIGHT_OUT_MASK         (0x3FFF << SAR_P_BIT17_WEIGHT_OUT_SHIFT)
#define SAR_P_BIT17_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_P_BIT17_WEIGHT_OUT, n)

// REG_23E
#define SAR_N_BIT05_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT05_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT05_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT05_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT05_WEIGHT_OUT, n)

// REG_23F
#define SAR_N_BIT06_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT06_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT06_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT06_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT06_WEIGHT_OUT, n)

// REG_240
#define SAR_N_BIT07_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT07_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT07_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT07_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT07_WEIGHT_OUT, n)

// REG_241
#define SAR_N_BIT08_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT08_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT08_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT08_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT08_WEIGHT_OUT, n)

// REG_242
#define SAR_N_BIT09_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT09_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT09_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT09_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT09_WEIGHT_OUT, n)

// REG_243
#define SAR_N_BIT10_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT10_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT10_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT10_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT10_WEIGHT_OUT, n)

// REG_244
#define SAR_N_BIT11_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT11_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT11_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT11_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT11_WEIGHT_OUT, n)

// REG_245
#define SAR_N_BIT12_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT12_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT12_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT12_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT12_WEIGHT_OUT, n)

// REG_246
#define SAR_N_BIT13_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT13_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT13_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT13_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT13_WEIGHT_OUT, n)

// REG_247
#define SAR_N_BIT14_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT14_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT14_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT14_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT14_WEIGHT_OUT, n)

// REG_248
#define SAR_N_BIT15_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT15_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT15_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT15_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT15_WEIGHT_OUT, n)

// REG_249
#define SAR_N_BIT16_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT16_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT16_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT16_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT16_WEIGHT_OUT, n)

// REG_24A
#define SAR_N_BIT17_WEIGHT_OUT_SHIFT        0
#define SAR_N_BIT17_WEIGHT_OUT_MASK         (0x3FFF << SAR_N_BIT17_WEIGHT_OUT_SHIFT)
#define SAR_N_BIT17_WEIGHT_OUT(n)           BITFIELD_VAL(SAR_N_BIT17_WEIGHT_OUT, n)
#define SAR_DETECT                          (1 << 14)

// REG_24B
#define REG_SAR_TRIG_ENABLE                 (1 << 0)
#define REG_SAR_TRIG_POL_RATE               (1 << 1)
#define REG_SAR_TRIG_DET_CLR                (1 << 2)
#define REG_SAR_TRIG_HPF_BYPASS             (1 << 3)
#define REG_SAR_TRIG_LPF_BYPASS             (1 << 4)
#define REG_SAR_TRIG_U_DC_SHIFT             5
#define REG_SAR_TRIG_U_DC_MASK              (0xF << REG_SAR_TRIG_U_DC_SHIFT)
#define REG_SAR_TRIG_U_DC(n)                BITFIELD_VAL(REG_SAR_TRIG_U_DC, n)
#define REG_SAR_TRIG_COEF_A1_SHIFT          9
#define REG_SAR_TRIG_COEF_A1_MASK           (0x7F << REG_SAR_TRIG_COEF_A1_SHIFT)
#define REG_SAR_TRIG_COEF_A1(n)             BITFIELD_VAL(REG_SAR_TRIG_COEF_A1, n)

// REG_24C
#define REG_SAR_TRIG_COEF_B0_SHIFT          0
#define REG_SAR_TRIG_COEF_B0_MASK           (0x7F << REG_SAR_TRIG_COEF_B0_SHIFT)
#define REG_SAR_TRIG_COEF_B0(n)             BITFIELD_VAL(REG_SAR_TRIG_COEF_B0, n)
#define REG_SAR_TRIG_COEF_B1_SHIFT          7
#define REG_SAR_TRIG_COEF_B1_MASK           (0x7F << REG_SAR_TRIG_COEF_B1_SHIFT)
#define REG_SAR_TRIG_COEF_B1(n)             BITFIELD_VAL(REG_SAR_TRIG_COEF_B1, n)

// REG_24D
#define REG_SAR_TRIG_TH_SHIFT               0
#define REG_SAR_TRIG_TH_MASK                (0xFFFF << REG_SAR_TRIG_TH_SHIFT)
#define REG_SAR_TRIG_TH(n)                  BITFIELD_VAL(REG_SAR_TRIG_TH, n)

// REG_24E
#define SAR_TRIG_DOUT_ABS_SHIFT             0
#define SAR_TRIG_DOUT_ABS_MASK              (0xFFFF << SAR_TRIG_DOUT_ABS_SHIFT)
#define SAR_TRIG_DOUT_ABS(n)                BITFIELD_VAL(SAR_TRIG_DOUT_ABS, n)

// REG_24F
#define CFG_SAR_DET_DELAY_SHIFT             0
#define CFG_SAR_DET_DELAY_MASK              (0xFFF << CFG_SAR_DET_DELAY_SHIFT)
#define CFG_SAR_DET_DELAY(n)                BITFIELD_VAL(CFG_SAR_DET_DELAY, n)
#define SAR_SWITCH2OSC_EN                   (1 << 12)
#define SEL_SARCLK_DIV2                     (1 << 13)
#define REG_SAR_TO_SIGN                     (1 << 14)
#define REG_SAR_CLOSE_ON_DET                (1 << 15)

// REG_250
#define SAR_DET_DLY_TIMER_SHIFT             0
#define SAR_DET_DLY_TIMER_MASK              (0xFF << SAR_DET_DLY_TIMER_SHIFT)
#define SAR_DET_DLY_TIMER(n)                BITFIELD_VAL(SAR_DET_DLY_TIMER, n)
#define REG_SENSOR_CHAN_SET_VREFP1_INT      (1 << 8)
#define REG_SENSOR_CHAN_SET_VREFP1_DR       (1 << 9)
#define REG_SENSOR_CHAN_SET_VREFP1_INV      (1 << 10)
#define REG_SENSOR_CHAN_SET_VREFP2_INT      (1 << 11)
#define REG_SENSOR_CHAN_SET_VREFP2_DR       (1 << 12)
#define REG_SENSOR_CHAN_SET_VREFP2_INV      (1 << 13)

// REG_252
#define REG_OFFSET_BIT_A_SHIFT              0
#define REG_OFFSET_BIT_A_MASK               (0x1FF << REG_OFFSET_BIT_A_SHIFT)
#define REG_OFFSET_BIT_A(n)                 BITFIELD_VAL(REG_OFFSET_BIT_A, n)
#define REG_CODEC_SENSOR_CLK_COMP_CALIB_DR  (1 << 9)
#define REG_CODEC_SENSOR_CLK_COMP_CALIB_INT (1 << 10)
#define REG_SENSOR_CLK_CAL_EN               (1 << 11)
#define REG_SAR_LP_MODE                     (1 << 12)
#define REG_SAR_LP_MODE_DR                  (1 << 13)
#define REG_OFFSET_BIT_A_DR                 (1 << 14)
#define REG_CODEC_SAR_PGA_OP_R_SEL          (1 << 15)

// REG_253
#define REG_DET_PERIOD_SHIFT                7
#define REG_DET_PERIOD_MASK                 (0x1FF << REG_DET_PERIOD_SHIFT)
#define REG_DET_PERIOD(n)                   BITFIELD_VAL(REG_DET_PERIOD, n)

// REG_254
#define REG_SEN_PU_TIME_SHIFT               0
#define REG_SEN_PU_TIME_MASK                (0xFF << REG_SEN_PU_TIME_SHIFT)
#define REG_SEN_PU_TIME(n)                  BITFIELD_VAL(REG_SEN_PU_TIME, n)
#define REG_SENSOR_PU_VBG_DR                (1 << 8)
#define REG_SENSOR_PU_VBG                   (1 << 9)
#define REG_SENSOR_PU_VBG_BIAS_DR           (1 << 10)
#define REG_SENSOR_PU_VBG_BIAS              (1 << 11)
#define REG_SENSOR_VREFBUF_DR               (1 << 12)
#define REG_SENSOR_VREFBUF                  (1 << 13)
#define REG_SENSOR_PGA_EN_DR                (1 << 14)
#define REG_SENSOR_PGA_EN                   (1 << 15)

// REG_255
#define REG_CODEC_SAR_PGA_GAIN_SHIFT        0
#define REG_CODEC_SAR_PGA_GAIN_MASK         (0x3 << REG_CODEC_SAR_PGA_GAIN_SHIFT)
#define REG_CODEC_SAR_PGA_GAIN(n)           BITFIELD_VAL(REG_CODEC_SAR_PGA_GAIN, n)
#define REG_CODEC_SENSOR_CAS_VREFBUF_SHIFT  2
#define REG_CODEC_SENSOR_CAS_VREFBUF_MASK   (0x3 << REG_CODEC_SENSOR_CAS_VREFBUF_SHIFT)
#define REG_CODEC_SENSOR_CAS_VREFBUF(n)     BITFIELD_VAL(REG_CODEC_SENSOR_CAS_VREFBUF, n)
#define REG_CODEC_SENSOR_PGA_IBIT_SHIFT     6
#define REG_CODEC_SENSOR_PGA_IBIT_MASK      (0x3 << REG_CODEC_SENSOR_PGA_IBIT_SHIFT)
#define REG_CODEC_SENSOR_PGA_IBIT(n)        BITFIELD_VAL(REG_CODEC_SENSOR_PGA_IBIT, n)
#define REG_CODEC_SENSOR_PGA_OP_R_SEL       (1 << 8)
#define REG_CODEC_SENSOR_PGA_RES_SEL_SHIFT  9
#define REG_CODEC_SENSOR_PGA_RES_SEL_MASK   (0x7 << REG_CODEC_SENSOR_PGA_RES_SEL_SHIFT)
#define REG_CODEC_SENSOR_PGA_RES_SEL(n)     BITFIELD_VAL(REG_CODEC_SENSOR_PGA_RES_SEL, n)
#define REG_CODEC_SENSOR_VBG_R_TEMP_SHIFT   12
#define REG_CODEC_SENSOR_VBG_R_TEMP_MASK    (0x7 << REG_CODEC_SENSOR_VBG_R_TEMP_SHIFT)
#define REG_CODEC_SENSOR_VBG_R_TEMP(n)      BITFIELD_VAL(REG_CODEC_SENSOR_VBG_R_TEMP, n)
#define REG_CODEC_SENSOR_VREF_RZ            (1 << 15)

// REG_256
#define REG_CODEC_SENSOR_VREFBUF_SEL_SHIFT  0
#define REG_CODEC_SENSOR_VREFBUF_SEL_MASK   (0xF << REG_CODEC_SENSOR_VREFBUF_SEL_SHIFT)
#define REG_CODEC_SENSOR_VREFBUF_SEL(n)     BITFIELD_VAL(REG_CODEC_SENSOR_VREFBUF_SEL, n)
#define REG_CODEC_SAR_PU_AVDD18             (1 << 4)
#define REG_CODEC_SENSOR_PU_AVDD18          (1 << 5)
#define REG_CODEC_SAR_DIFF_CH_SEL_SHIFT     6
#define REG_CODEC_SAR_DIFF_CH_SEL_MASK      (0x3 << REG_CODEC_SAR_DIFF_CH_SEL_SHIFT)
#define REG_CODEC_SAR_DIFF_CH_SEL(n)        BITFIELD_VAL(REG_CODEC_SAR_DIFF_CH_SEL, n)
#define REG_CODEC_SENSOR_VBG_TRIM_SHIFT     8
#define REG_CODEC_SENSOR_VBG_TRIM_MASK      (0x7 << REG_CODEC_SENSOR_VBG_TRIM_SHIFT)
#define REG_CODEC_SENSOR_VBG_TRIM(n)        BITFIELD_VAL(REG_CODEC_SENSOR_VBG_TRIM, n)
#define REG_CODEC_SENSOR_VREF_SEL_VCMCAP    (1 << 11)
#define REG_CODEC_SENSOR_VREFBUF_LOWGAIN_SHIFT 12
#define REG_CODEC_SENSOR_VREFBUF_LOWGAIN_MASK (0x7 << REG_CODEC_SENSOR_VREFBUF_LOWGAIN_SHIFT)
#define REG_CODEC_SENSOR_VREFBUF_LOWGAIN(n) BITFIELD_VAL(REG_CODEC_SENSOR_VREFBUF_LOWGAIN, n)
#define REG_CODEC_SAR_CHANNEL_SWITCH        (1 << 15)

// REG_257
#define REG_CODEC_SENSOR_VREFBUF_LP_SHIFT   0
#define REG_CODEC_SENSOR_VREFBUF_LP_MASK    (0x7 << REG_CODEC_SENSOR_VREFBUF_LP_SHIFT)
#define REG_CODEC_SENSOR_VREFBUF_LP(n)      BITFIELD_VAL(REG_CODEC_SENSOR_VREFBUF_LP, n)
#define REG_AUTOCALI_EN                     (1 << 3)
#define REG_PSENSOR_PU_LDO                  (1 << 4)
#define REG_PSENSOR_PU_LDO_DR               (1 << 5)
#define REG_PSENSOR_PU_OSC                  (1 << 6)
#define REG_PSENSOR_PU_OSC_DR               (1 << 7)
#define REG_PSENSOR_CLK_GT                  (1 << 8)
#define REG_PSENSOR_CLK_GT_DR               (1 << 9)
#define REG_SENSOR_PGA_CHAN_SET             (1 << 10)
#define REG_SENSOR_PGA_CHAN_SET_DR          (1 << 11)
#define REG_SENSOR_PGA_CHAN_SET_INV         (1 << 12)

// REG_258
#define REG_SAR_PU_TIME_SHIFT               0
#define REG_SAR_PU_TIME_MASK                (0xFF << REG_SAR_PU_TIME_SHIFT)
#define REG_SAR_PU_TIME(n)                  BITFIELD_VAL(REG_SAR_PU_TIME, n)
#define REG_LPO_PU_TIME_SHIFT               8
#define REG_LPO_PU_TIME_MASK                (0xFF << REG_LPO_PU_TIME_SHIFT)
#define REG_LPO_PU_TIME(n)                  BITFIELD_VAL(REG_LPO_PU_TIME, n)

// REG_259
#define REG_WAIT_TIME_CH0_SHIFT             0
#define REG_WAIT_TIME_CH0_MASK              (0xFFF << REG_WAIT_TIME_CH0_SHIFT)
#define REG_WAIT_TIME_CH0(n)                BITFIELD_VAL(REG_WAIT_TIME_CH0, n)
#define REG_DONE_TIME_CH0_SHIFT             12
#define REG_DONE_TIME_CH0_MASK              (0xF << REG_DONE_TIME_CH0_SHIFT)
#define REG_DONE_TIME_CH0(n)                BITFIELD_VAL(REG_DONE_TIME_CH0, n)

// REG_25A
#define REG_WAIT_TIME_CH1_SHIFT             0
#define REG_WAIT_TIME_CH1_MASK              (0xFFF << REG_WAIT_TIME_CH1_SHIFT)
#define REG_WAIT_TIME_CH1(n)                BITFIELD_VAL(REG_WAIT_TIME_CH1, n)
#define REG_DONE_TIME_CH1_SHIFT             12
#define REG_DONE_TIME_CH1_MASK              (0xF << REG_DONE_TIME_CH1_SHIFT)
#define REG_DONE_TIME_CH1(n)                BITFIELD_VAL(REG_DONE_TIME_CH1, n)

// REG_25B
#define REG_PSENSOR_DET_CH0_SEL             (1 << 0)
#define REG_PSENSOR_DET_CH0_SEL_DR          (1 << 1)
#define REG_PSENSOR_DET_CH1_SEL             (1 << 2)
#define REG_PSENSOR_DET_CH1_SEL_DR          (1 << 3)
#define REG_RC_STB_TIME_SHIFT               4
#define REG_RC_STB_TIME_MASK                (0x1F << REG_RC_STB_TIME_SHIFT)
#define REG_RC_STB_TIME(n)                  BITFIELD_VAL(REG_RC_STB_TIME, n)
#define REG_PSENSOR_CHAN_3_SEL_CH0          (1 << 9)
#define REG_PSENSOR_CHAN_3_SEL_CH1          (1 << 10)
#define REG_PSENSOR_CHAN_4_SEL_CH0          (1 << 11)
#define REG_PSENSOR_CHAN_4_SEL_CH1          (1 << 12)
#define REG_SAR_CH_SEL_IN_3_DR              (1 << 13)
#define REG_SAR_CH_SEL_IN_4_DR              (1 << 14)

// REG_25C
#define REG_SENSOR_CLK_OUT_DIV_SHIFT        0
#define REG_SENSOR_CLK_OUT_DIV_MASK         (0x3FFF << REG_SENSOR_CLK_OUT_DIV_SHIFT)
#define REG_SENSOR_CLK_OUT_DIV(n)           BITFIELD_VAL(REG_SENSOR_CLK_OUT_DIV, n)

// REG_25E
#define REG_SAR_CH0_CNT_EN                  (1 << 0)
#define REG_SAR_CH0_CNT_NUM_SHIFT           1
#define REG_SAR_CH0_CNT_NUM_MASK            (0x1F << REG_SAR_CH0_CNT_NUM_SHIFT)
#define REG_SAR_CH0_CNT_NUM(n)              BITFIELD_VAL(REG_SAR_CH0_CNT_NUM, n)
#define REG_SAR_CH0_CNT_STOP                (1 << 6)
#define REG_SAR_CH1_CNT_EN                  (1 << 7)
#define REG_SAR_CH1_CNT_NUM_SHIFT           8
#define REG_SAR_CH1_CNT_NUM_MASK            (0x1F << REG_SAR_CH1_CNT_NUM_SHIFT)
#define REG_SAR_CH1_CNT_NUM(n)              BITFIELD_VAL(REG_SAR_CH1_CNT_NUM, n)
#define REG_SAR_CH1_CNT_STOP                (1 << 13)
#define REG_SAR_AVG_READ_EN                 (1 << 14)
#define REG_SAR_RAW_READ_EN                 (1 << 15)

// REG_25F
#define CH0_SAR_DOUT_RAW_INTR               (1 << 0)
#define CH0_SAR_DOUT_INTR_EN                (1 << 1)
#define CH0_SAR_DOUT_INTR_MASK              (1 << 2)
#define CH0_SAR_DOUT_INTR                   (1 << 3)
#define CH0_SAR_DOUT_INTR_CLR               (1 << 4)
#define CH1_SAR_DOUT_RAW_INTR               (1 << 5)
#define CH1_SAR_DOUT_INTR_EN                (1 << 6)
#define CH1_SAR_DOUT_INTR_MASK              (1 << 7)
#define CH1_SAR_DOUT_INTR                   (1 << 8)
#define CH1_SAR_DOUT_INTR_CLR               (1 << 9)
#define SAR_DOUT_INTR                       (1 << 10)

// REG_260
#define CH0_SAR_DOUT_0_SHIFT                0
#define CH0_SAR_DOUT_0_MASK                 (0xFFFF << CH0_SAR_DOUT_0_SHIFT)
#define CH0_SAR_DOUT_0(n)                   BITFIELD_VAL(CH0_SAR_DOUT_0, n)

// REG_261
#define CH0_SAR_DOUT_1_SHIFT                0
#define CH0_SAR_DOUT_1_MASK                 (0xFFFF << CH0_SAR_DOUT_1_SHIFT)
#define CH0_SAR_DOUT_1(n)                   BITFIELD_VAL(CH0_SAR_DOUT_1, n)

// REG_262
#define CH0_SAR_DOUT_2_SHIFT                0
#define CH0_SAR_DOUT_2_MASK                 (0xFFFF << CH0_SAR_DOUT_2_SHIFT)
#define CH0_SAR_DOUT_2(n)                   BITFIELD_VAL(CH0_SAR_DOUT_2, n)

// REG_263
#define CH0_SAR_DOUT_3_SHIFT                0
#define CH0_SAR_DOUT_3_MASK                 (0xFFFF << CH0_SAR_DOUT_3_SHIFT)
#define CH0_SAR_DOUT_3(n)                   BITFIELD_VAL(CH0_SAR_DOUT_3, n)

// REG_264
#define CH0_SAR_DOUT_4_SHIFT                0
#define CH0_SAR_DOUT_4_MASK                 (0xFFFF << CH0_SAR_DOUT_4_SHIFT)
#define CH0_SAR_DOUT_4(n)                   BITFIELD_VAL(CH0_SAR_DOUT_4, n)

// REG_265
#define CH0_SAR_DOUT_5_SHIFT                0
#define CH0_SAR_DOUT_5_MASK                 (0xFFFF << CH0_SAR_DOUT_5_SHIFT)
#define CH0_SAR_DOUT_5(n)                   BITFIELD_VAL(CH0_SAR_DOUT_5, n)

// REG_266
#define CH0_SAR_DOUT_6_SHIFT                0
#define CH0_SAR_DOUT_6_MASK                 (0xFFFF << CH0_SAR_DOUT_6_SHIFT)
#define CH0_SAR_DOUT_6(n)                   BITFIELD_VAL(CH0_SAR_DOUT_6, n)

// REG_267
#define CH0_SAR_DOUT_7_SHIFT                0
#define CH0_SAR_DOUT_7_MASK                 (0xFFFF << CH0_SAR_DOUT_7_SHIFT)
#define CH0_SAR_DOUT_7(n)                   BITFIELD_VAL(CH0_SAR_DOUT_7, n)

// REG_268
#define CH0_SAR_DOUT_8_SHIFT                0
#define CH0_SAR_DOUT_8_MASK                 (0xFFFF << CH0_SAR_DOUT_8_SHIFT)
#define CH0_SAR_DOUT_8(n)                   BITFIELD_VAL(CH0_SAR_DOUT_8, n)

// REG_269
#define CH0_SAR_DOUT_9_SHIFT                0
#define CH0_SAR_DOUT_9_MASK                 (0xFFFF << CH0_SAR_DOUT_9_SHIFT)
#define CH0_SAR_DOUT_9(n)                   BITFIELD_VAL(CH0_SAR_DOUT_9, n)

// REG_26A
#define CH0_SAR_DOUT_10_SHIFT               0
#define CH0_SAR_DOUT_10_MASK                (0xFFFF << CH0_SAR_DOUT_10_SHIFT)
#define CH0_SAR_DOUT_10(n)                  BITFIELD_VAL(CH0_SAR_DOUT_10, n)

// REG_26B
#define CH0_SAR_DOUT_11_SHIFT               0
#define CH0_SAR_DOUT_11_MASK                (0xFFFF << CH0_SAR_DOUT_11_SHIFT)
#define CH0_SAR_DOUT_11(n)                  BITFIELD_VAL(CH0_SAR_DOUT_11, n)

// REG_26C
#define CH0_SAR_DOUT_12_SHIFT               0
#define CH0_SAR_DOUT_12_MASK                (0xFFFF << CH0_SAR_DOUT_12_SHIFT)
#define CH0_SAR_DOUT_12(n)                  BITFIELD_VAL(CH0_SAR_DOUT_12, n)

// REG_26D
#define CH0_SAR_DOUT_13_SHIFT               0
#define CH0_SAR_DOUT_13_MASK                (0xFFFF << CH0_SAR_DOUT_13_SHIFT)
#define CH0_SAR_DOUT_13(n)                  BITFIELD_VAL(CH0_SAR_DOUT_13, n)

// REG_26E
#define CH0_SAR_DOUT_14_SHIFT               0
#define CH0_SAR_DOUT_14_MASK                (0xFFFF << CH0_SAR_DOUT_14_SHIFT)
#define CH0_SAR_DOUT_14(n)                  BITFIELD_VAL(CH0_SAR_DOUT_14, n)

// REG_26F
#define CH0_SAR_DOUT_15_SHIFT               0
#define CH0_SAR_DOUT_15_MASK                (0xFFFF << CH0_SAR_DOUT_15_SHIFT)
#define CH0_SAR_DOUT_15(n)                  BITFIELD_VAL(CH0_SAR_DOUT_15, n)

// REG_270
#define CH0_SAR_DOUT_16_SHIFT               0
#define CH0_SAR_DOUT_16_MASK                (0xFFFF << CH0_SAR_DOUT_16_SHIFT)
#define CH0_SAR_DOUT_16(n)                  BITFIELD_VAL(CH0_SAR_DOUT_16, n)

// REG_271
#define CH0_SAR_DOUT_17_SHIFT               0
#define CH0_SAR_DOUT_17_MASK                (0xFFFF << CH0_SAR_DOUT_17_SHIFT)
#define CH0_SAR_DOUT_17(n)                  BITFIELD_VAL(CH0_SAR_DOUT_17, n)

// REG_272
#define CH0_SAR_DOUT_18_SHIFT               0
#define CH0_SAR_DOUT_18_MASK                (0xFFFF << CH0_SAR_DOUT_18_SHIFT)
#define CH0_SAR_DOUT_18(n)                  BITFIELD_VAL(CH0_SAR_DOUT_18, n)

// REG_273
#define CH0_SAR_DOUT_19_SHIFT               0
#define CH0_SAR_DOUT_19_MASK                (0xFFFF << CH0_SAR_DOUT_19_SHIFT)
#define CH0_SAR_DOUT_19(n)                  BITFIELD_VAL(CH0_SAR_DOUT_19, n)

// REG_274
#define CH0_SAR_DOUT_20_SHIFT               0
#define CH0_SAR_DOUT_20_MASK                (0xFFFF << CH0_SAR_DOUT_20_SHIFT)
#define CH0_SAR_DOUT_20(n)                  BITFIELD_VAL(CH0_SAR_DOUT_20, n)

// REG_275
#define CH0_SAR_DOUT_21_SHIFT               0
#define CH0_SAR_DOUT_21_MASK                (0xFFFF << CH0_SAR_DOUT_21_SHIFT)
#define CH0_SAR_DOUT_21(n)                  BITFIELD_VAL(CH0_SAR_DOUT_21, n)

// REG_276
#define CH0_SAR_DOUT_22_SHIFT               0
#define CH0_SAR_DOUT_22_MASK                (0xFFFF << CH0_SAR_DOUT_22_SHIFT)
#define CH0_SAR_DOUT_22(n)                  BITFIELD_VAL(CH0_SAR_DOUT_22, n)

// REG_277
#define CH0_SAR_DOUT_23_SHIFT               0
#define CH0_SAR_DOUT_23_MASK                (0xFFFF << CH0_SAR_DOUT_23_SHIFT)
#define CH0_SAR_DOUT_23(n)                  BITFIELD_VAL(CH0_SAR_DOUT_23, n)

// REG_278
#define CH0_SAR_DOUT_24_SHIFT               0
#define CH0_SAR_DOUT_24_MASK                (0xFFFF << CH0_SAR_DOUT_24_SHIFT)
#define CH0_SAR_DOUT_24(n)                  BITFIELD_VAL(CH0_SAR_DOUT_24, n)

// REG_279
#define CH0_SAR_DOUT_25_SHIFT               0
#define CH0_SAR_DOUT_25_MASK                (0xFFFF << CH0_SAR_DOUT_25_SHIFT)
#define CH0_SAR_DOUT_25(n)                  BITFIELD_VAL(CH0_SAR_DOUT_25, n)

// REG_27A
#define CH0_SAR_DOUT_26_SHIFT               0
#define CH0_SAR_DOUT_26_MASK                (0xFFFF << CH0_SAR_DOUT_26_SHIFT)
#define CH0_SAR_DOUT_26(n)                  BITFIELD_VAL(CH0_SAR_DOUT_26, n)

// REG_27B
#define CH0_SAR_DOUT_27_SHIFT               0
#define CH0_SAR_DOUT_27_MASK                (0xFFFF << CH0_SAR_DOUT_27_SHIFT)
#define CH0_SAR_DOUT_27(n)                  BITFIELD_VAL(CH0_SAR_DOUT_27, n)

// REG_27C
#define CH0_SAR_DOUT_28_SHIFT               0
#define CH0_SAR_DOUT_28_MASK                (0xFFFF << CH0_SAR_DOUT_28_SHIFT)
#define CH0_SAR_DOUT_28(n)                  BITFIELD_VAL(CH0_SAR_DOUT_28, n)

// REG_27D
#define CH0_SAR_DOUT_29_SHIFT               0
#define CH0_SAR_DOUT_29_MASK                (0xFFFF << CH0_SAR_DOUT_29_SHIFT)
#define CH0_SAR_DOUT_29(n)                  BITFIELD_VAL(CH0_SAR_DOUT_29, n)

// REG_27E
#define CH0_SAR_DOUT_30_SHIFT               0
#define CH0_SAR_DOUT_30_MASK                (0xFFFF << CH0_SAR_DOUT_30_SHIFT)
#define CH0_SAR_DOUT_30(n)                  BITFIELD_VAL(CH0_SAR_DOUT_30, n)

// REG_27F
#define CH0_SAR_DOUT_31_SHIFT               0
#define CH0_SAR_DOUT_31_MASK                (0xFFFF << CH0_SAR_DOUT_31_SHIFT)
#define CH0_SAR_DOUT_31(n)                  BITFIELD_VAL(CH0_SAR_DOUT_31, n)

// REG_280
#define CH1_SAR_DOUT_0_SHIFT                0
#define CH1_SAR_DOUT_0_MASK                 (0xFFFF << CH1_SAR_DOUT_0_SHIFT)
#define CH1_SAR_DOUT_0(n)                   BITFIELD_VAL(CH1_SAR_DOUT_0, n)

// REG_281
#define CH1_SAR_DOUT_1_SHIFT                0
#define CH1_SAR_DOUT_1_MASK                 (0xFFFF << CH1_SAR_DOUT_1_SHIFT)
#define CH1_SAR_DOUT_1(n)                   BITFIELD_VAL(CH1_SAR_DOUT_1, n)

// REG_282
#define CH1_SAR_DOUT_2_SHIFT                0
#define CH1_SAR_DOUT_2_MASK                 (0xFFFF << CH1_SAR_DOUT_2_SHIFT)
#define CH1_SAR_DOUT_2(n)                   BITFIELD_VAL(CH1_SAR_DOUT_2, n)

// REG_283
#define CH1_SAR_DOUT_3_SHIFT                0
#define CH1_SAR_DOUT_3_MASK                 (0xFFFF << CH1_SAR_DOUT_3_SHIFT)
#define CH1_SAR_DOUT_3(n)                   BITFIELD_VAL(CH1_SAR_DOUT_3, n)

// REG_284
#define CH1_SAR_DOUT_4_SHIFT                0
#define CH1_SAR_DOUT_4_MASK                 (0xFFFF << CH1_SAR_DOUT_4_SHIFT)
#define CH1_SAR_DOUT_4(n)                   BITFIELD_VAL(CH1_SAR_DOUT_4, n)

// REG_285
#define CH1_SAR_DOUT_5_SHIFT                0
#define CH1_SAR_DOUT_5_MASK                 (0xFFFF << CH1_SAR_DOUT_5_SHIFT)
#define CH1_SAR_DOUT_5(n)                   BITFIELD_VAL(CH1_SAR_DOUT_5, n)

// REG_286
#define CH1_SAR_DOUT_6_SHIFT                0
#define CH1_SAR_DOUT_6_MASK                 (0xFFFF << CH1_SAR_DOUT_6_SHIFT)
#define CH1_SAR_DOUT_6(n)                   BITFIELD_VAL(CH1_SAR_DOUT_6, n)

// REG_287
#define CH1_SAR_DOUT_7_SHIFT                0
#define CH1_SAR_DOUT_7_MASK                 (0xFFFF << CH1_SAR_DOUT_7_SHIFT)
#define CH1_SAR_DOUT_7(n)                   BITFIELD_VAL(CH1_SAR_DOUT_7, n)

// REG_288
#define CH1_SAR_DOUT_8_SHIFT                0
#define CH1_SAR_DOUT_8_MASK                 (0xFFFF << CH1_SAR_DOUT_8_SHIFT)
#define CH1_SAR_DOUT_8(n)                   BITFIELD_VAL(CH1_SAR_DOUT_8, n)

// REG_289
#define CH1_SAR_DOUT_9_SHIFT                0
#define CH1_SAR_DOUT_9_MASK                 (0xFFFF << CH1_SAR_DOUT_9_SHIFT)
#define CH1_SAR_DOUT_9(n)                   BITFIELD_VAL(CH1_SAR_DOUT_9, n)

// REG_28A
#define CH1_SAR_DOUT_10_SHIFT               0
#define CH1_SAR_DOUT_10_MASK                (0xFFFF << CH1_SAR_DOUT_10_SHIFT)
#define CH1_SAR_DOUT_10(n)                  BITFIELD_VAL(CH1_SAR_DOUT_10, n)

// REG_28B
#define CH1_SAR_DOUT_11_SHIFT               0
#define CH1_SAR_DOUT_11_MASK                (0xFFFF << CH1_SAR_DOUT_11_SHIFT)
#define CH1_SAR_DOUT_11(n)                  BITFIELD_VAL(CH1_SAR_DOUT_11, n)

// REG_28C
#define CH1_SAR_DOUT_12_SHIFT               0
#define CH1_SAR_DOUT_12_MASK                (0xFFFF << CH1_SAR_DOUT_12_SHIFT)
#define CH1_SAR_DOUT_12(n)                  BITFIELD_VAL(CH1_SAR_DOUT_12, n)

// REG_28D
#define CH1_SAR_DOUT_13_SHIFT               0
#define CH1_SAR_DOUT_13_MASK                (0xFFFF << CH1_SAR_DOUT_13_SHIFT)
#define CH1_SAR_DOUT_13(n)                  BITFIELD_VAL(CH1_SAR_DOUT_13, n)

// REG_28E
#define CH1_SAR_DOUT_14_SHIFT               0
#define CH1_SAR_DOUT_14_MASK                (0xFFFF << CH1_SAR_DOUT_14_SHIFT)
#define CH1_SAR_DOUT_14(n)                  BITFIELD_VAL(CH1_SAR_DOUT_14, n)

// REG_28F
#define CH1_SAR_DOUT_15_SHIFT               0
#define CH1_SAR_DOUT_15_MASK                (0xFFFF << CH1_SAR_DOUT_15_SHIFT)
#define CH1_SAR_DOUT_15(n)                  BITFIELD_VAL(CH1_SAR_DOUT_15, n)

// REG_290
#define CH1_SAR_DOUT_16_SHIFT               0
#define CH1_SAR_DOUT_16_MASK                (0xFFFF << CH1_SAR_DOUT_16_SHIFT)
#define CH1_SAR_DOUT_16(n)                  BITFIELD_VAL(CH1_SAR_DOUT_16, n)

// REG_291
#define CH1_SAR_DOUT_17_SHIFT               0
#define CH1_SAR_DOUT_17_MASK                (0xFFFF << CH1_SAR_DOUT_17_SHIFT)
#define CH1_SAR_DOUT_17(n)                  BITFIELD_VAL(CH1_SAR_DOUT_17, n)

// REG_292
#define CH1_SAR_DOUT_18_SHIFT               0
#define CH1_SAR_DOUT_18_MASK                (0xFFFF << CH1_SAR_DOUT_18_SHIFT)
#define CH1_SAR_DOUT_18(n)                  BITFIELD_VAL(CH1_SAR_DOUT_18, n)

// REG_293
#define CH1_SAR_DOUT_19_SHIFT               0
#define CH1_SAR_DOUT_19_MASK                (0xFFFF << CH1_SAR_DOUT_19_SHIFT)
#define CH1_SAR_DOUT_19(n)                  BITFIELD_VAL(CH1_SAR_DOUT_19, n)

// REG_294
#define CH1_SAR_DOUT_20_SHIFT               0
#define CH1_SAR_DOUT_20_MASK                (0xFFFF << CH1_SAR_DOUT_20_SHIFT)
#define CH1_SAR_DOUT_20(n)                  BITFIELD_VAL(CH1_SAR_DOUT_20, n)

// REG_295
#define CH1_SAR_DOUT_21_SHIFT               0
#define CH1_SAR_DOUT_21_MASK                (0xFFFF << CH1_SAR_DOUT_21_SHIFT)
#define CH1_SAR_DOUT_21(n)                  BITFIELD_VAL(CH1_SAR_DOUT_21, n)

// REG_296
#define CH1_SAR_DOUT_22_SHIFT               0
#define CH1_SAR_DOUT_22_MASK                (0xFFFF << CH1_SAR_DOUT_22_SHIFT)
#define CH1_SAR_DOUT_22(n)                  BITFIELD_VAL(CH1_SAR_DOUT_22, n)

// REG_297
#define CH1_SAR_DOUT_23_SHIFT               0
#define CH1_SAR_DOUT_23_MASK                (0xFFFF << CH1_SAR_DOUT_23_SHIFT)
#define CH1_SAR_DOUT_23(n)                  BITFIELD_VAL(CH1_SAR_DOUT_23, n)

// REG_298
#define CH1_SAR_DOUT_24_SHIFT               0
#define CH1_SAR_DOUT_24_MASK                (0xFFFF << CH1_SAR_DOUT_24_SHIFT)
#define CH1_SAR_DOUT_24(n)                  BITFIELD_VAL(CH1_SAR_DOUT_24, n)

// REG_299
#define CH1_SAR_DOUT_25_SHIFT               0
#define CH1_SAR_DOUT_25_MASK                (0xFFFF << CH1_SAR_DOUT_25_SHIFT)
#define CH1_SAR_DOUT_25(n)                  BITFIELD_VAL(CH1_SAR_DOUT_25, n)

// REG_29A
#define CH1_SAR_DOUT_26_SHIFT               0
#define CH1_SAR_DOUT_26_MASK                (0xFFFF << CH1_SAR_DOUT_26_SHIFT)
#define CH1_SAR_DOUT_26(n)                  BITFIELD_VAL(CH1_SAR_DOUT_26, n)

// REG_29B
#define CH1_SAR_DOUT_27_SHIFT               0
#define CH1_SAR_DOUT_27_MASK                (0xFFFF << CH1_SAR_DOUT_27_SHIFT)
#define CH1_SAR_DOUT_27(n)                  BITFIELD_VAL(CH1_SAR_DOUT_27, n)

// REG_29C
#define CH1_SAR_DOUT_28_SHIFT               0
#define CH1_SAR_DOUT_28_MASK                (0xFFFF << CH1_SAR_DOUT_28_SHIFT)
#define CH1_SAR_DOUT_28(n)                  BITFIELD_VAL(CH1_SAR_DOUT_28, n)

// REG_29D
#define CH1_SAR_DOUT_29_SHIFT               0
#define CH1_SAR_DOUT_29_MASK                (0xFFFF << CH1_SAR_DOUT_29_SHIFT)
#define CH1_SAR_DOUT_29(n)                  BITFIELD_VAL(CH1_SAR_DOUT_29, n)

// REG_29E
#define CH1_SAR_DOUT_30_SHIFT               0
#define CH1_SAR_DOUT_30_MASK                (0xFFFF << CH1_SAR_DOUT_30_SHIFT)
#define CH1_SAR_DOUT_30(n)                  BITFIELD_VAL(CH1_SAR_DOUT_30, n)

// REG_29F
#define CH1_SAR_DOUT_31_SHIFT               0
#define CH1_SAR_DOUT_31_MASK                (0xFFFF << CH1_SAR_DOUT_31_SHIFT)
#define CH1_SAR_DOUT_31(n)                  BITFIELD_VAL(CH1_SAR_DOUT_31, n)

// REG_2A0
#define CH0_SAR_CURR_ADDR_SHIFT             0
#define CH0_SAR_CURR_ADDR_MASK              (0x1F << CH0_SAR_CURR_ADDR_SHIFT)
#define CH0_SAR_CURR_ADDR(n)                BITFIELD_VAL(CH0_SAR_CURR_ADDR, n)
#define CH1_SAR_CURR_ADDR_SHIFT             8
#define CH1_SAR_CURR_ADDR_MASK              (0x1F << CH1_SAR_CURR_ADDR_SHIFT)
#define CH1_SAR_CURR_ADDR(n)                BITFIELD_VAL(CH1_SAR_CURR_ADDR, n)

// REG_2A1
#define SAR_DOUT_RAW_SHIFT                  0
#define SAR_DOUT_RAW_MASK                   (0xFFFF << SAR_DOUT_RAW_SHIFT)
#define SAR_DOUT_RAW(n)                     BITFIELD_VAL(SAR_DOUT_RAW, n)

// REG_2A2
#define SAR_DOUT_RAW_SPI_SHIFT              0
#define SAR_DOUT_RAW_SPI_MASK               (0xFFFF << SAR_DOUT_RAW_SPI_SHIFT)
#define SAR_DOUT_RAW_SPI(n)                 BITFIELD_VAL(SAR_DOUT_RAW_SPI, n)

// REG_300
#define REVID_SHIFT                         0
#define REVID_MASK                          (0xF << REVID_SHIFT)
#define REVID(n)                            BITFIELD_VAL(REVID, n)

// REG_301
#define CODEC_ADC_EN                        (1 << 0)
#define CODEC_ADC_DOWN_SEL_SHIFT            1
#define CODEC_ADC_DOWN_SEL_MASK             (0x3 << CODEC_ADC_DOWN_SEL_SHIFT)
#define CODEC_ADC_DOWN_SEL(n)               BITFIELD_VAL(CODEC_ADC_DOWN_SEL, n)
#define CODEC_ADC_HBF3_BYPASS               (1 << 3)
#define CODEC_ADC_HBF2_BYPASS               (1 << 4)
#define CODEC_ADC_HBF1_BYPASS               (1 << 5)
#define CODEC_ADC_SINC1_CAS_SHIFT           6
#define CODEC_ADC_SINC1_CAS_MASK            (0x3 << CODEC_ADC_SINC1_CAS_SHIFT)
#define CODEC_ADC_SINC1_CAS(n)              BITFIELD_VAL(CODEC_ADC_SINC1_CAS, n)
#define CODEC_ADC_SINC2_CAS_SHIFT           8
#define CODEC_ADC_SINC2_CAS_MASK            (0x3 << CODEC_ADC_SINC2_CAS_SHIFT)
#define CODEC_ADC_SINC2_CAS(n)              BITFIELD_VAL(CODEC_ADC_SINC2_CAS, n)
#define CODEC_ADC_SINC3_CAS_SHIFT           10
#define CODEC_ADC_SINC3_CAS_MASK            (0x3 << CODEC_ADC_SINC3_CAS_SHIFT)
#define CODEC_ADC_SINC3_CAS(n)              BITFIELD_VAL(CODEC_ADC_SINC3_CAS, n)
#define CODEC_ADC_SINC2_MODE                (1 << 12)
#define CODEC_ADC_EN_CH0                    (1 << 13)
#define CODEC_ADC_EN_CH1                    (1 << 14)
#define CODEC_ADC_EN_CH2                    (1 << 15)

// REG_302
#define CODEC_ADC_SIGNED_CH0                (1 << 0)
#define CODEC_ADC_SIGNED_CH1                (1 << 1)
#define CODEC_ADC_SIGNED_CH2                (1 << 2)
#define CODEC_ADC_FIFO_FLUSH_CH0            (1 << 3)
#define CODEC_ADC_FIFO_FLUSH_CH1            (1 << 4)
#define CODEC_ADC_FIFO_FLUSH_CH2            (1 << 5)
#define CODEC_ADC_FIFO_THRESHOLD_SHIFT      6
#define CODEC_ADC_FIFO_THRESHOLD_MASK       (0xF << CODEC_ADC_FIFO_THRESHOLD_SHIFT)
#define CODEC_ADC_FIFO_THRESHOLD(n)         BITFIELD_VAL(CODEC_ADC_FIFO_THRESHOLD, n)
#define CODEC_ADC_EN_MODE                   (1 << 10)

// REG_303
#define CODEC_ADC_DC_DIN_CH0_SHIFT          0
#define CODEC_ADC_DC_DIN_CH0_MASK           (0xFFFF << CODEC_ADC_DC_DIN_CH0_SHIFT)
#define CODEC_ADC_DC_DIN_CH0(n)             BITFIELD_VAL(CODEC_ADC_DC_DIN_CH0, n)

// REG_304
#define CODEC_ADC_DC_DIN_CH1_SHIFT          0
#define CODEC_ADC_DC_DIN_CH1_MASK           (0xFFFF << CODEC_ADC_DC_DIN_CH1_SHIFT)
#define CODEC_ADC_DC_DIN_CH1(n)             BITFIELD_VAL(CODEC_ADC_DC_DIN_CH1, n)

// REG_305
#define CODEC_ADC_DC_DIN_CH2_SHIFT          0
#define CODEC_ADC_DC_DIN_CH2_MASK           (0xFFFF << CODEC_ADC_DC_DIN_CH2_SHIFT)
#define CODEC_ADC_DC_DIN_CH2(n)             BITFIELD_VAL(CODEC_ADC_DC_DIN_CH2, n)

// REG_306
#define CODEC_ADC_DC_UPDATE_CH0             (1 << 0)
#define CODEC_ADC_DC_UPDATE_CH1             (1 << 1)
#define CODEC_ADC_DC_UPDATE_CH2             (1 << 2)
#define CODEC_ADC_START_CNT_SHIFT           3
#define CODEC_ADC_START_CNT_MASK            (0x3FF << CODEC_ADC_START_CNT_SHIFT)
#define CODEC_ADC_START_CNT(n)              BITFIELD_VAL(CODEC_ADC_START_CNT, n)

// REG_307
#define CODEC_DAC_EN                        (1 << 0)
#define CODEC_DAC_EN_CH0                    (1 << 1)
#define CODEC_DAC_EN_CH1                    (1 << 2)
#define CODEC_DAC_DITHER_GAIN_SHIFT         3
#define CODEC_DAC_DITHER_GAIN_MASK          (0x1F << CODEC_DAC_DITHER_GAIN_SHIFT)
#define CODEC_DAC_DITHER_GAIN(n)            BITFIELD_VAL(CODEC_DAC_DITHER_GAIN, n)
#define CODEC_DAC_SDM_GAIN_SHIFT            8
#define CODEC_DAC_SDM_GAIN_MASK             (0x7 << CODEC_DAC_SDM_GAIN_SHIFT)
#define CODEC_DAC_SDM_GAIN(n)               BITFIELD_VAL(CODEC_DAC_SDM_GAIN, n)
#define CODEC_DITHER_BYPASS                 (1 << 11)
#define CODEC_DAC_HBF3_BYPASS               (1 << 12)
#define CODEC_DAC_HBF2_BYPASS               (1 << 13)
#define CODEC_DAC_HBF1_BYPASS               (1 << 14)
#define CODEC_DAC_HBF4_DELAY_SEL            (1 << 15)

// REG_308
#define CODEC_DAC_UP_SEL_SHIFT              0
#define CODEC_DAC_UP_SEL_MASK               (0x7 << CODEC_DAC_UP_SEL_SHIFT)
#define CODEC_DAC_UP_SEL(n)                 BITFIELD_VAL(CODEC_DAC_UP_SEL, n)
#define CODEC_DAC_SINC_RATE_SEL_SHIFT       3
#define CODEC_DAC_SINC_RATE_SEL_MASK        (0x3 << CODEC_DAC_SINC_RATE_SEL_SHIFT)
#define CODEC_DAC_SINC_RATE_SEL(n)          BITFIELD_VAL(CODEC_DAC_SINC_RATE_SEL, n)
#define CODEC_DAC_OSR_SEL_SHIFT             5
#define CODEC_DAC_OSR_SEL_MASK              (0x3 << CODEC_DAC_OSR_SEL_SHIFT)
#define CODEC_DAC_OSR_SEL(n)                BITFIELD_VAL(CODEC_DAC_OSR_SEL, n)
#define CODEC_DAC_SDM_H4_6M_CH0             (1 << 7)
#define CODEC_DAC_SDM_H4_6M_CH1             (1 << 8)
#define CODEC_DAC_USE_HBF4                  (1 << 9)
#define CODEC_DAC_USE_HBF5                  (1 << 10)
#define CODEC_DAC_SDM_3RD_EN_CH0            (1 << 11)
#define CODEC_DAC_SDM_3RD_EN_CH1            (1 << 12)
#define CODEC_DAC_SDM_CLOSE                 (1 << 13)
#define CODEC_DAC_SINC_CAS_CH0              (1 << 14)
#define CODEC_DAC_SINC_CAS_CH1              (1 << 15)

// REG_309
#define CODEC_DAC_SINC_MODE_CH0             (1 << 0)
#define CODEC_DAC_SINC_MODE_CH1             (1 << 1)
#define CODEC_DITHERF_BYPASS                (1 << 2)
#define CODEC_DAC_DITHERF_GAIN_SHIFT        3
#define CODEC_DAC_DITHERF_GAIN_MASK         (0x3 << CODEC_DAC_DITHERF_GAIN_SHIFT)
#define CODEC_DAC_DITHERF_GAIN(n)           BITFIELD_VAL(CODEC_DAC_DITHERF_GAIN, n)
#define CODEC_DAC_START_CNT_SHIFT           5
#define CODEC_DAC_START_CNT_MASK            (0x3FF << CODEC_DAC_START_CNT_SHIFT)
#define CODEC_DAC_START_CNT(n)              BITFIELD_VAL(CODEC_DAC_START_CNT, n)
#define CODEC_DAC_EN_MODE                   (1 << 15)

// REG_30A
#define CODEC_DAC_DC_CH0_15_0_SHIFT         0
#define CODEC_DAC_DC_CH0_15_0_MASK          (0xFFFF << CODEC_DAC_DC_CH0_15_0_SHIFT)
#define CODEC_DAC_DC_CH0_15_0(n)            BITFIELD_VAL(CODEC_DAC_DC_CH0_15_0, n)

// REG_30B
#define CODEC_DAC_DC_CH1_15_0_SHIFT         0
#define CODEC_DAC_DC_CH1_15_0_MASK          (0xFFFF << CODEC_DAC_DC_CH1_15_0_SHIFT)
#define CODEC_DAC_DC_CH1_15_0(n)            BITFIELD_VAL(CODEC_DAC_DC_CH1_15_0, n)

// REG_30C
#define CODEC_DAC_DC_CH0_18_16_SHIFT        0
#define CODEC_DAC_DC_CH0_18_16_MASK         (0x7 << CODEC_DAC_DC_CH0_18_16_SHIFT)
#define CODEC_DAC_DC_CH0_18_16(n)           BITFIELD_VAL(CODEC_DAC_DC_CH0_18_16, n)
#define CODEC_DAC_DC_CH1_18_16_SHIFT        3
#define CODEC_DAC_DC_CH1_18_16_MASK         (0x7 << CODEC_DAC_DC_CH1_18_16_SHIFT)
#define CODEC_DAC_DC_CH1_18_16(n)           BITFIELD_VAL(CODEC_DAC_DC_CH1_18_16, n)
#define CODEC_DAC_DC_UPDATE_CH0             (1 << 6)
#define CODEC_DAC_DC_UPDATE_PASS0_CH0       (1 << 7)
#define CODEC_DAC_DC_UPDATE_CH1             (1 << 8)
#define CODEC_DAC_DC_UPDATE_PASS0_CH1       (1 << 9)

// REG_30D
#define CODEC_DRE_ENABLE_CH0                (1 << 0)
#define CODEC_DRE_STEP_MODE_CH0_SHIFT       1
#define CODEC_DRE_STEP_MODE_CH0_MASK        (0x7 << CODEC_DRE_STEP_MODE_CH0_SHIFT)
#define CODEC_DRE_STEP_MODE_CH0(n)          BITFIELD_VAL(CODEC_DRE_STEP_MODE_CH0, n)
#define CODEC_DRE_INI_ANA_GAIN_CH0_SHIFT    4
#define CODEC_DRE_INI_ANA_GAIN_CH0_MASK     (0xF << CODEC_DRE_INI_ANA_GAIN_CH0_SHIFT)
#define CODEC_DRE_INI_ANA_GAIN_CH0(n)       BITFIELD_VAL(CODEC_DRE_INI_ANA_GAIN_CH0, n)
#define CODEC_DRE_DELAY_MODE_CH0            (1 << 8)
#define CODEC_DRE_THD_DB_OFFSET_CH0_SHIFT   9
#define CODEC_DRE_THD_DB_OFFSET_CH0_MASK    (0xF << CODEC_DRE_THD_DB_OFFSET_CH0_SHIFT)
#define CODEC_DRE_THD_DB_OFFSET_CH0(n)      BITFIELD_VAL(CODEC_DRE_THD_DB_OFFSET_CH0, n)
#define CODEC_DRE_THD_DB_OFFSET_SIGN_CH0    (1 << 13)

// REG_30E
#define CODEC_DRE_GAIN_OFFSET_CH0_SHIFT     0
#define CODEC_DRE_GAIN_OFFSET_CH0_MASK      (0x1F << CODEC_DRE_GAIN_OFFSET_CH0_SHIFT)
#define CODEC_DRE_GAIN_OFFSET_CH0(n)        BITFIELD_VAL(CODEC_DRE_GAIN_OFFSET_CH0, n)
#define CODEC_DRE_WINDOW_CH0_20_16_SHIFT    5
#define CODEC_DRE_WINDOW_CH0_20_16_MASK     (0x1F << CODEC_DRE_WINDOW_CH0_20_16_SHIFT)
#define CODEC_DRE_WINDOW_CH0_20_16(n)       BITFIELD_VAL(CODEC_DRE_WINDOW_CH0_20_16, n)

// REG_30F
#define CODEC_DRE_DB_HIGH_CH0_SHIFT         0
#define CODEC_DRE_DB_HIGH_CH0_MASK          (0x3F << CODEC_DRE_DB_HIGH_CH0_SHIFT)
#define CODEC_DRE_DB_HIGH_CH0(n)            BITFIELD_VAL(CODEC_DRE_DB_HIGH_CH0, n)
#define CODEC_DRE_DB_LOW_CH0_SHIFT          6
#define CODEC_DRE_DB_LOW_CH0_MASK           (0x3F << CODEC_DRE_DB_LOW_CH0_SHIFT)
#define CODEC_DRE_DB_LOW_CH0(n)             BITFIELD_VAL(CODEC_DRE_DB_LOW_CH0, n)
#define CODEC_DRE_GAIN_TOP_CH0_SHIFT        12
#define CODEC_DRE_GAIN_TOP_CH0_MASK         (0xF << CODEC_DRE_GAIN_TOP_CH0_SHIFT)
#define CODEC_DRE_GAIN_TOP_CH0(n)           BITFIELD_VAL(CODEC_DRE_GAIN_TOP_CH0, n)

// REG_310
#define CODEC_DRE_DELAY_LH_CH0_SHIFT        0
#define CODEC_DRE_DELAY_LH_CH0_MASK         (0xFF << CODEC_DRE_DELAY_LH_CH0_SHIFT)
#define CODEC_DRE_DELAY_LH_CH0(n)           BITFIELD_VAL(CODEC_DRE_DELAY_LH_CH0, n)
#define CODEC_DRE_DELAY_HL_CH0_SHIFT        8
#define CODEC_DRE_DELAY_HL_CH0_MASK         (0xFF << CODEC_DRE_DELAY_HL_CH0_SHIFT)
#define CODEC_DRE_DELAY_HL_CH0(n)           BITFIELD_VAL(CODEC_DRE_DELAY_HL_CH0, n)

// REG_311
#define CODEC_DRE_DELAY_DC_LH_CH0_SHIFT     0
#define CODEC_DRE_DELAY_DC_LH_CH0_MASK      (0xFF << CODEC_DRE_DELAY_DC_LH_CH0_SHIFT)
#define CODEC_DRE_DELAY_DC_LH_CH0(n)        BITFIELD_VAL(CODEC_DRE_DELAY_DC_LH_CH0, n)
#define CODEC_DRE_DELAY_DC_HL_CH0_SHIFT     8
#define CODEC_DRE_DELAY_DC_HL_CH0_MASK      (0xFF << CODEC_DRE_DELAY_DC_HL_CH0_SHIFT)
#define CODEC_DRE_DELAY_DC_HL_CH0(n)        BITFIELD_VAL(CODEC_DRE_DELAY_DC_HL_CH0, n)

// REG_312
#define CODEC_DRE_AMP_HIGH_CH0_SHIFT        0
#define CODEC_DRE_AMP_HIGH_CH0_MASK         (0xFFFF << CODEC_DRE_AMP_HIGH_CH0_SHIFT)
#define CODEC_DRE_AMP_HIGH_CH0(n)           BITFIELD_VAL(CODEC_DRE_AMP_HIGH_CH0, n)

// REG_313
#define CODEC_DRE_WINDOW_CH0_15_0_SHIFT     0
#define CODEC_DRE_WINDOW_CH0_15_0_MASK      (0xFFFF << CODEC_DRE_WINDOW_CH0_15_0_SHIFT)
#define CODEC_DRE_WINDOW_CH0_15_0(n)        BITFIELD_VAL(CODEC_DRE_WINDOW_CH0_15_0, n)

// REG_314
#define CODEC_DRE_ENABLE_CH1                (1 << 0)
#define CODEC_DRE_STEP_MODE_CH1_SHIFT       1
#define CODEC_DRE_STEP_MODE_CH1_MASK        (0x7 << CODEC_DRE_STEP_MODE_CH1_SHIFT)
#define CODEC_DRE_STEP_MODE_CH1(n)          BITFIELD_VAL(CODEC_DRE_STEP_MODE_CH1, n)
#define CODEC_DRE_INI_ANA_GAIN_CH1_SHIFT    4
#define CODEC_DRE_INI_ANA_GAIN_CH1_MASK     (0xF << CODEC_DRE_INI_ANA_GAIN_CH1_SHIFT)
#define CODEC_DRE_INI_ANA_GAIN_CH1(n)       BITFIELD_VAL(CODEC_DRE_INI_ANA_GAIN_CH1, n)
#define CODEC_DRE_DELAY_MODE_CH1            (1 << 8)
#define CODEC_DRE_THD_DB_OFFSET_CH1_SHIFT   9
#define CODEC_DRE_THD_DB_OFFSET_CH1_MASK    (0xF << CODEC_DRE_THD_DB_OFFSET_CH1_SHIFT)
#define CODEC_DRE_THD_DB_OFFSET_CH1(n)      BITFIELD_VAL(CODEC_DRE_THD_DB_OFFSET_CH1, n)
#define CODEC_DRE_THD_DB_OFFSET_SIGN_CH1    (1 << 13)

// REG_315
#define CODEC_DRE_GAIN_OFFSET_CH1_SHIFT     0
#define CODEC_DRE_GAIN_OFFSET_CH1_MASK      (0x1F << CODEC_DRE_GAIN_OFFSET_CH1_SHIFT)
#define CODEC_DRE_GAIN_OFFSET_CH1(n)        BITFIELD_VAL(CODEC_DRE_GAIN_OFFSET_CH1, n)
#define CODEC_DRE_WINDOW_CH1_20_16_SHIFT    5
#define CODEC_DRE_WINDOW_CH1_20_16_MASK     (0x1F << CODEC_DRE_WINDOW_CH1_20_16_SHIFT)
#define CODEC_DRE_WINDOW_CH1_20_16(n)       BITFIELD_VAL(CODEC_DRE_WINDOW_CH1_20_16, n)

// REG_316
#define CODEC_DRE_DB_HIGH_CH1_SHIFT         0
#define CODEC_DRE_DB_HIGH_CH1_MASK          (0x3F << CODEC_DRE_DB_HIGH_CH1_SHIFT)
#define CODEC_DRE_DB_HIGH_CH1(n)            BITFIELD_VAL(CODEC_DRE_DB_HIGH_CH1, n)
#define CODEC_DRE_DB_LOW_CH1_SHIFT          6
#define CODEC_DRE_DB_LOW_CH1_MASK           (0x3F << CODEC_DRE_DB_LOW_CH1_SHIFT)
#define CODEC_DRE_DB_LOW_CH1(n)             BITFIELD_VAL(CODEC_DRE_DB_LOW_CH1, n)
#define CODEC_DRE_GAIN_TOP_CH1_SHIFT        12
#define CODEC_DRE_GAIN_TOP_CH1_MASK         (0xF << CODEC_DRE_GAIN_TOP_CH1_SHIFT)
#define CODEC_DRE_GAIN_TOP_CH1(n)           BITFIELD_VAL(CODEC_DRE_GAIN_TOP_CH1, n)

// REG_317
#define CODEC_DRE_DELAY_LH_CH1_SHIFT        0
#define CODEC_DRE_DELAY_LH_CH1_MASK         (0xFF << CODEC_DRE_DELAY_LH_CH1_SHIFT)
#define CODEC_DRE_DELAY_LH_CH1(n)           BITFIELD_VAL(CODEC_DRE_DELAY_LH_CH1, n)
#define CODEC_DRE_DELAY_HL_CH1_SHIFT        8
#define CODEC_DRE_DELAY_HL_CH1_MASK         (0xFF << CODEC_DRE_DELAY_HL_CH1_SHIFT)
#define CODEC_DRE_DELAY_HL_CH1(n)           BITFIELD_VAL(CODEC_DRE_DELAY_HL_CH1, n)

// REG_318
#define CODEC_DRE_DELAY_DC_LH_CH1_SHIFT     0
#define CODEC_DRE_DELAY_DC_LH_CH1_MASK      (0xFF << CODEC_DRE_DELAY_DC_LH_CH1_SHIFT)
#define CODEC_DRE_DELAY_DC_LH_CH1(n)        BITFIELD_VAL(CODEC_DRE_DELAY_DC_LH_CH1, n)
#define CODEC_DRE_DELAY_DC_HL_CH1_SHIFT     8
#define CODEC_DRE_DELAY_DC_HL_CH1_MASK      (0xFF << CODEC_DRE_DELAY_DC_HL_CH1_SHIFT)
#define CODEC_DRE_DELAY_DC_HL_CH1(n)        BITFIELD_VAL(CODEC_DRE_DELAY_DC_HL_CH1, n)

// REG_319
#define CODEC_DRE_AMP_HIGH_CH1_SHIFT        0
#define CODEC_DRE_AMP_HIGH_CH1_MASK         (0xFFFF << CODEC_DRE_AMP_HIGH_CH1_SHIFT)
#define CODEC_DRE_AMP_HIGH_CH1(n)           BITFIELD_VAL(CODEC_DRE_AMP_HIGH_CH1, n)

// REG_31A
#define CODEC_DRE_WINDOW_CH1_15_0_SHIFT     0
#define CODEC_DRE_WINDOW_CH1_15_0_MASK      (0xFFFF << CODEC_DRE_WINDOW_CH1_15_0_SHIFT)
#define CODEC_DRE_WINDOW_CH1_15_0(n)        BITFIELD_VAL(CODEC_DRE_WINDOW_CH1_15_0, n)

// REG_31B
#define CODEC_DAC_DRE_GAIN_STEP0_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP0_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP0_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP0_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP0_CH0, n)

// REG_31C
#define CODEC_DAC_DRE_GAIN_STEP1_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP1_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP1_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP1_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP1_CH0, n)

// REG_31D
#define CODEC_DAC_DRE_GAIN_STEP2_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP2_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP2_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP2_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP2_CH0, n)

// REG_31E
#define CODEC_DAC_DRE_GAIN_STEP3_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP3_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP3_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP3_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP3_CH0, n)

// REG_31F
#define CODEC_DAC_DRE_GAIN_STEP4_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP4_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP4_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP4_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP4_CH0, n)

// REG_320
#define CODEC_DAC_DRE_GAIN_STEP5_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP5_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP5_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP5_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP5_CH0, n)

// REG_321
#define CODEC_DAC_DRE_GAIN_STEP6_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP6_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP6_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP6_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP6_CH0, n)

// REG_322
#define CODEC_DAC_DRE_GAIN_STEP7_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP7_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP7_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP7_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP7_CH0, n)

// REG_323
#define CODEC_DAC_DRE_GAIN_STEP8_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP8_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP8_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP8_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP8_CH0, n)

// REG_324
#define CODEC_DAC_DRE_GAIN_STEP9_CH0_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP9_CH0_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP9_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP9_CH0(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP9_CH0, n)

// REG_325
#define CODEC_DAC_DRE_GAIN_STEP10_CH0_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP10_CH0_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP10_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP10_CH0(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP10_CH0, n)

// REG_326
#define CODEC_DAC_DRE_GAIN_STEP11_CH0_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP11_CH0_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP11_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP11_CH0(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP11_CH0, n)

// REG_327
#define CODEC_DAC_DRE_GAIN_STEP12_CH0_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP12_CH0_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP12_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP12_CH0(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP12_CH0, n)

// REG_328
#define CODEC_DAC_DRE_GAIN_STEP13_CH0_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP13_CH0_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP13_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP13_CH0(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP13_CH0, n)

// REG_329
#define CODEC_DAC_DRE_GAIN_STEP14_CH0_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP14_CH0_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP14_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP14_CH0(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP14_CH0, n)

// REG_32A
#define CODEC_DAC_DRE_GAIN_STEP15_CH0_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP15_CH0_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP15_CH0_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP15_CH0(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP15_CH0, n)

// REG_32B
#define CODEC_DAC_DRE_GAIN_STEP0_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP0_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP0_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP0_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP0_CH1, n)

// REG_32C
#define CODEC_DAC_DRE_GAIN_STEP1_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP1_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP1_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP1_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP1_CH1, n)

// REG_32D
#define CODEC_DAC_DRE_GAIN_STEP2_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP2_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP2_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP2_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP2_CH1, n)

// REG_32E
#define CODEC_DAC_DRE_GAIN_STEP3_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP3_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP3_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP3_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP3_CH1, n)

// REG_32F
#define CODEC_DAC_DRE_GAIN_STEP4_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP4_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP4_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP4_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP4_CH1, n)

// REG_330
#define CODEC_DAC_DRE_GAIN_STEP5_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP5_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP5_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP5_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP5_CH1, n)

// REG_331
#define CODEC_DAC_DRE_GAIN_STEP6_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP6_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP6_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP6_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP6_CH1, n)

// REG_332
#define CODEC_DAC_DRE_GAIN_STEP7_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP7_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP7_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP7_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP7_CH1, n)

// REG_333
#define CODEC_DAC_DRE_GAIN_STEP8_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP8_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP8_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP8_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP8_CH1, n)

// REG_334
#define CODEC_DAC_DRE_GAIN_STEP9_CH1_SHIFT  0
#define CODEC_DAC_DRE_GAIN_STEP9_CH1_MASK   (0xFFFF << CODEC_DAC_DRE_GAIN_STEP9_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP9_CH1(n)     BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP9_CH1, n)

// REG_335
#define CODEC_DAC_DRE_GAIN_STEP10_CH1_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP10_CH1_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP10_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP10_CH1(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP10_CH1, n)

// REG_336
#define CODEC_DAC_DRE_GAIN_STEP11_CH1_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP11_CH1_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP11_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP11_CH1(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP11_CH1, n)

// REG_337
#define CODEC_DAC_DRE_GAIN_STEP12_CH1_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP12_CH1_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP12_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP12_CH1(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP12_CH1, n)

// REG_338
#define CODEC_DAC_DRE_GAIN_STEP13_CH1_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP13_CH1_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP13_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP13_CH1(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP13_CH1, n)

// REG_339
#define CODEC_DAC_DRE_GAIN_STEP14_CH1_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP14_CH1_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP14_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP14_CH1(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP14_CH1, n)

// REG_33A
#define CODEC_DAC_DRE_GAIN_STEP15_CH1_SHIFT 0
#define CODEC_DAC_DRE_GAIN_STEP15_CH1_MASK  (0xFFFF << CODEC_DAC_DRE_GAIN_STEP15_CH1_SHIFT)
#define CODEC_DAC_DRE_GAIN_STEP15_CH1(n)    BITFIELD_VAL(CODEC_DAC_DRE_GAIN_STEP15_CH1, n)

// REG_33B
#define CODEC_DAC_DRE_DC0_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC0_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC0_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC0_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC0_CH0_15_0, n)

// REG_33C
#define CODEC_DAC_DRE_DC1_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC1_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC1_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC1_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC1_CH0_15_0, n)

// REG_33D
#define CODEC_DAC_DRE_DC2_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC2_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC2_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC2_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC2_CH0_15_0, n)

// REG_33E
#define CODEC_DAC_DRE_DC3_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC3_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC3_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC3_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC3_CH0_15_0, n)

// REG_33F
#define CODEC_DAC_DRE_DC4_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC4_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC4_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC4_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC4_CH0_15_0, n)

// REG_340
#define CODEC_DAC_DRE_DC5_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC5_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC5_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC5_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC5_CH0_15_0, n)

// REG_341
#define CODEC_DAC_DRE_DC6_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC6_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC6_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC6_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC6_CH0_15_0, n)

// REG_342
#define CODEC_DAC_DRE_DC7_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC7_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC7_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC7_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC7_CH0_15_0, n)

// REG_343
#define CODEC_DAC_DRE_DC8_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC8_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC8_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC8_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC8_CH0_15_0, n)

// REG_344
#define CODEC_DAC_DRE_DC9_CH0_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC9_CH0_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC9_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC9_CH0_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC9_CH0_15_0, n)

// REG_345
#define CODEC_DAC_DRE_DC10_CH0_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC10_CH0_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC10_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC10_CH0_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC10_CH0_15_0, n)

// REG_346
#define CODEC_DAC_DRE_DC11_CH0_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC11_CH0_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC11_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC11_CH0_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC11_CH0_15_0, n)

// REG_347
#define CODEC_DAC_DRE_DC12_CH0_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC12_CH0_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC12_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC12_CH0_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC12_CH0_15_0, n)

// REG_348
#define CODEC_DAC_DRE_DC13_CH0_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC13_CH0_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC13_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC13_CH0_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC13_CH0_15_0, n)

// REG_349
#define CODEC_DAC_DRE_DC14_CH0_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC14_CH0_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC14_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC14_CH0_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC14_CH0_15_0, n)

// REG_34A
#define CODEC_DAC_DRE_DC15_CH0_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC15_CH0_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC15_CH0_15_0_SHIFT)
#define CODEC_DAC_DRE_DC15_CH0_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC15_CH0_15_0, n)

// REG_34B
#define CODEC_DAC_DRE_DC0_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC0_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC0_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC0_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC0_CH1_15_0, n)

// REG_34C
#define CODEC_DAC_DRE_DC1_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC1_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC1_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC1_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC1_CH1_15_0, n)

// REG_34D
#define CODEC_DAC_DRE_DC2_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC2_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC2_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC2_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC2_CH1_15_0, n)

// REG_34E
#define CODEC_DAC_DRE_DC3_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC3_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC3_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC3_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC3_CH1_15_0, n)

// REG_34F
#define CODEC_DAC_DRE_DC4_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC4_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC4_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC4_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC4_CH1_15_0, n)

// REG_350
#define CODEC_DAC_DRE_DC5_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC5_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC5_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC5_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC5_CH1_15_0, n)

// REG_351
#define CODEC_DAC_DRE_DC6_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC6_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC6_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC6_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC6_CH1_15_0, n)

// REG_352
#define CODEC_DAC_DRE_DC7_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC7_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC7_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC7_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC7_CH1_15_0, n)

// REG_353
#define CODEC_DAC_DRE_DC8_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC8_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC8_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC8_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC8_CH1_15_0, n)

// REG_354
#define CODEC_DAC_DRE_DC9_CH1_15_0_SHIFT    0
#define CODEC_DAC_DRE_DC9_CH1_15_0_MASK     (0xFFFF << CODEC_DAC_DRE_DC9_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC9_CH1_15_0(n)       BITFIELD_VAL(CODEC_DAC_DRE_DC9_CH1_15_0, n)

// REG_355
#define CODEC_DAC_DRE_DC10_CH1_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC10_CH1_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC10_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC10_CH1_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC10_CH1_15_0, n)

// REG_356
#define CODEC_DAC_DRE_DC11_CH1_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC11_CH1_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC11_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC11_CH1_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC11_CH1_15_0, n)

// REG_357
#define CODEC_DAC_DRE_DC12_CH1_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC12_CH1_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC12_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC12_CH1_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC12_CH1_15_0, n)

// REG_358
#define CODEC_DAC_DRE_DC13_CH1_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC13_CH1_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC13_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC13_CH1_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC13_CH1_15_0, n)

// REG_359
#define CODEC_DAC_DRE_DC14_CH1_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC14_CH1_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC14_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC14_CH1_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC14_CH1_15_0, n)

// REG_35A
#define CODEC_DAC_DRE_DC15_CH1_15_0_SHIFT   0
#define CODEC_DAC_DRE_DC15_CH1_15_0_MASK    (0xFFFF << CODEC_DAC_DRE_DC15_CH1_15_0_SHIFT)
#define CODEC_DAC_DRE_DC15_CH1_15_0(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC15_CH1_15_0, n)

// REG_35B
#define CODEC_CI2S_EN                       (1 << 0)
#define CODEC_CI2S_CLK_EN                   (1 << 1)
#define CODEC_CI2S_TX_EN                    (1 << 2)
#define CODEC_CI2S_RX_EN                    (1 << 3)
#define CODEC_CI2S_TXCH_EN_SHIFT            4
#define CODEC_CI2S_TXCH_EN_MASK             (0xF << CODEC_CI2S_TXCH_EN_SHIFT)
#define CODEC_CI2S_TXCH_EN(n)               BITFIELD_VAL(CODEC_CI2S_TXCH_EN, n)
#define CODEC_CI2S_RXCH_EN_SHIFT            8
#define CODEC_CI2S_RXCH_EN_MASK             (0xF << CODEC_CI2S_RXCH_EN_SHIFT)
#define CODEC_CI2S_RXCH_EN(n)               BITFIELD_VAL(CODEC_CI2S_RXCH_EN, n)
#define CODEC_CI2S_CLK_WORD_SIZE_SHIFT      12
#define CODEC_CI2S_CLK_WORD_SIZE_MASK       (0x3 << CODEC_CI2S_CLK_WORD_SIZE_SHIFT)
#define CODEC_CI2S_CLK_WORD_SIZE(n)         BITFIELD_VAL(CODEC_CI2S_CLK_WORD_SIZE, n)
#define CODEC_CI2S_MSTN_SLV_MODE            (1 << 14)
#define CODEC_CI2S_TDM_TX_EDGE              (1 << 15)

// REG_35C
#define CODEC_CI2S_TDM_EN                   (1 << 0)
#define CODEC_CI2S_TDM_MODE                 (1 << 1)
#define CODEC_CI2S_TDM_WS_NEGEDGE           (1 << 2)
#define CODEC_CI2S_TDM_FRAME_WIDTH_SHIFT    3
#define CODEC_CI2S_TDM_FRAME_WIDTH_MASK     (0x7 << CODEC_CI2S_TDM_FRAME_WIDTH_SHIFT)
#define CODEC_CI2S_TDM_FRAME_WIDTH(n)       BITFIELD_VAL(CODEC_CI2S_TDM_FRAME_WIDTH, n)
#define CODEC_CI2S_TDM_WS_WIDTH_SHIFT       6
#define CODEC_CI2S_TDM_WS_WIDTH_MASK        (0x7 << CODEC_CI2S_TDM_WS_WIDTH_SHIFT)
#define CODEC_CI2S_TDM_WS_WIDTH(n)          BITFIELD_VAL(CODEC_CI2S_TDM_WS_WIDTH, n)
#define CODEC_CI2S_TDM_SLOT_WIDTH_SHIFT     9
#define CODEC_CI2S_TDM_SLOT_WIDTH_MASK      (0x3 << CODEC_CI2S_TDM_SLOT_WIDTH_SHIFT)
#define CODEC_CI2S_TDM_SLOT_WIDTH(n)        BITFIELD_VAL(CODEC_CI2S_TDM_SLOT_WIDTH, n)
#define CODEC_CI2S_TDM_DATA_OFFSET_SHIFT    11
#define CODEC_CI2S_TDM_DATA_OFFSET_MASK     (0x1F << CODEC_CI2S_TDM_DATA_OFFSET_SHIFT)
#define CODEC_CI2S_TDM_DATA_OFFSET(n)       BITFIELD_VAL(CODEC_CI2S_TDM_DATA_OFFSET, n)

// REG_35D
#define CODEC_CI2S_CLK_GATE_SHIFT           0
#define CODEC_CI2S_CLK_GATE_MASK            (0x7 << CODEC_CI2S_CLK_GATE_SHIFT)
#define CODEC_CI2S_CLK_GATE(n)              BITFIELD_VAL(CODEC_CI2S_CLK_GATE, n)
#define CODEC_CI2S_DATA_OFFSET_SHIFT        3
#define CODEC_CI2S_DATA_OFFSET_MASK         (0xF << CODEC_CI2S_DATA_OFFSET_SHIFT)
#define CODEC_CI2S_DATA_OFFSET(n)           BITFIELD_VAL(CODEC_CI2S_DATA_OFFSET, n)
#define CODEC_CI2S_RX_DM_SHIFT              7
#define CODEC_CI2S_RX_DM_MASK               (0x7 << CODEC_CI2S_RX_DM_SHIFT)
#define CODEC_CI2S_RX_DM(n)                 BITFIELD_VAL(CODEC_CI2S_RX_DM, n)
#define CODEC_CI2S_TX_DM_SHIFT              10
#define CODEC_CI2S_TX_DM_MASK               (0x7 << CODEC_CI2S_TX_DM_SHIFT)
#define CODEC_CI2S_TX_DM(n)                 BITFIELD_VAL(CODEC_CI2S_TX_DM, n)
#define CODEC_CI2S_RATE_SEL_SHIFT           13
#define CODEC_CI2S_RATE_SEL_MASK            (0x7 << CODEC_CI2S_RATE_SEL_SHIFT)
#define CODEC_CI2S_RATE_SEL(n)              BITFIELD_VAL(CODEC_CI2S_RATE_SEL, n)

// REG_35E
#define CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH0_SHIFT 0
#define CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH0_MASK (0xFF << CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH0_SHIFT)
#define CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH0(n) BITFIELD_VAL(CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH0, n)
#define CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH1_SHIFT 8
#define CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH1_MASK (0xFF << CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH1_SHIFT)
#define CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH1(n) BITFIELD_VAL(CODEC_DAC_ANA_GAIN_UPDATE_DELAY_CH1, n)

// REG_35F
#define EN_CLK_ADC_ANA_SHIFT                0
#define EN_CLK_ADC_ANA_MASK                 (0xF << EN_CLK_ADC_ANA_SHIFT)
#define EN_CLK_ADC_ANA(n)                   BITFIELD_VAL(EN_CLK_ADC_ANA, n)
#define EN_CLK_ADC_SHIFT                    4
#define EN_CLK_ADC_MASK                     (0xF << EN_CLK_ADC_SHIFT)
#define EN_CLK_ADC(n)                       BITFIELD_VAL(EN_CLK_ADC, n)
#define SOFT_RSTN_ADC_ANA_SHIFT             8
#define SOFT_RSTN_ADC_ANA_MASK              (0xF << SOFT_RSTN_ADC_ANA_SHIFT)
#define SOFT_RSTN_ADC_ANA(n)                BITFIELD_VAL(SOFT_RSTN_ADC_ANA, n)
#define SOFT_RSTN_ADC_SHIFT                 12
#define SOFT_RSTN_ADC_MASK                  (0xF << SOFT_RSTN_ADC_SHIFT)
#define SOFT_RSTN_ADC(n)                    BITFIELD_VAL(SOFT_RSTN_ADC, n)

// REG_360
#define POL_ADC_ANA_SHIFT                   0
#define POL_ADC_ANA_MASK                    (0xF << POL_ADC_ANA_SHIFT)
#define POL_ADC_ANA(n)                      BITFIELD_VAL(POL_ADC_ANA, n)
#define POL_CLK_CODEC                       (1 << 4)
#define SEL_CLK_CODEC                       (1 << 5)
#define POL_CLK_CI2S_TX                     (1 << 6)
#define EN_CLK_DAC                          (1 << 7)
#define SOFT_RSTN_DAC                       (1 << 8)

// REG_361
#define CFG_DIV_CI2S_SHIFT                  0
#define CFG_DIV_CI2S_MASK                   (0xFF << CFG_DIV_CI2S_SHIFT)
#define CFG_DIV_CI2S(n)                     BITFIELD_VAL(CFG_DIV_CI2S, n)
#define BYPASS_DIV_CI2S                     (1 << 8)
#define POL_CLK_CI2S_IN                     (1 << 9)
#define SEL_CI2S_CLKIN                      (1 << 10)
#define EN_CLK_CI2S                         (1 << 11)
#define EN_CLK_CI2S_OUT                     (1 << 12)
#define EN_SCLK_CI2S                        (1 << 13)
#define POL_CLK_CI2S_OUT                    (1 << 14)
#define SOFT_RSTN_CI2S                      (1 << 15)

// REG_362
#define ADC_FIFO_OVERFLOW_MASK_SHIFT        0
#define ADC_FIFO_OVERFLOW_MASK_MASK         (0x7 << ADC_FIFO_OVERFLOW_MASK_SHIFT)
#define ADC_FIFO_OVERFLOW_MASK(n)           BITFIELD_VAL(ADC_FIFO_OVERFLOW_MASK, n)
#define ADC_FIFO_UNDERFLOW_MASK_SHIFT       3
#define ADC_FIFO_UNDERFLOW_MASK_MASK        (0x7 << ADC_FIFO_UNDERFLOW_MASK_SHIFT)
#define ADC_FIFO_UNDERFLOW_MASK(n)          BITFIELD_VAL(ADC_FIFO_UNDERFLOW_MASK, n)
#define REG_CLR_ADC_FIFO_INTR               (1 << 6)
#define ADC_FIFO_OVERFLOW_STATUS_SHIFT      7
#define ADC_FIFO_OVERFLOW_STATUS_MASK       (0x7 << ADC_FIFO_OVERFLOW_STATUS_SHIFT)
#define ADC_FIFO_OVERFLOW_STATUS(n)         BITFIELD_VAL(ADC_FIFO_OVERFLOW_STATUS, n)
#define ADC_FIFO_UNDERFLOW_STATUS_SHIFT     10
#define ADC_FIFO_UNDERFLOW_STATUS_MASK      (0x7 << ADC_FIFO_UNDERFLOW_STATUS_SHIFT)
#define ADC_FIFO_UNDERFLOW_STATUS(n)        BITFIELD_VAL(ADC_FIFO_UNDERFLOW_STATUS, n)
#define ADC_FIFO_INTR                       (1 << 13)

// REG_363
#define MIC_OUT_ADC_CH0_15_0_SHIFT          0
#define MIC_OUT_ADC_CH0_15_0_MASK           (0xFFFF << MIC_OUT_ADC_CH0_15_0_SHIFT)
#define MIC_OUT_ADC_CH0_15_0(n)             BITFIELD_VAL(MIC_OUT_ADC_CH0_15_0, n)

// REG_364
#define MIC_OUT_ADC_CH0_20_16_SHIFT         0
#define MIC_OUT_ADC_CH0_20_16_MASK          (0x1F << MIC_OUT_ADC_CH0_20_16_SHIFT)
#define MIC_OUT_ADC_CH0_20_16(n)            BITFIELD_VAL(MIC_OUT_ADC_CH0_20_16, n)

// REG_365
#define MIC_OUT_ADC_CH1_15_0_SHIFT          0
#define MIC_OUT_ADC_CH1_15_0_MASK           (0xFFFF << MIC_OUT_ADC_CH1_15_0_SHIFT)
#define MIC_OUT_ADC_CH1_15_0(n)             BITFIELD_VAL(MIC_OUT_ADC_CH1_15_0, n)

// REG_366
#define MIC_OUT_ADC_CH1_20_16_SHIFT         0
#define MIC_OUT_ADC_CH1_20_16_MASK          (0x1F << MIC_OUT_ADC_CH1_20_16_SHIFT)
#define MIC_OUT_ADC_CH1_20_16(n)            BITFIELD_VAL(MIC_OUT_ADC_CH1_20_16, n)

// REG_367
#define MIC_OUT_ADC_CH2_15_0_SHIFT          0
#define MIC_OUT_ADC_CH2_15_0_MASK           (0xFFFF << MIC_OUT_ADC_CH2_15_0_SHIFT)
#define MIC_OUT_ADC_CH2_15_0(n)             BITFIELD_VAL(MIC_OUT_ADC_CH2_15_0, n)

// REG_368
#define MIC_OUT_ADC_CH2_20_16_SHIFT         0
#define MIC_OUT_ADC_CH2_20_16_MASK          (0x1F << MIC_OUT_ADC_CH2_20_16_SHIFT)
#define MIC_OUT_ADC_CH2_20_16(n)            BITFIELD_VAL(MIC_OUT_ADC_CH2_20_16, n)

// REG_369
#define CODEC_DAC_DRE_DC0_CH0_17_16_SHIFT   0
#define CODEC_DAC_DRE_DC0_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC0_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC0_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC0_CH0_17_16, n)
#define CODEC_DAC_DRE_DC1_CH0_17_16_SHIFT   2
#define CODEC_DAC_DRE_DC1_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC1_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC1_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC1_CH0_17_16, n)
#define CODEC_DAC_DRE_DC2_CH0_17_16_SHIFT   4
#define CODEC_DAC_DRE_DC2_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC2_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC2_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC2_CH0_17_16, n)
#define CODEC_DAC_DRE_DC3_CH0_17_16_SHIFT   6
#define CODEC_DAC_DRE_DC3_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC3_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC3_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC3_CH0_17_16, n)
#define CODEC_DAC_DRE_DC4_CH0_17_16_SHIFT   8
#define CODEC_DAC_DRE_DC4_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC4_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC4_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC4_CH0_17_16, n)
#define CODEC_DAC_DRE_DC5_CH0_17_16_SHIFT   10
#define CODEC_DAC_DRE_DC5_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC5_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC5_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC5_CH0_17_16, n)
#define CODEC_DAC_DRE_DC6_CH0_17_16_SHIFT   12
#define CODEC_DAC_DRE_DC6_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC6_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC6_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC6_CH0_17_16, n)
#define CODEC_DAC_DRE_DC7_CH0_17_16_SHIFT   14
#define CODEC_DAC_DRE_DC7_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC7_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC7_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC7_CH0_17_16, n)

// REG_36A
#define CODEC_DAC_DRE_DC8_CH0_17_16_SHIFT   0
#define CODEC_DAC_DRE_DC8_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC8_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC8_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC8_CH0_17_16, n)
#define CODEC_DAC_DRE_DC9_CH0_17_16_SHIFT   2
#define CODEC_DAC_DRE_DC9_CH0_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC9_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC9_CH0_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC9_CH0_17_16, n)
#define CODEC_DAC_DRE_DC10_CH0_17_16_SHIFT  4
#define CODEC_DAC_DRE_DC10_CH0_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC10_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC10_CH0_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC10_CH0_17_16, n)
#define CODEC_DAC_DRE_DC11_CH0_17_16_SHIFT  6
#define CODEC_DAC_DRE_DC11_CH0_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC11_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC11_CH0_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC11_CH0_17_16, n)
#define CODEC_DAC_DRE_DC12_CH0_17_16_SHIFT  8
#define CODEC_DAC_DRE_DC12_CH0_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC12_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC12_CH0_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC12_CH0_17_16, n)
#define CODEC_DAC_DRE_DC13_CH0_17_16_SHIFT  10
#define CODEC_DAC_DRE_DC13_CH0_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC13_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC13_CH0_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC13_CH0_17_16, n)
#define CODEC_DAC_DRE_DC14_CH0_17_16_SHIFT  12
#define CODEC_DAC_DRE_DC14_CH0_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC14_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC14_CH0_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC14_CH0_17_16, n)
#define CODEC_DAC_DRE_DC15_CH0_17_16_SHIFT  14
#define CODEC_DAC_DRE_DC15_CH0_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC15_CH0_17_16_SHIFT)
#define CODEC_DAC_DRE_DC15_CH0_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC15_CH0_17_16, n)

// REG_36B
#define CODEC_DAC_DRE_DC0_CH1_17_16_SHIFT   0
#define CODEC_DAC_DRE_DC0_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC0_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC0_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC0_CH1_17_16, n)
#define CODEC_DAC_DRE_DC1_CH1_17_16_SHIFT   2
#define CODEC_DAC_DRE_DC1_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC1_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC1_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC1_CH1_17_16, n)
#define CODEC_DAC_DRE_DC2_CH1_17_16_SHIFT   4
#define CODEC_DAC_DRE_DC2_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC2_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC2_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC2_CH1_17_16, n)
#define CODEC_DAC_DRE_DC3_CH1_17_16_SHIFT   6
#define CODEC_DAC_DRE_DC3_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC3_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC3_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC3_CH1_17_16, n)
#define CODEC_DAC_DRE_DC4_CH1_17_16_SHIFT   8
#define CODEC_DAC_DRE_DC4_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC4_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC4_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC4_CH1_17_16, n)
#define CODEC_DAC_DRE_DC5_CH1_17_16_SHIFT   10
#define CODEC_DAC_DRE_DC5_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC5_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC5_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC5_CH1_17_16, n)
#define CODEC_DAC_DRE_DC6_CH1_17_16_SHIFT   12
#define CODEC_DAC_DRE_DC6_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC6_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC6_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC6_CH1_17_16, n)
#define CODEC_DAC_DRE_DC7_CH1_17_16_SHIFT   14
#define CODEC_DAC_DRE_DC7_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC7_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC7_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC7_CH1_17_16, n)

// REG_36C
#define CODEC_DAC_DRE_DC8_CH1_17_16_SHIFT   0
#define CODEC_DAC_DRE_DC8_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC8_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC8_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC8_CH1_17_16, n)
#define CODEC_DAC_DRE_DC9_CH1_17_16_SHIFT   2
#define CODEC_DAC_DRE_DC9_CH1_17_16_MASK    (0x3 << CODEC_DAC_DRE_DC9_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC9_CH1_17_16(n)      BITFIELD_VAL(CODEC_DAC_DRE_DC9_CH1_17_16, n)
#define CODEC_DAC_DRE_DC10_CH1_17_16_SHIFT  4
#define CODEC_DAC_DRE_DC10_CH1_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC10_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC10_CH1_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC10_CH1_17_16, n)
#define CODEC_DAC_DRE_DC11_CH1_17_16_SHIFT  6
#define CODEC_DAC_DRE_DC11_CH1_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC11_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC11_CH1_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC11_CH1_17_16, n)
#define CODEC_DAC_DRE_DC12_CH1_17_16_SHIFT  8
#define CODEC_DAC_DRE_DC12_CH1_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC12_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC12_CH1_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC12_CH1_17_16, n)
#define CODEC_DAC_DRE_DC13_CH1_17_16_SHIFT  10
#define CODEC_DAC_DRE_DC13_CH1_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC13_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC13_CH1_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC13_CH1_17_16, n)
#define CODEC_DAC_DRE_DC14_CH1_17_16_SHIFT  12
#define CODEC_DAC_DRE_DC14_CH1_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC14_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC14_CH1_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC14_CH1_17_16, n)
#define CODEC_DAC_DRE_DC15_CH1_17_16_SHIFT  14
#define CODEC_DAC_DRE_DC15_CH1_17_16_MASK   (0x3 << CODEC_DAC_DRE_DC15_CH1_17_16_SHIFT)
#define CODEC_DAC_DRE_DC15_CH1_17_16(n)     BITFIELD_VAL(CODEC_DAC_DRE_DC15_CH1_17_16, n)

// REG_36D
#define CODEC_DAC_H4_DELAY_CH0_SHIFT        0
#define CODEC_DAC_H4_DELAY_CH0_MASK         (0x3 << CODEC_DAC_H4_DELAY_CH0_SHIFT)
#define CODEC_DAC_H4_DELAY_CH0(n)           BITFIELD_VAL(CODEC_DAC_H4_DELAY_CH0, n)
#define CODEC_DAC_L4_DELAY_CH0_SHIFT        2
#define CODEC_DAC_L4_DELAY_CH0_MASK         (0x3 << CODEC_DAC_L4_DELAY_CH0_SHIFT)
#define CODEC_DAC_L4_DELAY_CH0(n)           BITFIELD_VAL(CODEC_DAC_L4_DELAY_CH0, n)
#define CODEC_DAC_H4_DELAY_CH1_SHIFT        4
#define CODEC_DAC_H4_DELAY_CH1_MASK         (0x3 << CODEC_DAC_H4_DELAY_CH1_SHIFT)
#define CODEC_DAC_H4_DELAY_CH1(n)           BITFIELD_VAL(CODEC_DAC_H4_DELAY_CH1, n)
#define CODEC_DAC_L4_DELAY_CH1_SHIFT        6
#define CODEC_DAC_L4_DELAY_CH1_MASK         (0x3 << CODEC_DAC_L4_DELAY_CH1_SHIFT)
#define CODEC_DAC_L4_DELAY_CH1(n)           BITFIELD_VAL(CODEC_DAC_L4_DELAY_CH1, n)
#define CODEC_DAC_OUT_SWAP                  (1 << 8)

// REG_370
#define CFG_CLK_SW_EN                       (1 << 0)
#define CFG_CLK_SW_PRD_SHIFT                1
#define CFG_CLK_SW_PRD_MASK                 (0xFF << CFG_CLK_SW_PRD_SHIFT)
#define CFG_CLK_SW_PRD(n)                   BITFIELD_VAL(CFG_CLK_SW_PRD, n)

// REG_371
#define CFG_CLK_SW_ADCA_START_SHIFT         0
#define CFG_CLK_SW_ADCA_START_MASK          (0x3FF << CFG_CLK_SW_ADCA_START_SHIFT)
#define CFG_CLK_SW_ADCA_START(n)            BITFIELD_VAL(CFG_CLK_SW_ADCA_START, n)

// REG_372
#define CFG_CLK_SW_ADCA_TIME_SHIFT          0
#define CFG_CLK_SW_ADCA_TIME_MASK           (0x1FF << CFG_CLK_SW_ADCA_TIME_SHIFT)
#define CFG_CLK_SW_ADCA_TIME(n)             BITFIELD_VAL(CFG_CLK_SW_ADCA_TIME, n)

// REG_373
#define CFG_CLK_SW_ADCB_START_SHIFT         0
#define CFG_CLK_SW_ADCB_START_MASK          (0x3FF << CFG_CLK_SW_ADCB_START_SHIFT)
#define CFG_CLK_SW_ADCB_START(n)            BITFIELD_VAL(CFG_CLK_SW_ADCB_START, n)

// REG_374
#define CFG_CLK_SW_ADCB_TIME_SHIFT          0
#define CFG_CLK_SW_ADCB_TIME_MASK           (0x1FF << CFG_CLK_SW_ADCB_TIME_SHIFT)
#define CFG_CLK_SW_ADCB_TIME(n)             BITFIELD_VAL(CFG_CLK_SW_ADCB_TIME, n)

// REG_375
#define CFG_CLK_SW_ADCC_START_SHIFT         0
#define CFG_CLK_SW_ADCC_START_MASK          (0x3FF << CFG_CLK_SW_ADCC_START_SHIFT)
#define CFG_CLK_SW_ADCC_START(n)            BITFIELD_VAL(CFG_CLK_SW_ADCC_START, n)

// REG_376
#define CFG_CLK_SW_ADCC_TIME_SHIFT          0
#define CFG_CLK_SW_ADCC_TIME_MASK           (0x1FF << CFG_CLK_SW_ADCC_TIME_SHIFT)
#define CFG_CLK_SW_ADCC_TIME(n)             BITFIELD_VAL(CFG_CLK_SW_ADCC_TIME, n)

// REG_377
#define TSENSOR_ENABLE                      (1 << 0)
#define TSENSOR_DOWN_SEL_SHIFT              1
#define TSENSOR_DOWN_SEL_MASK               (0x7 << TSENSOR_DOWN_SEL_SHIFT)
#define TSENSOR_DOWN_SEL(n)                 BITFIELD_VAL(TSENSOR_DOWN_SEL, n)
#define TSENSOR_HBF1_BYPASS                 (1 << 4)
#define TSENSOR_HBF2_BYPASS                 (1 << 5)
#define CFG_TSENSOR_OUT_DECIM_SHIFT         6
#define CFG_TSENSOR_OUT_DECIM_MASK          (0x7 << CFG_TSENSOR_OUT_DECIM_SHIFT)
#define CFG_TSENSOR_OUT_DECIM(n)            BITFIELD_VAL(CFG_TSENSOR_OUT_DECIM, n)
#define CFG_TSENSOR_OUT_PHASE_SHIFT         9
#define CFG_TSENSOR_OUT_PHASE_MASK          (0x7 << CFG_TSENSOR_OUT_PHASE_SHIFT)
#define CFG_TSENSOR_OUT_PHASE(n)            BITFIELD_VAL(CFG_TSENSOR_OUT_PHASE, n)
#define POL_CLK_TSENSOR                     (1 << 12)
#define EN_CLK_TSENSOR                      (1 << 13)
#define SOFT_RSTN_TSENSOR                   (1 << 14)

// REG_378
#define TSENSOR_HBF2_COEF_01_SHIFT          0
#define TSENSOR_HBF2_COEF_01_MASK           (0xFFFF << TSENSOR_HBF2_COEF_01_SHIFT)
#define TSENSOR_HBF2_COEF_01(n)             BITFIELD_VAL(TSENSOR_HBF2_COEF_01, n)

// REG_379
#define TSENSOR_HBF2_COEF_02_SHIFT          0
#define TSENSOR_HBF2_COEF_02_MASK           (0xFFFF << TSENSOR_HBF2_COEF_02_SHIFT)
#define TSENSOR_HBF2_COEF_02(n)             BITFIELD_VAL(TSENSOR_HBF2_COEF_02, n)

// REG_37A
#define TSENSOR_HBF2_COEF_03_SHIFT          0
#define TSENSOR_HBF2_COEF_03_MASK           (0xFFFF << TSENSOR_HBF2_COEF_03_SHIFT)
#define TSENSOR_HBF2_COEF_03(n)             BITFIELD_VAL(TSENSOR_HBF2_COEF_03, n)

// REG_37B
#define TSENSOR_HBF2_COEF_04_SHIFT          0
#define TSENSOR_HBF2_COEF_04_MASK           (0xFFFF << TSENSOR_HBF2_COEF_04_SHIFT)
#define TSENSOR_HBF2_COEF_04(n)             BITFIELD_VAL(TSENSOR_HBF2_COEF_04, n)

// REG_37C
#define TSENSOR_HBF2_COEF_05_SHIFT          0
#define TSENSOR_HBF2_COEF_05_MASK           (0xFFFF << TSENSOR_HBF2_COEF_05_SHIFT)
#define TSENSOR_HBF2_COEF_05(n)             BITFIELD_VAL(TSENSOR_HBF2_COEF_05, n)

// REG_37D
#define TSENSOR_HBF2_COEF_06_SHIFT          0
#define TSENSOR_HBF2_COEF_06_MASK           (0xFFFF << TSENSOR_HBF2_COEF_06_SHIFT)
#define TSENSOR_HBF2_COEF_06(n)             BITFIELD_VAL(TSENSOR_HBF2_COEF_06, n)

// REG_37E
#define TSENSOR_HBF2_COEF_07_SHIFT          0
#define TSENSOR_HBF2_COEF_07_MASK           (0xFFFF << TSENSOR_HBF2_COEF_07_SHIFT)
#define TSENSOR_HBF2_COEF_07(n)             BITFIELD_VAL(TSENSOR_HBF2_COEF_07, n)

// REG_37F
#define TSENSOR_HBF2_COEF_08_SHIFT          0
#define TSENSOR_HBF2_COEF_08_MASK           (0xFFFF << TSENSOR_HBF2_COEF_08_SHIFT)
#define TSENSOR_HBF2_COEF_08(n)             BITFIELD_VAL(TSENSOR_HBF2_COEF_08, n)

// REG_380
#define TSENSOR_HBF2_COEF_09_SHIFT          0
#define TSENSOR_HBF2_COEF_09_MASK           (0xFFFF << TSENSOR_HBF2_COEF_09_SHIFT)
#define TSENSOR_HBF2_COEF_09(n)             BITFIELD_VAL(TSENSOR_HBF2_COEF_09, n)

// REG_381
#define DOUT_TSENSOR_15_0_SHIFT             0
#define DOUT_TSENSOR_15_0_MASK              (0xFFFF << DOUT_TSENSOR_15_0_SHIFT)
#define DOUT_TSENSOR_15_0(n)                BITFIELD_VAL(DOUT_TSENSOR_15_0, n)

// REG_382
#define DOUT_TSENSOR_19_16_SHIFT            0
#define DOUT_TSENSOR_19_16_MASK             (0xF << DOUT_TSENSOR_19_16_SHIFT)
#define DOUT_TSENSOR_19_16(n)               BITFIELD_VAL(DOUT_TSENSOR_19_16, n)

// REG_383
#define TSENSOR_SINC1_CAS_SHIFT             0
#define TSENSOR_SINC1_CAS_MASK              (0x3 << TSENSOR_SINC1_CAS_SHIFT)
#define TSENSOR_SINC1_CAS(n)                BITFIELD_VAL(TSENSOR_SINC1_CAS, n)
#define TSENSOR_SINC2_CAS_SHIFT             2
#define TSENSOR_SINC2_CAS_MASK              (0x3 << TSENSOR_SINC2_CAS_SHIFT)
#define TSENSOR_SINC2_CAS(n)                BITFIELD_VAL(TSENSOR_SINC2_CAS, n)
#define TSENSOR_SINC3_CAS_SHIFT             4
#define TSENSOR_SINC3_CAS_MASK              (0x3 << TSENSOR_SINC3_CAS_SHIFT)
#define TSENSOR_SINC3_CAS(n)                BITFIELD_VAL(TSENSOR_SINC3_CAS, n)
#define TSENSOR_SINC1_DSR                   (1 << 6)
#define TSENSOR_SINC2_DSR                   (1 << 7)
#define TSENSOR_SINC3_DSR                   (1 << 8)

// REG_384
#define EN_CLK_TSENSOR_OUT                  (1 << 0)
#define SEL_CLK_TSENSOR_OUT                 (1 << 1)
#define CFG_DIV_TSENSOR_OUT_SHIFT           2
#define CFG_DIV_TSENSOR_OUT_MASK            (0x3FF << CFG_DIV_TSENSOR_OUT_SHIFT)
#define CFG_DIV_TSENSOR_OUT(n)              BITFIELD_VAL(CFG_DIV_TSENSOR_OUT, n)

// REG_385
#define TSENSOR_READ_EN                     (1 << 0)

#endif