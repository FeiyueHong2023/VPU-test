CHIP        ?= best1603

DEBUG       ?= 1

FPGA        ?= 0

RTOS        ?= 1

GRAPH_MODULE := 0

include $(srctree)/config/$(CHIP)/mem_cfg.mk

# for slim earphone config
# for security core do not define it
CHIP_SUBSYS ?= bth

export BTH_AS_MAIN_MCU ?= 1
# for slim earphone config

ifeq ($(BTH_AS_MAIN_MCU),0)
ifeq ($(CHIP_SUBSYS),)
KBUILD_CPPFLAGS += -D__SYS_AS_MAIN__
endif
endif

export LIBC_OVERRIDE := 1

#KERNEL      ?= RTX5
#KERNEL      ?= LITEOS_M
VERSION_INFO ?= best1603_ibrt

export USER_SECURE_BOOT	?= 0
# enable:1
# disable:0

WATCHER_DOG ?= 1

DEBUG_PORT  ?= 1
# 0: usb
# 1: uart0
# 2: uart1

FLASH_CHIP	?= ALL
# GD25Q80C
# GD25Q32C
# ALL

export RF_INIT_XTAL_CAP_FROM_NV ?= 1

export BLE_EXT_ADV_TX_PWR_INDEPEND ?= 0

export AFH_ASSESS ?= 1

export BT_RAMRUN_NEW ?= 1

export NO_MPU_DEFAULT_MAP ?= 0

export HW_AGC ?= 1

export MHDT_SWAGC ?= 0

export NEW_SWAGC_MODE ?= 0

export BLE_NEW_SWAGC_MODE ?= 0

export BT_LOG_POWEROFF ?= 0

export BT_INFO_CHECKER ?= 0

export BT_TEST_CURRENT_KEY ?= 0

export BT_UART_LOG_P16 ?= 0

export BT_UART_LOG ?= 0

export BT_SYSTEM_52M ?= 0

export BES_FA_MODE ?= 0

export LL_MONITOR ?= 0

export SOFTBIT_EN ?= 0

export ACL_DATA_CRC_TEST ?= 0

export FORCE_SIGNALINGMODE ?= 0

export FORCE_NOSIGNALINGMODE ?= 0

export BT_BID_ECC_EN ?= 0

export BT_FAST_LOCK_ENABLE ?= 0

export IBRT_TESTMODE ?= 0

export CONTROLLER_DUMP_ENABLE ?= 1

export CONTROLLER_MEM_LOG_ENABLE ?= 0

export INTERSYS_DEBUG ?= 1

export PROFILE_DEBUG ?= 0

export BTDUMP_ENABLE ?= 0

export BT_DEBUG_TPORTS ?= 0
ifeq ($(BT_DEBUG_TPORTS),1)
export BTH_USE_SYS_GPIO  ?= 3
endif

export TPORTS_KEY_COEXIST ?= 0

export 3WIRE_TPORTS ?= 0

export BT_SIGNALTEST_SLEEP_EN ?= 0

export CT_ISR_TRACE_EN ?= 1

export NORMAL_TEST_MODE_SWITCH ?= 0
ifeq ($(NORMAL_TEST_MODE_SWITCH),1)
KBUILD_CPPFLAGS += -DNORMAL_TEST_MODE_SWITCH
endif

export BW2M_ENABLE ?= 0
ifeq ($(BW2M_ENABLE),1)
KBUILD_CPPFLAGS += -D__BW2M_ENABLE__
endif


export DISPLAY_PREFIX_HCI_CMD_EVT_ ?= 0

AUDIO_OUTPUT_MONO ?= 0

AUDIO_OUTPUT_DIFF ?= 0

HW_FIR_EQ_PROCESS ?= 0

SW_IIR_EQ_PROCESS ?= 0

SW_IIR_PROMPT_EQ_PROCESS ?= 0

HW_DAC_IIR_EQ_PROCESS ?= 1

HW_IIR_EQ_PROCESS ?= 0

HW_DC_FILTER_WITH_IIR ?= 0

AUDIO_DRC ?= 0

AUDIO_LIMITER ?= 0

AUDIO_HEARING_COMPSATN ?= 0
ifeq ($(AUDIO_HEARING_COMPSATN),1)
APP_TRACE_RX_ENABLE := 1
HEARING_MOD ?= HWIIR
endif
# HWFIR
# SWIIR
# HWIIR

PC_CMD_UART ?= 0

TOTA_EQ_TUNING ?= 0

SPP_EQ_TUNING ?= 0

AUDIO_SECTION_ENABLE ?= 0

AUDIO_RESAMPLE ?= 1

RESAMPLE_ANY_SAMPLE_RATE ?= 1

OSC_26M_X4_AUD2BB ?= 1

AUDIO_OUTPUT_VOLUME_DEFAULT ?= 16
# range:1~16

CODEC_DAC_MULTI_VOLUME_TABLE ?= 0

AUDIO_INPUT_CAPLESSMODE ?= 0

AUDIO_INPUT_LARGEGAIN ?= 0

AUDIO_CODEC_ASYNC_CLOSE ?= 0

AUDIO_SCO_BTPCM_CHANNEL ?= 1

export SCO_TRACE_CP_ACCEL ?= 0

# For TWS SCO DMA snapshot and low delay
export PCM_FAST_MODE ?= 1

export PCM_PRIVATE_DATA_FLAG ?= 0

export CVSD_BYPASS ?= 1

export LOW_DELAY_SCO ?= 0

export SPEECH_TX_24BIT ?= 0

SPEECH_BONE_SENSOR ?= 0

# VPU_NAME ?= LSM6DSV16BX

VPU_STREAM_SYNC_TUNING ?= 0

SPEECH_TX_DC_FILTER ?= 0

SPEECH_TX_AEC2FLOAT ?= 0

SPEECH_TX_NS3 ?= 0

SPEECH_TX_2MIC_NS2 ?= 0

SPEECH_TX_COMPEXP ?= 0

SPEECH_TX_EQ ?= 0

SPEECH_TX_POST_GAIN ?= 0

SPEECH_RX_NS2FLOAT ?= 0

SPEECH_RX_COMPEXP ?= 0

SPEECH_RX_EQ ?= 0

SPEECH_RX_POST_GAIN ?= 0

SCO_CP_ACCEL_RPC ?= 0

LARGE_RAM ?= 1

HSP_ENABLE ?= 0

SBC_FUNC_IN_ROM ?= 0

ROM_UTILS_ON ?= 0

export BT_SOURCE ?= 0

export APP_LINEIN_A2DP_SOURCE ?= 0
export APP_I2S_A2DP_SOURCE ?= 0
export SOURCE_TRACE_RX ?= 0
export A2DP_SOURCE_TEST ?= 0
export A2DP_SOURCE_SIMU ?= 0

export BT_HFP_AG_ROLE ?= 0
export HFP_AG_TEST ?= 0
export HFP_AG_SCO_AUTO_CONN ?= 0

### BT source related features start ###
A2DP_SOURCE_AAC_ON ?= 0

ifeq ($(APP_USB_A2DP_SOURCE),1)
NO_MPU_DEFAULT_MAP := 0
export PMU_USB_PIN_CHECK ?= 0
BTUSB_DUAL_MODE_SUPPORT ?= 1
else
BTUSB_DUAL_MODE_SUPPORT ?= 0
endif

ifeq ($(BTUSB_DUAL_MODE_SUPPORT),1)
export USB_AUDIO_SEND_MONO ?= 1
export AUDIO_INPUT_MONO ?= 1
export BT_USB_AUDIO_DUAL_MODE = 1

export DELAY_STREAM_OPEN ?= 1
export USB_ISO ?= 1
export USB_AUDIO_SEND_CHAN ?= 1
#export USB_AUDIO_DYN_CFG ?= 1
endif

### BT source related features end ###
VOICE_PROMPT ?= 1

TWS_PROMPT_SYNC ?= 1

REPORT_CONNECTIVITY_LOG ?= 0

# TOTA1: old tota, TOTA2: new tota(debuging)
export TOTA ?= 0
export TOTA_v2 ?= 1

ifeq ($(TOTA_v2),1)
export TOTA := 0
endif

export APP_RSSI ?=0
ifeq ($(APP_RSSI),1)
export TOTA_v2 := 1
KBUILD_CPPFLAGS += -DGET_PEER_RSSI_ENABLE
endif

export ULL_CIG_ENABLE ?= 0
ifeq ($(ULL_CIG_ENABLE),1)
KBUILD_CPPFLAGS += -D__ULL_CIG_ENABLE__
endif

GATT_OVER_BR_EDR ?= 0

BES_OTA ?= 0

TILE_DATAPATH_ENABLED ?= 0

CUSTOM_INFORMATION_TILE_ENABLE ?= 0

INTERCONNECTION ?= 0

INTERACTION ?= 0

INTERACTION_FASTPAIR ?= 0

BT_ONE_BRING_TWO ?= 0

DSD_SUPPORT ?= 0

A2DP_EQ_24BIT ?= 1

A2DP_AAC_ON ?= 1

A2DP_DSP ?= 0

A2DP_SCALABLE_ON ?= 0

A2DP_LHDC_ON ?= 0

ifeq ($(A2DP_LHDC_ON),1)
A2DP_LHDC_V3 ?= 1
export FLASH_UNIQUE_ID ?= 1
endif

A2DP_LDAC_ON ?= 0

export A2DP_LC3_ON ?= 0

export A2DP_AUDIO_STEREO_MIX_CTRL ?= 0

export TX_RX_PCM_MASK ?= 0

FACTORY_MODE ?= 1

ENGINEER_MODE ?= 1

ULTRA_LOW_POWER	?= 1

DAC_CLASSG_ENABLE ?= 0

NO_SLEEP ?= 0

CORE_DUMP ?= 0

CORE_DUMP_TO_FLASH ?= 0

export SYNC_BT_CTLR_PROFILE ?= 0

export A2DP_AVDTP_CP ?= 0

export A2DP_DECODER_VER := 2

export AUDIO_TRIGGER_VER := 1

export IBRT ?= 1

export SEARCH_UI_COMPATIBLE_UI_V2 ?= 0

export BLE_USB_AUDIO_SUPPORT ?= 0
ifeq ($(BLE_USB_AUDIO_SUPPORT),1)
KBUILD_CPPFLAGS += -DBLE_USB_AUDIO_SUPPORT
BTUSB_DUAL_MODE_SUPPORT := 1
ifeq ($(BTUSB_DUAL_MODE_SUPPORT),1)
export SPEECH_CODEC_CAPTURE_CHANNEL_NUM ?= 2
export NO_MPU_DEFAULT_MAP := 0
export PMU_USB_PIN_CHECK := 0
export USB_AUDIO_SEND_MONO ?= 1
export AUDIO_INPUT_MONO ?= 1
export BT_USB_AUDIO_DUAL_MODE = 1
export DELAY_STREAM_OPEN ?= 1
export USB_ISO ?= 1
endif
endif

ifeq ($(APP_USB_A2DP_SOURCE),1)
KBUILD_CPPFLAGS += -DCODEC_BUFF_FRAME_NUM=10
KBUILD_CPPFLAGS += -DUSB_BUFF_FRAME_NUM=12
endif

ifeq ($(BLE_USB_AUDIO_SUPPORT),1)
ifeq ($(AOB_LOW_LATENCY_MODE),1)
KBUILD_CPPFLAGS += -DCODEC_BUFF_FRAME_NUM=10
KBUILD_CPPFLAGS += -DUSB_BUFF_FRAME_NUM=12
else
KBUILD_CPPFLAGS += -DCODEC_BUFF_FRAME_NUM=20
KBUILD_CPPFLAGS += -DUSB_BUFF_FRAME_NUM=40
endif
export BLE_USB_AUDIO_OPTIMIZE_CON_FLOW ?= 1
ifeq ($(BLE_USB_AUDIO_OPTIMIZE_CON_FLOW),1)
KBUILD_CPPFLAGS += -DBLE_USB_AUDIO_OPTIMIZE_CON_FLOW
export BLE_USB_AUDIO_USE_LE_LAGACY_NO_SECURITY_CON ?= 1
ifeq ($(BLE_USB_AUDIO_USE_LE_LAGACY_NO_SECURITY_CON),1)
KBUILD_CPPFLAGS += -DBLE_USB_AUDIO_USE_LE_LAGACY_NO_SECURITY_CON
endif
endif
endif

export IBRT_UI ?= 1
ifeq ($(IBRT_UI),1)
KBUILD_CPPFLAGS += -DIBRT_UI
endif

export BES_AUD ?= 1

export POWER_MODE   ?= DIG_DCDC

export BT_RF_PREFER ?= 3M

export SPEECH_CODEC ?= 1

export MIX_AUDIO_PROMPT_WITH_A2DP_MEDIA_ENABLED ?= 0
export IOS_MFI ?= 0

# change the flash size to 0x1000000 if 1603 uses 16MB single flash die
export FLASH_SIZE ?= 0x800000

export FLASH_SUSPEND ?= 1

export FLASH_PROTECTION_BOOT_SECTION_FIRST ?= 0

export USE_MULTI_FLASH ?= 0
ifeq ($(USE_MULTI_FLASH),1)
export BTH_USE_SYS_FLASH ?= 1
export BTH_USE_SYS_PERIPH ?= 1
export FLASH1_SIZE ?= 0x800000
KBUILD_CPPFLAGS += \
        -DUSE_MULTI_FLASH \
        -DFLASH1_SIZE=$(FLASH1_SIZE)
LDS_CPPFLAGS += \
        -DUSE_MULTI_FLASH \
        -DFLASH1_SIZE=$(FLASH1_SIZE)
endif

export HOST_GEN_ECDH_KEY ?= 1

export SW_TRIG ?= 1

USE_THIRDPARTY ?= 0
export USE_KNOWLES ?= 0

export LAURENT_ALGORITHM ?= 0

export RX_IQ_CAL ?= 0

export DPD_ONCHIP_CAL ?= 1

export IBRT_DUAL_ANT_CTRL ?= 0

export BT_XTAL_SYNC ?= 0

export BTADDR_FOR_DEBUG ?= 0

export POWERKEY_I2C_SWITCH ?=0

AUTO_TEST ?= 0

BES_AUTOMATE_TEST ?= 0

export DUMP_LOG_ENABLE ?= 0

SUPPORT_BATTERY_REPORT ?= 1

SUPPORT_HF_INDICATORS ?= 0

SUPPORT_SIRI ?= 1

HAS_BT_SYNC ?= 1

DSP_HIFI4                  ?= 0

BTH_USE_SYS_FLASH         ?= 0

BTH_USE_SYS_PERIPH := 1

ifeq ($(DSP_HIFI4),1)
BTH_USE_SYS_SENS_PERIPH   ?= 1
#KBUILD_CPPFLAGS += -D__IPC_HIFI4_2_BTH_ONLY__
KBUILD_CPPFLAGS += -DDSP_HIFI4
export HIFI_DISABLE_CACHE ?= 0

export DSP_DEBUG_PORT_MAPOUT ?= 0
ifeq ($(DSP_DEBUG_PORT_MAPOUT),1)
export UART0_IOMUX_INDEX ?= 32
endif

export DSP_COMBINE_BIN ?= 1
ifeq ($(DSP_COMBINE_BIN),1)
KBUILD_CPPFLAGS += -DDSP_COMBINE_BIN=1
endif

export RMT_TRACE ?= 1
ifeq ($(RMT_TRACE),1)
export DSP_HIFI4_TRC_TO_MCU ?= 1
export RMT_TRC_IN_MSG_CHAN ?= 1
export RMT_TRC_INTVL_MS ?= 0
export TRACE_GLOBAL_TAG ?= 0
endif

endif

export AUDIO_ALGO_DSP_DEBUG ?= 0
ifeq ($(AUDIO_ALGO_DSP_DEBUG),1)
KBUILD_CPPFLAGS += -DAUDIO_ALGO_DSP_DEBUG
export M55_AUDIO_DUMP := 1
endif

export M55_AUDIO_DUMP ?= 0
ifeq ($(M55_AUDIO_DUMP),1)
KBUILD_CPPFLAGS += -DM55_AUDIO_DUMP
export DSP_M55_TRC_TO_MCU := 0
export DEBUG_PORT := 2
endif

ifeq ($(DSP_M55),1)
export DSP_M55_TRC_TO_MCU ?= 1
export RMT_TRC_IN_MSG_CHAN ?= 1
endif

#For free tws pairing feature
FREE_TWS_PAIRING_ENABLED ?= 0

APP_UART_MODULE ?= 0

ifeq ($(A2DP_LHDC_ON),1)
AUDIO_BUFFER_SIZE ?= 140*1024
else
AUDIO_BUFFER_SIZE ?= 150*1024
endif

export TX_IQ_CAL ?= 1

export AUDIO_OUTPUT_DC_AUTO_CALIB ?= 1
ifeq ($(AUDIO_OUTPUT_DC_AUTO_CALIB), 1)
export AUDIO_OUTPUT_DC_CALIB := 1
export AUDIO_OUTPUT_DC_CALIB_ANA := 0
export AUDIO_OUTPUT_DC_CALIB_DUAL_CHAN ?= 1
export AUDIO_OUTPUT_SET_LARGE_ANA_DC ?= 0
export AUDIO_OUTPUT_DIG_DC_DEEP_CALIB ?= 1
export AUDIO_OUTPUT_USE_FIXED_DC ?= 0
export DAC_DRE_ENABLE ?= 1
export AUDIO_ANA_DC_CALIB_USE_COMP_1603 ?= 1
export CODEC_DAC_DC_NV_DATA ?= 1
export CODEC_DAC_DC_DYN_BUF ?= 1
export CODEC_DAC_DC_CHECK ?= 0
endif

export TRACE_BUF_SIZE ?= 32*1024
export TRACE_BAUD_RATE ?= 10*115200
export BTM_MAX_LINK_NUMS ?= 3
export BT_DEVICE_NUM ?= 2

ifeq ($(PSAP_SW_APP),1)
export DMA_AUDIO_APP ?= 1
export DMA_AUDIO_APP_DYN_ON ?= 1
endif

export DMA_AUDIO_APP ?= 0
ifeq ($(DMA_AUDIO_APP),1)
export DMA_RPC_CLI ?= 1
DMA_AUD_CFG_PATH := $(CHIP)
include $(srctree)/config/$(DMA_AUD_CFG_PATH)/dma_aud_cfg.mk
endif

ifeq ($(BT_RAMRUN_NEW),1)
KBUILD_CPPFLAGS += -D__BT_RAMRUN_NEW__
KBUILD_CPPFLAGS += -DBTC_ROM_RAM_BASE=0xC04A0000 \
					-DBTC_ROM_RAM_SIZE=0x00020000*5
KBUILD_CPPFLAGS += -DBTH_RAM_SIZE=0x120000
KBUILD_CPPFLAGS += -DBT_SUBSYS_BASE=0xA0460000
KBUILD_CPPFLAGS += -DBT_RAM_BASE=0xC0540000
KBUILD_CPPFLAGS += -DBT_RAM_SIZE=0x00010000
KBUILD_CPPFLAGS += -DBT_CONTROLLER_CRASH_DUMP_ADDR_BASE=0xC0544060
export TWS_DO_NOT_ENTER_SNIFF ?= 1
else
KBUILD_CPPFLAGS += -DBTH_RAM_SIZE=0x120000
endif

##define BTH_RAM0_BASE                           0x20500000
##define BTH_RAM1_BASE                           0x20540000
##define BTH_RAM2_BASE                           0x20560000
##define BTH_RAM3_BASE                           0x20580000
##define BTH_RAM4_BASE                           0x205A0000
##define BTH_RAM5_BASE                           0x205C0000
##define BTH_RAM5_END                            0x205DFFFF

KBUILD_CPPFLAGS += -DSYS_RAM_SIZE=0

init-y :=
core-y := platform/ utils/cqueue/ utils/list/ multimedia/ utils/intersyshci/ utils/sha256/ utils/stream_mcps/

ifneq ($(EXT_SRC_DIR),)
core-y += $(EXT_SRC_DIR)
else
core-y += apps/ services/
endif

KBUILD_CPPFLAGS += \
    -Iplatform/cmsis/inc \
    -Iservices/audioflinger \
    -Iplatform/hal

KBUILD_CPPFLAGS += \
    -DAPP_AUDIO_BUFFER_SIZE=$(AUDIO_BUFFER_SIZE) \
    -DCHARGER_PLUGINOUT_RESET=0

KBUILD_CPPFLAGS += \
    -DBTM_MAX_LINK_NUMS=$(BTM_MAX_LINK_NUMS) \
    -DBT_DEVICE_NUM=$(BT_DEVICE_NUM)

ifeq ($(BES_AUDIO_DEV_Main_Board_9v0),1)
KBUILD_CPPFLAGS += -DBES_AUDIO_DEV_Main_Board_9v0
endif

ifeq ($(TPORTS_KEY_COEXIST),1)
KBUILD_CPPFLAGS += -DTPORTS_KEY_COEXIST
endif

ifeq ($(AUDIO_HEARING_COMPSATN),1)
HEARING_USE_STATIC_RAM := 1
ifeq ($(HEARING_MOD),HWFIR)
HW_FIR_EQ_PROCESS := 1
HEARING_MOD_VAL := 0
USE_CMSIS_FFT_LEN_1024 := 1
else
ifeq ($(HEARING_MOD),SWIIR)
SW_IIR_EQ_PROCESS := 1
HEARING_MOD_VAL := 1
else
HW_DAC_IIR_EQ_PROCESS := 1
HEARING_MOD_VAL := 2
endif
endif
endif

#-DIBRT_LINK_LOWLAYER_MONITOR

#-D_AUTO_SWITCH_POWER_MODE__
#-D__APP_KEY_FN_STYLE_A__
#-D__APP_KEY_FN_STYLE_B__
#-D__EARPHONE_STAY_BOTH_SCAN__
#-D__POWERKEY_CTRL_ONOFF_ONLY__
#-DAUDIO_LINEIN

ifeq ($(CURRENT_TEST),1)
export SMALL_RET_RAM ?= 1
export CORE_SLEEP_POWER_DOWN ?= 1
#INTSRAM_RUN ?= 1
endif
ifeq ($(INTSRAM_RUN),1)
LDS_FILE ?= best1000_intsram.lds
else
LDS_FILE ?= best1000.lds
endif

export OTA_SUPPORT_SLAVE_BIN ?= 0
ifeq ($(OTA_SUPPORT_SLAVE_BIN),1)
export SLAVE_BIN_FLASH_OFFSET ?= 0x100000
export SLAVE_BIN_TARGET_NAME ?= anc_usb
endif

ifeq ($(GATT_OVER_BR_EDR),1)
export GATT_OVER_BR_EDR ?= 1
KBUILD_CPPFLAGS += -D__GATT_OVER_BR_EDR__
endif

ifeq ($(BES_OTA),1)
# enabled when 1501 flash remap is ready
FLASH_REMAP ?= 1
endif

ifneq ($(A2DP_DECODER_VER), )
KBUILD_CPPFLAGS += -DA2DP_DECODER_VER=$(A2DP_DECODER_VER)
endif

ifneq ($(AUDIO_TRIGGER_VER), )
KBUILD_CPPFLAGS += -DAUDIO_TRIGGER_VER=$(AUDIO_TRIGGER_VER)
endif

ifeq ($(HOST_GEN_ECDH_KEY),1)
export HOST_GEN_FULL_ECDH_KEY ?= 1
ifeq ($(HOST_GEN_FULL_ECDH_KEY),1)
KBUILD_CPPFLAGS += -D__HOST_GEN_FULL_ECDH_KEY__
endif
KBUILD_CPPFLAGS += -D__HOST_GEN_ECDH_KEY__
endif

ifeq ($(SW_TRIG),1)
KBUILD_CPPFLAGS += -D__SW_TRIG__
endif

KBUILD_CPPFLAGS += -DHAL_TRACE_RX_ENABLE

ifeq ($(AUDIO_OUTPUT_DC_AUTO_CALIB),1)
KBUILD_CPPFLAGS += -DAUDIO_OUTPUT_DC_AUTO_CALIB
endif

ifeq ($(CODEC_DAC_DC_NV_DATA), 1)
KBUILD_CPPFLAGS += -DCODEC_DAC_DC_NV_DATA
endif

ifeq ($(REPORT_CONNECTIVITY_LOG),1)
KBUILD_CPPFLAGS += -D__CONNECTIVITY_LOG_REPORT__
KBUILD_CPPFLAGS += -D__AUDIO_RETRIGGER_REPORT__
endif

ifeq ($(SNYC_FOUND_CHECK_HECERROR),1)
KBUILD_CPPFLAGS += -D__SNYC_FOUND_CHECK_HECERROR__
endif

KBUILD_CFLAGS +=

LIB_LDFLAGS += -lstdc++ -lsupc++

DUAL_MIC_RECORDING ?= 0
RECORDING_USE_SCALABLE ?= 0
RECORDING_USE_OPUS ?= 0
RECORDING_USE_OPUS_LOWER_BANDWIDTH ?= 0

# BINAURAL_RECORD
BINAURAL_RECORD_PROCESS ?= 0
# export BINAURAL_RECORD_ADC_HIGH_SAMPLE_RATE ?= 192000
# export BINAURAL_RECORD_SAMPLE_RATE ?= 48000

ifneq ($(filter 192000,$(BINAURAL_RECORD_ADC_HIGH_SAMPLE_RATE)),)
KBUILD_CPPFLAGS += -DBINAURAL_RECORD_ADC_HIGH_SAMPLE_RATE=$(BINAURAL_RECORD_ADC_HIGH_SAMPLE_RATE)
endif

ifneq ($(filter 48000,$(BINAURAL_RECORD_SAMPLE_RATE)),)
KBUILD_CPPFLAGS += -DBINAURAL_RECORD_SAMPLE_RATE=$(BINAURAL_RECORD_SAMPLE_RATE)
endif
# BINAURAL_RECORD End

# mutex for power on tws pairing and freeman pairing
POWER_ON_ENTER_TWS_PAIRING_ENABLED ?= 0
POWER_ON_ENTER_FREEMAN_PAIRING_ENABLED ?= 0
POWER_ON_ENTER_BOTH_SCAN_MODE ?= 0

OS_THREAD_TIMING_STATISTICS_ENABLE ?= 0

# if VAD enabled, sensor hub always use large ram memory
ifeq ($(VOICE_DETECTOR_SENS_EN),1)
$(error Chip best1603 don`t have VAD or CODEC)
else
export VOICE_DETECTOR_SENS_EN ?= 0
export SENSOR_HUB ?= 0
endif

ifeq ($(SENSOR_HUB),1)
ifeq ($(SENS_RAM_SIZE),)
KBUILD_CPPFLAGS += -DSENS_RAM_SIZE=0x40000
endif
endif

ifeq ($(SNDP_VAD_ENABLE),1)
KBUILD_CPPFLAGS += -DSNDP_VAD_ENABLE
endif

# for usb mass storage class
ifeq ($(MSD_MODE),1)
KBUILD_CPPFLAGS += -DMSD_MODE
endif

BT_DONT_PLAY_MUTE_WHEN_A2DP_STUCK_PATCH ?= 1

KBUILD_CPPFLAGS += -DAAC_MTU_LIMITER=32
KBUILD_CPPFLAGS += -DAAC_MEMPOOL_SIZE=36*1024

PROMPT_SELF_MANAGEMENT ?= 1

AFH_ASSESS_GAIN ?= 2
KBUILD_CPPFLAGS += -DAFH_ASSESS_GAIN=$(AFH_ASSESS_GAIN)

export BLE_AUDIO_STARLORD_COMPATIBLE_SUPPORT ?= 0
ifeq ($(BLE_AUDIO_STARLORD_COMPATIBLE_SUPPORT),1)
KBUILD_CPPFLAGS += -DBLE_AUDIO_STARLORD_COMPATIBLE_SUPPORT
endif

export BLE_AUDIO_DOLPHIN_COMPATIBLE_SUPPORT ?= 1
ifeq ($(BLE_AUDIO_DOLPHIN_COMPATIBLE_SUPPORT),1)
KBUILD_CPPFLAGS += -DBLE_AUDIO_DOLPHIN_COMPATIBLE_SUPPORT
endif

# temp mecro for csip
export BLE_AUDIO_CSIP_SUPPORT ?= 1
ifeq ($(BLE_AUDIO_CSIP_SUPPORT),1)
KBUILD_CPPFLAGS += -DBLE_AUDIO_CSIP_SUPPORT
endif

#CFLAGS_IMAGE += -u _printf_float -u _scanf_float

#LDFLAGS_IMAGE += --wrap main

export SENS_TRC_TO_MCU ?= 0

export RPC_SUPPORT ?= 0

ifeq ($(RPC_SUPPORT),1)
KBUILD_CPPFLAGS += -DRPC_SUPPORT
endif

ifeq ($(SCO_CP_ACCEL_RPC),1)
KBUILD_CPPFLAGS += -DSCO_CP_ACCEL_RPC
endif

SINGLE_WIRE_UART_PMU ?= 1
ifeq ($(SINGLE_WIRE_UART_PMU),1)
KBUILD_CPPFLAGS += -DSINGLE_WIRE_UART_PMU
endif

export A2DP_DECODER_CROSS_CORE ?= 0
ifeq ($(A2DP_DECODER_CROSS_CORE),1)
KBUILD_CPPFLAGS += -DA2DP_DECODER_CROSS_CORE

export A2DP_DECODER_CROSS_CORE_USE_HIFI ?= 0
export A2DP_DECODER_CROSS_CORE_USE_M55 ?= 0
ifeq ($(A2DP_DECODER_CROSS_CORE_USE_M55),1)
KBUILD_CPPFLAGS += -DA2DP_DECODER_CROSS_CORE_USE_M55
else
A2DP_DECODER_CROSS_CORE_USE_HIFI := 1
KBUILD_CPPFLAGS += -DA2DP_DECODER_CROSS_CORE_USE_HIFI
endif
endif

export GAF_CODEC_CROSS_CORE ?= 0
ifeq ($(GAF_CODEC_CROSS_CORE),1)
KBUILD_CPPFLAGS += -DGAF_CODEC_CROSS_CORE

export GAF_ENCODER_CROSS_CORE_USE_M55 ?= 0
ifeq ($(GAF_ENCODER_CROSS_CORE_USE_M55),1)
KBUILD_CPPFLAGS += -DGAF_ENCODER_CROSS_CORE_USE_M55
endif

export GAF_DECODER_CROSS_CORE_USE_M55 ?= 0
ifeq ($(GAF_DECODER_CROSS_CORE_USE_M55),1)
KBUILD_CPPFLAGS += -DGAF_DECODER_CROSS_CORE_USE_M55
endif
endif

ifeq ($(BT_ITN_SGL_LNA),1)
KBUILD_CPPFLAGS += -DBT_ITN_SGL_LNA
export TXON_IOMUX_INDEX := 24
endif

IS_ALWAYS_KEEP_A2DP_TARGET_BUFFER_COUNT ?= 1

ifeq ($(A2DP_CP_ACCEL),1)
export FAST_XRAM_SECTION_SIZE ?= 0xa000
endif

ifeq ($(AOB_CODEC_CP),1)
KBUILD_CPPFLAGS += -DAOB_CODEC_CP
endif